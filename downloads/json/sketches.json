[
  {
    "_id": "cXmOSZ3IZ",
    "name": "ACTUAL SNAKE GAME V1",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67985a21a503d0f4b0fab595",
          "67985a21a503d0f4b0fab596",
          "67985a21a503d0f4b0fab597",
          "67985a21a503d0f4b0fab598"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67985a21a503d0f4b0fab594",
        "createdAt": "2025-01-28T14:11:36.997Z",
        "updatedAt": "2025-01-28T14:11:36.997Z",
        "id": "67985a21a503d0f4b0fab594"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@0.4.1/dist/ml5.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"snake.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67985a21a503d0f4b0fab595",
        "createdAt": "2025-01-28T14:11:36.997Z",
        "updatedAt": "2025-01-28T14:11:36.997Z",
        "id": "67985a21a503d0f4b0fab595"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67985a21a503d0f4b0fab598",
        "createdAt": "2025-01-28T14:11:36.997Z",
        "updatedAt": "2025-01-28T14:11:36.997Z",
        "id": "67985a21a503d0f4b0fab598"
      },
      {
        "name": "snake.js",
        "content": "class Snake {\n  constructor() {\n    this.body = [];\n    this.body[0] = createVector(floor(w / 2), floor(h / 2));\n    this.body[1] = createVector(floor(w / 2), floor(h / 2));\n    this.xdir = 0;\n    this.ydir = 0;\n    this.len = 0;\n    this.r = 0; // Default color\n    this.g = 0; // Default color\n    this.b = 0; // Default color\n  }\n\n  setDir(x, y) {\n    this.xdir = x;\n    this.ydir = y;\n  }\n\n  update() {\n    let head = this.body[this.body.length - 1].copy();\n    head.x += this.xdir;\n    head.y += this.ydir;\n\n    if (head.x < 0 || head.x >= w || head.y < 0 || head.y >= h) {\n      this.xdir = 0;\n      this.ydir = 0;\n      return; // Exit the function to prevent further updates\n    }\n    this.body.shift();\n    this.body.push(head);\n  }\n\n  grow() {\n    let head = this.body[this.body.length - 1].copy();\n    this.len++;\n    this.body.push(head);\n  }\n\n  eat(pos) {\n    let x = this.body[this.body.length - 1].x;\n    let y = this.body[this.body.length - 1].y;\n    if (x == pos.x && y == pos.y) {\n      this.colorUpdate();\n      return true;\n    }\n    return false;\n  }\n\n  colorUpdate() {\n    this.r = 255;\n    this.g = 0;\n    this.b = 255;\n  }\n  \n    stop(){\n    this.xdir = 0;\n    this.ydir = 0;\n    return; // Exit the function to prevent further updates\n  }\n\n  show() {\n    for (let i = 0; i < this.body.length; i++) {\n      if (i === 1) {\n        // This is the head of the snake\n        rectMode(CENTER);\n        fill(0,0,0);\n        rect(this.body[i].x, this.body[i].y, 1, 1);\n        fill(this.r, this.g, this.b);\n\n        rect(this.body[i].x, this.body[i].y, 0.93, 0.93);\n      } else if(i===0){\n        rectMode(CENTER);\n        fill(this.r, this.g, this.b);\n        noStroke();\n        rect(this.body[i].x, this.body[i].y, 1, 1);\n      }\n\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67985a21a503d0f4b0fab597",
        "createdAt": "2025-01-28T14:11:36.997Z",
        "updatedAt": "2025-01-28T14:11:36.997Z",
        "id": "67985a21a503d0f4b0fab597"
      },
      {
        "name": "sketch.js",
        "content": "// Daniel Shiffman\n// http://youtube.com/thecodingtrain\n// http://codingtra.in\n\n// Coding Challenge #115: Snake Game Redux\n// https://youtu.be/OMoVcohRgZA\n\nlet snake;\nlet rez = 20;\nlet food;\nlet w;\nlet h;\nlet r = 255;\nlet g = 0;\nlet b = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n  background(220);\n  w = floor(width / rez);\n  h = floor(height / rez);\n  frameRate(5);\n  snake = new Snake();\n  \n  foodLocation();\n  \n  saveButton = createButton(\"Save Design\");\n  saveButton.position(150, height + 10);\n  saveButton.mousePressed(saveDesign);\n}\n\nfunction foodLocation() {\n  let x = floor(random(w));\n  let y = floor(random(h));\n  food = createVector(x, y);\n}\n\nfunction keyPressed() {\n  if (keyCode === LEFT_ARROW) {\n    snake.setDir(-1, 0);\n  } else if (keyCode === RIGHT_ARROW) {\n    snake.setDir(1, 0);\n  } else if (keyCode === DOWN_ARROW) {\n    snake.setDir(0, 1);\n  } else if (keyCode === UP_ARROW) {\n    snake.setDir(0, -1);\n  } else if (key == \" \") {\n    snake.grow();\n  }\n}\n\nfunction draw() {\n  scale(rez);\n  translate(0.5, 0.5);\n\n  if (snake.eat(food)) {\n    snake.r = r;\n    snake.g = g;\n    snake.b = b;\n    foodLocation();\n    r = random(0, 255);\n    g = random(0, 255);\n    b = random(0, 255);\n  }\n  snake.update();\n  snake.show();\n\n  noStroke();\n  fill(0,0,0);\n  rect(food.x, food.y, 1, 1);\n  fill(r, g, b);\n  rect(food.x, food.y, 0.9, 0.9);\n}\n\nfunction saveDesign() { \n  fill(r, g, b);\n  rect(food.x, food.y, 1, 1);\n  for (let segment of snake.body) {\n    fill(snake.r, snake.g, snake.b); // Use the snake's color\n    rect(segment.x, segment.y, 1, 1);\n  }\n  saveCanvas(\"SnakeGame\", \"jpg\");\n}\n\nfunction mousePressed() {\n    snake.stop();\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67985a21a503d0f4b0fab596",
        "createdAt": "2025-01-28T14:11:36.997Z",
        "updatedAt": "2025-01-28T14:11:36.997Z",
        "id": "67985a21a503d0f4b0fab596"
      }
    ],
    "createdAt": "2025-01-28T04:16:33.169Z",
    "updatedAt": "2025-01-28T14:11:36.997Z",
    "id": "cXmOSZ3IZ"
  },
  {
    "_id": "RjXrPaj98",
    "name": "ACTUAL SNAKE GAME V1 copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67a03a31e9d2d5babef8a57f",
          "679ad2fdcd92c39cdb25b5bc",
          "679ad2fdcd92c39cdb25b5bd",
          "679ad2fdcd92c39cdb25b5be",
          "679ad2fdcd92c39cdb25b5bf"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "679ad2fdcd92c39cdb25b5bb",
        "createdAt": "2025-02-03T03:40:13.141Z",
        "updatedAt": "2025-02-03T03:40:13.141Z",
        "id": "679ad2fdcd92c39cdb25b5bb"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@0.4.1/dist/ml5.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"snake.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679ad2fdcd92c39cdb25b5bc",
        "createdAt": "2025-02-03T03:40:13.141Z",
        "updatedAt": "2025-02-03T03:40:13.141Z",
        "id": "679ad2fdcd92c39cdb25b5bc"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679ad2fdcd92c39cdb25b5bf",
        "createdAt": "2025-02-03T03:40:13.141Z",
        "updatedAt": "2025-02-03T03:40:13.141Z",
        "id": "679ad2fdcd92c39cdb25b5bf"
      },
      {
        "name": "snake.js",
        "content": "class Snake {\n  constructor() {\n    this.body = [];\n    this.body[0] = createVector(floor(w / 2), floor(h / 2));\n    this.body[1] = createVector(floor(w / 2), floor(h / 2));\n    this.xdir = 0;\n    this.ydir = 0;\n    this.len = 0;\n    this.r = 0; // Default color\n    this.g = 0; // Default color\n    this.b = 0; // Default color\n  }\n\n  setDir(x, y) {\n    this.xdir = x;\n    this.ydir = y;\n  }\n\n  update() {\n    let head = this.body[this.body.length - 1].copy();\n    head.x += this.xdir;\n    head.y += this.ydir;\n\n    if (head.x < 5 || head.x >= w - 5 || head.y < 5 || head.y >= h - 5) {\n      this.xdir = 0;\n      this.ydir = 0;\n      return; // Exit the function to prevent further updates\n    }\n    this.body.shift();\n    this.body.push(head);\n  }\n\n  grow() {\n    let head = this.body[this.body.length - 1].copy();\n    this.len++;\n    this.body.push(head);\n  }\n\n  eat(pos) {\n    let x = this.body[this.body.length - 1].x;\n    let y = this.body[this.body.length - 1].y;\n    if (x == pos.x && y == pos.y) {\n      this.colorUpdate();\n      return true;\n    }\n    return false;\n  }\n\n  colorUpdate() {\n    this.r = 255;\n    this.g = 0;\n    this.b = 255;\n  }\n  \n    stop(){\n    this.xdir = 0;\n    this.ydir = 0;\n    return; // Exit the function to prevent further updates\n  }\n\n  show() {\n    for (let i = 0; i < this.body.length; i++) {\n      if (i === 1) {\n        // This is the head of the snake\n        rectMode(CENTER);\n        fill(0,0,0);\n        rect(this.body[i].x, this.body[i].y, 1, 1);\n        fill(this.r, this.g, this.b);\n\n        rect(this.body[i].x, this.body[i].y, 0.93, 0.93);\n      } else if(i===0){\n        rectMode(CENTER);\n        fill(this.r, this.g, this.b);\n        noStroke();\n        rect(this.body[i].x, this.body[i].y, 1, 1);\n      }\n\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679ad2fdcd92c39cdb25b5be",
        "createdAt": "2025-02-03T03:40:13.141Z",
        "updatedAt": "2025-02-03T03:40:13.141Z",
        "id": "679ad2fdcd92c39cdb25b5be"
      },
      {
        "name": "sketch.js",
        "content": "// Daniel Shiffman\n// http://youtube.com/thecodingtrain\n// http://codingtra.in\n\n// Coding Challenge #115: Snake Game Redux\n// https://youtu.be/OMoVcohRgZA\n\nlet snake;\nlet rez = 20;\nlet food;\nlet w;\nlet h;\nlet r = 255;\nlet g = 0;\nlet b = 0;\nlet Canvas;\n\nfunction preload() {\n  Canvas = loadImage('Canvas.png');\n}\n\nfunction setup() {\n  \n  createCanvas(600, 600);\n  background(0);\n  w = floor(width / rez);\n  h = floor(height / rez);\n  frameRate(5);\n  snake = new Snake();\n  \n  foodLocation();\n  \n  saveButton = createButton(\"Save Design\");\n  saveButton.position(250, height + 10);\n  saveButton.mousePressed(saveDesign);\n  \n  image(Canvas, 0, 0);\n}\n\nfunction foodLocation() {\n  let x = floor(random(5, w -5));\n  let y = floor(random(5, h-5));\n  food = createVector(x, y);\n}\n\nfunction keyPressed() {\n  if (keyCode === LEFT_ARROW) {\n    snake.setDir(-1, 0);\n  } else if (keyCode === RIGHT_ARROW) {\n    snake.setDir(1, 0);\n  } else if (keyCode === DOWN_ARROW) {\n    snake.setDir(0, 1);\n  } else if (keyCode === UP_ARROW) {\n    snake.setDir(0, -1);\n  } else if (key == \" \") {\n    snake.grow();\n  }\n}\n\nfunction draw() {\n  scale(rez);\n  translate(0.5, 0.5);\n\n  if (snake.eat(food)) {\n    snake.r = r;\n    snake.g = g;\n    snake.b = b;\n    foodLocation();\n    r = random(0, 255);\n    g = random(0, 255);\n    b = random(0, 255);\n  }\n  snake.update();\n  snake.show();\n\n  noStroke();\n  fill(0,0,0);\n  rect(food.x, food.y, 1, 1);\n  fill(r, g, b);\n  rect(food.x, food.y, 0.9, 0.9);\n  \n}\n\nfunction saveDesign() { \n  fill(r, g, b);\n  rect(food.x, food.y, 1, 1);\n  for (let segment of snake.body) {\n    fill(snake.r, snake.g, snake.b); // Use the snake's color\n    rect(segment.x, segment.y, 1, 1);\n  }\n  saveCanvas(\"SnakeGame\", \"jpg\");\n}\n\nfunction mousePressed() {\n    snake.stop();\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "679ad2fdcd92c39cdb25b5bd",
        "createdAt": "2025-02-03T03:40:13.141Z",
        "updatedAt": "2025-02-03T03:40:13.141Z",
        "id": "679ad2fdcd92c39cdb25b5bd"
      },
      {
        "name": "Canvas.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/31f48c6e-36f2-4a25-a251-ceaa36e90c6e.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a03a31e9d2d5babef8a57f",
        "createdAt": "2025-02-03T03:40:13.141Z",
        "updatedAt": "2025-02-03T03:40:13.141Z",
        "id": "67a03a31e9d2d5babef8a57f"
      }
    ],
    "createdAt": "2025-01-30T01:16:45.634Z",
    "updatedAt": "2025-02-03T03:40:13.141Z",
    "id": "RjXrPaj98"
  },
  {
    "_id": "RKe0bYF9q",
    "name": "ACTUAL SNAKE GAME V2",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67a03b8f8363edfbcf17437e",
          "6798658da503d0f4b0fab59a",
          "6798658da503d0f4b0fab59b",
          "6798658da503d0f4b0fab59c",
          "6798658da503d0f4b0fab59d"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6798658da503d0f4b0fab599",
        "createdAt": "2025-02-03T03:45:26.914Z",
        "updatedAt": "2025-02-03T03:45:26.914Z",
        "id": "6798658da503d0f4b0fab599"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@0.4.1/dist/ml5.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"snake.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6798658da503d0f4b0fab59a",
        "createdAt": "2025-02-03T03:45:26.914Z",
        "updatedAt": "2025-02-03T03:45:26.914Z",
        "id": "6798658da503d0f4b0fab59a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6798658da503d0f4b0fab59d",
        "createdAt": "2025-02-03T03:45:26.914Z",
        "updatedAt": "2025-02-03T03:45:26.914Z",
        "id": "6798658da503d0f4b0fab59d"
      },
      {
        "name": "snake.js",
        "content": "class Snake {\n  constructor() {\n    this.body = [];\n    this.body[0] = createVector(floor(w / 2), floor(h / 2));\n    this.body[1] = createVector(floor(w / 2), floor(h / 2));\n    this.xdir = 0;\n    this.ydir = 0;\n    this.len = 0;\n    this.r = 0; // Default color\n    this.g = 0; // Default color\n    this.b = 0; // Default color\n  }\n\n  setDir(x, y) {\n    this.xdir = x;\n    this.ydir = y;\n  }\n\n  update() {\n    let head = this.body[this.body.length - 1].copy();\n    head.x += this.xdir;\n    head.y += this.ydir;\n\n    if (head.x < 5 || head.x >= w -5 || head.y < 5 || head.y >= h-5) {\n      this.xdir = 0;\n      this.ydir = 0;\n      return; // Exit the function to prevent further updates\n    }\n    this.body.shift();\n    this.body.push(head);\n  }\n\n  grow() {\n    let head = this.body[this.body.length - 1].copy();\n    this.len++;\n    this.body.push(head);\n  }\n\n  eat(pos) {\n    let x = this.body[this.body.length - 1].x;\n    let y = this.body[this.body.length - 1].y;\n    if (x == pos.x && y == pos.y) {\n      this.colorUpdate();\n      return true;\n    }\n    return false;\n  }\n\n  colorUpdate() {\n    this.r = 255;\n    this.g = 0;\n    this.b = 255;\n  }\n\n  show() {\n    for (let i = 0; i < this.body.length; i++) {\n      if (i === 1) {\n        // This is the head of the snake\n        rectMode(CENTER);\n        fill(0,0,0);\n        rect(this.body[i].x, this.body[i].y, 1, 1);\n        fill(this.r, this.g, this.b);\n\n        rect(this.body[i].x, this.body[i].y, 0.93, 0.93);\n      } else if(i===0){\n        rectMode(CENTER);\n        fill(this.r, this.g, this.b);\n        noStroke();\n        rect(this.body[i].x, this.body[i].y, 1, 1);\n      }\n\n    }\n  }\n  \n  stop(){\n    this.xdir = 0;\n    this.ydir = 0;\n    return; // Exit the function to prevent further updates\n  }\n}\n\nfunction mousePressed() {\n    snake.stop();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6798658da503d0f4b0fab59c",
        "createdAt": "2025-02-03T03:45:26.914Z",
        "updatedAt": "2025-02-03T03:45:26.914Z",
        "id": "6798658da503d0f4b0fab59c"
      },
      {
        "name": "sketch.js",
        "content": "// Daniel Shiffman\n// http://youtube.com/thecodingtrain\n// http://codingtra.in\n\n// Coding Challenge #115: Snake Game Redux\n// https://youtu.be/OMoVcohRgZA\n\nlet snake;\nlet rez = 20;\nlet food;\nlet w;\nlet h;\nlet r = 255;\nlet g = 0;\nlet b = 0;\nlet eraser;\nlet mousePress = false;\nlet Canvas;\n\nfunction preload() {\n  Canvas = loadImage('Canvas.png');\n}\n\nfunction setup() {\n  createCanvas(600, 600);\n  background(0);\n  w = floor(width / rez);\n  h = floor(height / rez);\n  frameRate(5);\n  snake = new Snake();\n\n  foodLocation();\n  eraserLocation();\n\n  saveButton = createButton(\"Save Design\");\n  saveButton.position(150, height + 10);\n  saveButton.mousePressed(saveDesign);\n  \n  image(Canvas, 0, 0);\n}\n\nfunction foodLocation() {\n  let x = floor(10);\n  let y = floor(20);\n  food = createVector(x, y);\n}\n\nfunction eraserLocation() {\n  let x1 = floor(15);\n  let y1 = floor(15);\n  eraser = createVector(x1, y1);\n}\n\nfunction keyPressed() {\n  if (keyCode === LEFT_ARROW) {\n    snake.setDir(-1, 0);\n  } else if (keyCode === RIGHT_ARROW) {\n    snake.setDir(1, 0);\n  } else if (keyCode === DOWN_ARROW) {\n    snake.setDir(0, 1);\n  } else if (keyCode === UP_ARROW) {\n    snake.setDir(0, -1);\n  } else if (key == \" \") {\n    snake.grow();\n  }\n}\n\nfunction draw() {\n  scale(rez);\n  translate(0.5, 0.5);\n\n  if (snake.eat(food)) {\n    snake.r = r;\n    snake.g = g;\n    snake.b = b;\n    foodLocation();\n    r = random(0, 255);\n    g = random(0, 255);\n    b = random(0, 255);\n  } else if (snake.eat(eraser)) {\n    snake.r = 255;\n    snake.g = 255;\n    snake.b = 255;\n    eraserLocation();\n  }\n  snake.update();\n  snake.show();\n  noStroke();\n  //////////////////////////////\n\n  fill(0, 0, 0);\n  rect(food.x, food.y, 1, 1);\n  fill(r, g, b);\n  rect(food.x, food.y, 0.9, 0.9);\n  fill(snake.r, snake.g, b);\n  rect(snake.body.x, snake.body.y, 0.9, 0.9);\n\n  /////////////////////////////\n\n  fill(0, 0, 0);\n  rect(eraser.x, eraser.y, 1, 1);\n  fill(255);\n  rect(eraser.x, eraser.y, 0.9, 0.9);\n}\n\nfunction saveDesign() {\n  fill(255);\n  rect(eraser.x, eraser.y, 1, 1);\n  fill(r, g, b);\n  rect(food.x, food.y, 1, 1);\n  \n  for (let segment of snake.body) {\n    fill(snake.r, snake.g, snake.b); // Use the snake's color\n    rect(segment.x, segment.y, 1, 1);\n  }\n  saveCanvas(\"SnakeGame\", \"jpg\");\n}\n\nfunction mousePressed() {\n    snake.stop();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6798658da503d0f4b0fab59b",
        "createdAt": "2025-02-03T03:45:26.914Z",
        "updatedAt": "2025-02-03T03:45:26.914Z",
        "id": "6798658da503d0f4b0fab59b"
      },
      {
        "name": "Canvas.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/c54e120b-89a1-4f8f-a1c1-a5eb1283f743.png",
        "children": [],
        "fileType": "file",
        "_id": "67a03b8f8363edfbcf17437e",
        "createdAt": "2025-02-03T03:45:26.914Z",
        "updatedAt": "2025-02-03T03:45:26.914Z",
        "id": "67a03b8f8363edfbcf17437e"
      }
    ],
    "createdAt": "2025-01-28T05:05:17.545Z",
    "updatedAt": "2025-02-03T03:45:26.914Z",
    "id": "RKe0bYF9q"
  },
  {
    "_id": "pOShe9QNx",
    "name": "ACTUAL SNAKE GAME V2 copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67a03bf62513052b195fb8bd",
          "67a03bf62513052b195fb8be",
          "67a03bf62513052b195fb8bf",
          "67a03bf62513052b195fb8c0",
          "67a03bf62513052b195fb8c1"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67a03bf62513052b195fb8bc",
        "createdAt": "2025-02-03T03:54:40.720Z",
        "updatedAt": "2025-02-03T03:54:40.720Z",
        "id": "67a03bf62513052b195fb8bc"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@0.4.1/dist/ml5.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"snake.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a03bf62513052b195fb8be",
        "createdAt": "2025-02-03T03:54:40.720Z",
        "updatedAt": "2025-02-03T03:54:40.720Z",
        "id": "67a03bf62513052b195fb8be"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a03bf62513052b195fb8c1",
        "createdAt": "2025-02-03T03:54:40.720Z",
        "updatedAt": "2025-02-03T03:54:40.720Z",
        "id": "67a03bf62513052b195fb8c1"
      },
      {
        "name": "snake.js",
        "content": "class Snake {\n  constructor() {\n    this.body = [];\n    this.body[0] = createVector(floor(w / 2), floor(h / 2));\n    this.body[1] = createVector(floor(w / 2), floor(h / 2));\n    this.xdir = 0;\n    this.ydir = 0;\n    this.len = 0;\n    this.r = 0; // Default color\n    this.g = 0; // Default color\n    this.b = 0; // Default color\n  }\n\n  setDir(x, y) {\n    this.xdir = x;\n    this.ydir = y;\n  }\n\n  update() {\n    let head = this.body[this.body.length - 1].copy();\n    head.x += this.xdir;\n    head.y += this.ydir;\n\n    if (head.x < 5 || head.x >= w -5 || head.y < 5 || head.y >= h-5) {\n      this.xdir = 0;\n      this.ydir = 0;\n      return; // Exit the function to prevent further updates\n    }\n    this.body.shift();\n    this.body.push(head);\n  }\n\n  grow() {\n    let head = this.body[this.body.length - 1].copy();\n    this.len++;\n    this.body.push(head);\n  }\n\n  eat(pos) {\n    let x = this.body[this.body.length - 1].x;\n    let y = this.body[this.body.length - 1].y;\n    if (x == pos.x && y == pos.y) {\n      this.colorUpdate();\n      return true;\n    }\n    return false;\n  }\n\n  colorUpdate() {\n    this.r = 255;\n    this.g = 0;\n    this.b = 255;\n  }\n\n  show() {\n    for (let i = 0; i < this.body.length; i++) {\n      if (i === 1) {\n        // This is the head of the snake\n        rectMode(CENTER);\n        fill(0,0,0);\n        rect(this.body[i].x, this.body[i].y, 1, 1);\n        fill(this.r, this.g, this.b);\n\n        rect(this.body[i].x, this.body[i].y, 0.93, 0.93);\n      } else if(i===0){\n        rectMode(CENTER);\n        fill(this.r, this.g, this.b);\n        noStroke();\n        rect(this.body[i].x, this.body[i].y, 1, 1);\n      }\n\n    }\n  }\n  \n  stop(){\n    this.xdir = 0;\n    this.ydir = 0;\n    return; // Exit the function to prevent further updates\n  }\n}\n\nfunction mousePressed() {\n    snake.stop();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a03bf62513052b195fb8c0",
        "createdAt": "2025-02-03T03:54:40.720Z",
        "updatedAt": "2025-02-03T03:54:40.720Z",
        "id": "67a03bf62513052b195fb8c0"
      },
      {
        "name": "sketch.js",
        "content": "// Daniel Shiffman\n// http://youtube.com/thecodingtrain\n// http://codingtra.in\n\n// Coding Challenge #115: Snake Game Redux\n// https://youtu.be/OMoVcohRgZA\n\nlet snake;\nlet rez = 20;\nlet food;\nlet w;\nlet h;\nlet r = 255;\nlet g = 0;\nlet b = 0;\nlet eraser;\nlet mousePress = false;\nlet Canvas;\n\nfunction preload() {\n  Canvas = loadImage('Canvas.png');\n}\n\nfunction setup() {\n  createCanvas(600, 600);\n  background(0);\n  w = floor(width / rez);\n  h = floor(height / rez);\n  frameRate(5);\n  snake = new Snake();\n\n  foodLocation();\n  eraserLocation();\n\n  saveButton = createButton(\"Save Design\");\n  saveButton.position(150, height + 10);\n  saveButton.mousePressed(saveDesign);\n  \n  image(Canvas, 0, 0);\n  noStroke();\n  fill(255, 255, 243);\n  rect(100, 100, 400, 400);\n}\n\nfunction foodLocation() {\n  let x = floor(8);\n  let y = floor(8);\n  food = createVector(x, y);\n}\n\nfunction eraserLocation() {\n  let x1 = floor(22);\n  let y1 = floor(22);\n  eraser = createVector(x1, y1);\n}\n\nfunction keyPressed() {\n  if (keyCode === LEFT_ARROW) {\n    snake.setDir(-1, 0);\n  } else if (keyCode === RIGHT_ARROW) {\n    snake.setDir(1, 0);\n  } else if (keyCode === DOWN_ARROW) {\n    snake.setDir(0, 1);\n  } else if (keyCode === UP_ARROW) {\n    snake.setDir(0, -1);\n  } else if (key == \" \") {\n    snake.grow();\n  }\n}\n\nfunction draw() {\n  scale(rez);\n  translate(0.5, 0.5);\n\n  if (snake.eat(food)) {\n    snake.r = r;\n    snake.g = g;\n    snake.b = b;\n    foodLocation();\n    r = random(0, 255);\n    g = random(0, 255);\n    b = random(0, 255);\n  } else if (snake.eat(eraser)) {\n    snake.r = 255;\n    snake.g = 255;\n    snake.b = 243;\n    eraserLocation();\n  }\n  snake.update();\n  snake.show();\n  noStroke();\n  //////////////////////////////\n\n  fill(0, 0, 0);\n  rect(food.x, food.y, 1, 1);\n  fill(r, g, b);\n  rect(food.x, food.y, 0.9, 0.9);\n  fill(snake.r, snake.g, b);\n  rect(snake.body.x, snake.body.y, 0.9, 0.9);\n\n  /////////////////////////////\n\n  fill(0, 0, 0);\n  rect(eraser.x, eraser.y, 1, 1);\n  fill(255, 255, 243);\n  rect(eraser.x, eraser.y, 0.9, 0.9);\n}\n\nfunction saveDesign() {\n  fill(255, 255, 243);\n  rect(eraser.x, eraser.y, 1, 1);\n  fill(r, g, b);\n  rect(food.x, food.y, 1, 1);\n  \n  for (let segment of snake.body) {\n    fill(snake.r, snake.g, snake.b); // Use the snake's color\n    rect(segment.x, segment.y, 1, 1);\n  }\n  saveCanvas(\"SnakeGame\", \"jpg\");\n}\n\nfunction mousePressed() {\n    snake.stop();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67a03bf62513052b195fb8bf",
        "createdAt": "2025-02-03T03:54:40.720Z",
        "updatedAt": "2025-02-03T03:54:40.720Z",
        "id": "67a03bf62513052b195fb8bf"
      },
      {
        "name": "Canvas.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/7ae015f5-feb1-4813-8d26-4b826b0dc896.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a03bf62513052b195fb8bd",
        "createdAt": "2025-02-03T03:54:40.720Z",
        "updatedAt": "2025-02-03T03:54:40.720Z",
        "id": "67a03bf62513052b195fb8bd"
      }
    ],
    "createdAt": "2025-02-03T03:45:58.810Z",
    "updatedAt": "2025-02-03T03:54:40.720Z",
    "id": "pOShe9QNx"
  },
  {
    "_id": "HyiU0zsIo",
    "name": "Amusing guarantee",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6705ae31d07340796e9c8d95",
          "6705ab50d07340796e9c8d94",
          "6705ab46d07340796e9c8d91",
          "6705ab46d07340796e9c8d90",
          "6705ab46d07340796e9c8d92"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6705ab46d07340796e9c8d93",
        "createdAt": "2024-10-08T22:28:17.759Z",
        "updatedAt": "2024-10-08T22:28:17.759Z",
        "id": "6705ab46d07340796e9c8d93"
      },
      {
        "name": "sketch.js",
        "content": "let unibaby;\nlet logo;\nlet x = 0;\nlet y = 0;\n//this is important to declare it outside of this function\n\nfunction preload(){\n  //unibaby = loadImage(\"clapping.jpg\");\n  logo = loadImage(\"LOGO COLOR.png\");\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(0);\n  x ++;\n  y ++;\n  //image(unibaby, x, y, 300, 230);\n  image(logo, 0, 0);\n  //fourth and fifth variables change the image to fit the canvas size. Compress or stretch\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6705ab46d07340796e9c8d90",
        "createdAt": "2024-10-08T22:28:17.759Z",
        "updatedAt": "2024-10-08T22:28:17.759Z",
        "id": "6705ab46d07340796e9c8d90"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6705ab46d07340796e9c8d91",
        "createdAt": "2024-10-08T22:28:17.759Z",
        "updatedAt": "2024-10-08T22:28:17.759Z",
        "id": "6705ab46d07340796e9c8d91"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6705ab46d07340796e9c8d92",
        "createdAt": "2024-10-08T22:28:17.759Z",
        "updatedAt": "2024-10-08T22:28:17.759Z",
        "id": "6705ab46d07340796e9c8d92"
      },
      {
        "name": "clapping.jpg",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/e02e391a-5cbf-4344-b34e-435f61e3bcbd.jpg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6705ab50d07340796e9c8d94",
        "createdAt": "2024-10-08T22:28:17.759Z",
        "updatedAt": "2024-10-08T22:28:17.759Z",
        "id": "6705ab50d07340796e9c8d94"
      },
      {
        "name": "LOGO COLOR.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/d6ce5730-d708-442e-93c0-803b5c1a5ee7.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6705ae31d07340796e9c8d95",
        "createdAt": "2024-10-08T22:28:17.759Z",
        "updatedAt": "2024-10-08T22:28:17.759Z",
        "id": "6705ae31d07340796e9c8d95"
      }
    ],
    "updatedAt": "2024-10-08T22:28:17.759Z",
    "createdAt": "2024-10-08T22:28:17.759Z",
    "id": "HyiU0zsIo"
  },
  {
    "_id": "p0wcUyN5f",
    "name": "Balsam pike",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6723cb8f391fbcecddf7a63f",
          "6723cb8f391fbcecddf7a63e",
          "6723cb8f391fbcecddf7a640"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6723cb8f391fbcecddf7a641",
        "createdAt": "2024-10-31T20:53:12.822Z",
        "updatedAt": "2024-10-31T20:53:12.822Z",
        "id": "6723cb8f391fbcecddf7a641"
      },
      {
        "name": "sketch.js",
        "content": "let osc; // Oscillator variable\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  // Create an oscillator\n  osc = new p5.Oscillator('sine'); // Use 'sine', 'square', 'triangle', or 'sawtooth' waveforms\n  osc.start(); // Start the oscillator\n  osc.amp(0); // Set the initial amplitude to 0 (silence)\n}\n\nfunction draw() {\n  background(220);\n  textAlign(CENTER);\n  text('Click to play a tone', width / 2, height / 2);\n    // Set the frequency of the oscillator (in Hz)\n  let freq = 440; // Frequency for the tone (A4)\n  \n  // Set the oscillator frequency and amplitude\n  osc.freq(440);\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6723cb8f391fbcecddf7a63e",
        "createdAt": "2024-10-31T20:53:12.822Z",
        "updatedAt": "2024-10-31T20:53:12.822Z",
        "id": "6723cb8f391fbcecddf7a63e"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.0/p5.js\"></script>\n    <script\n            src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6723cb8f391fbcecddf7a63f",
        "createdAt": "2024-10-31T20:53:12.822Z",
        "updatedAt": "2024-10-31T20:53:12.822Z",
        "id": "6723cb8f391fbcecddf7a63f"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6723cb8f391fbcecddf7a640",
        "createdAt": "2024-10-31T20:53:12.822Z",
        "updatedAt": "2024-10-31T20:53:12.822Z",
        "id": "6723cb8f391fbcecddf7a640"
      }
    ],
    "updatedAt": "2024-10-31T20:53:12.822Z",
    "createdAt": "2024-10-31T18:27:37.834Z",
    "id": "p0wcUyN5f"
  },
  {
    "_id": "LI0zuV_CK",
    "name": "Burly specialist",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "676751d98dc7afab3cd417cb",
          "676751d98dc7afab3cd417ca",
          "676751d98dc7afab3cd417cc"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "676751d98dc7afab3cd417cd",
        "createdAt": "2024-12-22T00:18:15.913Z",
        "updatedAt": "2024-12-22T00:18:15.913Z",
        "id": "676751d98dc7afab3cd417cd"
      },
      {
        "name": "sketch.js",
        "content": "let balls = []; // Array to store multiple balls\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  // Create multiple balls at the beginning\n  for (let i = 0; i < 5; i++) {\n    balls.push(new Ball(random(50, width - 50), random(50, height - 50), random(2, 5), random(2, 5)));\n  }\n}\n\nfunction draw() {\n  background(50);\n\n  // Update and display all balls\n  for (let i = 0; i < balls.length; i++) {\n    balls[i].update();\n    balls[i].display();\n    \n    // Check for collision with other balls\n    for (let j = i + 1; j < balls.length; j++) {\n      balls[i].checkCollision(balls[j]);\n    }\n  }\n}\n\n// Ball class to handle each ball's properties and behavior\nclass Ball {\n  constructor(x, y, speedX, speedY) {\n    this.pos = createVector(x, y);\n    this.vel = createVector(speedX, speedY);\n    this.gravity = createVector(0, 0.3); // Gravity\n    this.rad = 25; // Radius of the ball\n  }\n\n  update() {\n    this.vel.add(this.gravity); // Apply gravity to velocity\n    this.pos.add(this.vel); // Update position based on velocity\n\n    // Ball collision with bottom edge\n    if (this.pos.y > height - this.rad) {\n      this.pos.y = height - this.rad;\n      this.vel.y *= -0.9; // Bounce back with some energy loss\n    }\n\n    // Ball collision with left and right edges\n    if (this.pos.x > width - this.rad || this.pos.x < this.rad) {\n      this.vel.x *= -1; // Reverse horizontal velocity on collision\n    }\n  }\n\n  display() {\n    noStroke();\n    fill(255, 100, 100); // Red balls\n    ellipse(this.pos.x, this.pos.y, this.rad * 2); // Draw the ball\n  }\n\n  // Check for collision with another ball\n  checkCollision(other) {\n    let distance = dist(this.pos.x, this.pos.y, other.pos.x, other.pos.y);\n    \n    // Check if the balls are overlapping (collision)\n    if (distance < this.rad + other.rad) {\n      // Get the direction of the collision\n      let normal = p5.Vector.sub(other.pos, this.pos);\n      normal.normalize();\n\n      // Calculate relative velocity along the normal\n      let relativeVel = p5.Vector.sub(this.vel, other.vel);\n      let velocityAlongNormal = relativeVel.dot(normal);\n      \n      // If the balls are moving towards each other, apply collision response\n      if (velocityAlongNormal < 0) {\n        let restitution = 0.9; // Energy loss factor during collision (elasticity)\n        \n        // Calculate the impulse scalar\n        let impulse = (2 * velocityAlongNormal) / (this.rad + other.rad);\n        \n        // Apply the impulse to both balls' velocities\n        this.vel.sub(p5.Vector.mult(normal, impulse * other.rad * restitution));\n        other.vel.add(p5.Vector.mult(normal, impulse * this.rad * restitution));\n        \n        // Move the balls apart to prevent them from sticking together\n        let overlap = this.rad + other.rad - distance;\n        let correction = normal.mult(overlap / 2);\n        this.pos.sub(correction);\n        other.pos.add(correction);\n      }\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "676751d98dc7afab3cd417ca",
        "createdAt": "2024-12-22T00:18:15.913Z",
        "updatedAt": "2024-12-22T00:18:15.913Z",
        "id": "676751d98dc7afab3cd417ca"
      },
      {
        "name": "index.html",
        "content": "<div id=\"particle-container\"></div>\n<style>\n  /* Prevent scrolling */\n  html, body {\n    height: 100%;\n    margin: 0;\n    overflow: hidden; /* Hide the scrollbar */\n  }\n\n  #particle-container {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n</style>\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n<script>\nlet particles = [];\nlet followingParticle; // Particle that will follow the mouse\n\nfunction setup() {\n  // Set the canvas size to match the window size\n  let canvas = createCanvas(window.innerWidth, window.innerHeight);\n  canvas.parent('particle-container'); // Attach the canvas to the container\n\n  drawingContext.shadowBlur = 30; // Adjust the blur intensity\n  drawingContext.shadowColor = color(255); // White glow effect\n\n  // Create multiple particles\n  for (let i = 0; i < 10; i++) {\n    let x = random(width / 2 - 200, width / 2 + 200);\n    let y = random(height / 2 - 150, height / 2 + 150);\n    particles.push(new Particle(x, y));\n  }\n  \n  // Choose one particle to follow the mouse (for example, the first one)\n  followingParticle = particles[0]; // You can change the index to choose which particle to follow\n}\n\nfunction draw() {\n  background(0, 150);\n  resizeCanvas(window.innerWidth, window.innerHeight); // Resize canvas to window size\n\n  // Update the position of the following particle to mouse position\n  followingParticle.position.x = mouseX;\n  followingParticle.position.y = mouseY;\n\n  // Update and display all particles\n  for (let i = 0; i < particles.length; i++) {\n    let particleA = particles[i];\n    for (let j = i + 1; j < particles.length; j++) {\n      let particleB = particles[j];\n      particleA.collide(particleB);\n    }\n  }\n\n  // Update and show each particle, but skip the one following mouse\n  for (let particle of particles) {\n    if (particle !== followingParticle) { // Skip the one following the mouse\n      particle.update();\n      particle.edges();\n      fill(255, 255, 80, 100);\n      particle.show();\n    }\n  }\n}\n\nfunction keyPressed() {\n  if (!fullscreen()) {\n    fullscreen(true);\n  }\n}\n\n// Particle class\nclass Particle {\n  constructor(x, y) {\n    this.position = createVector(x, y);\n    this.velocity = p5.Vector.random2D();\n    this.velocity.mult(random(1, 2));\n    this.acceleration = createVector(0, 0);\n    this.mass = random(7, 16);\n    this.r = sqrt(this.mass) * 15;\n\n    // Gravity vector\n    this.gravity = createVector(0, 0.1); // Simulate gravity pulling downward\n  }\n\n  applyForce(force) {\n    let f = force.copy();\n    f.div(this.mass);\n    this.acceleration.add(f);\n  }\n\n  update() {\n    // Apply gravity to acceleration\n    this.acceleration.add(this.gravity);\n    this.velocity.add(this.acceleration);\n    this.position.add(this.velocity);\n    this.acceleration.mult(0);\n  }\n\n  collide(other) {\n    let impactVector = p5.Vector.sub(other.position, this.position);\n    let d = impactVector.mag();\n    if (d < this.r + other.r) {\n      let overlap = d - (this.r + other.r);\n      let dir = impactVector.copy();\n      dir.setMag(overlap * 0.5);\n      this.position.add(dir);\n      other.position.sub(dir);\n\n      d = this.r + other.r;\n      impactVector.setMag(d);\n\n      let mSum = this.mass + other.mass;\n      let vDiff = p5.Vector.sub(other.velocity, this.velocity);\n      let num = vDiff.dot(impactVector);\n      let den = mSum * d * d;\n      let deltaVA = impactVector.copy();\n      deltaVA.mult(2 * other.mass * num / den);\n      this.velocity.add(deltaVA);\n\n      let deltaVB = impactVector.copy();\n      deltaVB.mult(-2 * this.mass * num / den);\n      other.velocity.add(deltaVB);\n    }\n  }\n\n  edges() {\n    if (this.position.x > width - 20 - this.r) {\n      this.position.x = width - 20 - this.r;\n      this.velocity.x *= -1;\n    } else if (this.position.x < this.r + 20) {\n      this.position.x = this.r + 20;\n      this.velocity.x *= -1;\n    }\n\n    if (this.position.y > height - 20 - this.r) {\n      this.position.y = height - 20 - this.r;\n      this.velocity.y *= -1;\n    } else if (this.position.y < this.r + 20) {\n      this.position.y = this.r + 20;\n      this.velocity.y *= -1;\n    }\n  }\n\n  show() {\n    noStroke();\n    ellipse(this.position.x, this.position.y, this.r * 2, this.r * 2); // Draw a circle\n  }\n}\n</script>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "676751d98dc7afab3cd417cb",
        "createdAt": "2024-12-22T00:18:15.913Z",
        "updatedAt": "2024-12-22T00:18:15.913Z",
        "id": "676751d98dc7afab3cd417cb"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "676751d98dc7afab3cd417cc",
        "createdAt": "2024-12-22T00:18:15.913Z",
        "updatedAt": "2024-12-22T00:18:15.913Z",
        "id": "676751d98dc7afab3cd417cc"
      }
    ],
    "updatedAt": "2024-12-22T00:18:15.913Z",
    "createdAt": "2024-12-22T00:18:15.913Z",
    "id": "LI0zuV_CK"
  },
  {
    "_id": "JEjBbkoTR",
    "name": "Canyon temper",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67460cb7fff31e542b069e05",
          "67460cb7fff31e542b069e04",
          "67460cb7fff31e542b069e06"
        ],
        "fileType": "folder",
        "_id": "67460cb7fff31e542b069e07",
        "createdAt": "2024-11-26T18:01:05.013Z",
        "updatedAt": "2024-11-26T18:01:05.013Z",
        "id": "67460cb7fff31e542b069e07"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n  circle(width/2, height/2, 30, 30);\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67460cb7fff31e542b069e04",
        "createdAt": "2024-11-26T18:01:05.013Z",
        "updatedAt": "2024-11-26T18:01:05.013Z",
        "id": "67460cb7fff31e542b069e04"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "67460cb7fff31e542b069e05",
        "createdAt": "2024-11-26T18:01:05.013Z",
        "updatedAt": "2024-11-26T18:01:05.013Z",
        "id": "67460cb7fff31e542b069e05"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "67460cb7fff31e542b069e06",
        "createdAt": "2024-11-26T18:01:05.013Z",
        "updatedAt": "2024-11-26T18:01:05.013Z",
        "id": "67460cb7fff31e542b069e06"
      }
    ],
    "updatedAt": "2024-11-26T18:01:05.013Z",
    "createdAt": "2024-11-26T18:01:05.013Z",
    "id": "JEjBbkoTR"
  },
  {
    "_id": "iuStmSetB",
    "name": "Chambray gargoyle",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "674fd6e71f0bac3b5daefc99",
          "674fd6e71f0bac3b5daefc98",
          "674fd6e71f0bac3b5daefc9a"
        ],
        "fileType": "folder",
        "_id": "674fd6e71f0bac3b5daefc9b",
        "createdAt": "2024-12-04T04:13:37.630Z",
        "updatedAt": "2024-12-04T04:13:37.630Z",
        "id": "674fd6e71f0bac3b5daefc9b"
      },
      {
        "name": "sketch.js",
        "content": "let positions = [];\nlet colorData = [null, null, null, null];\nlet originalColor = [null, null, null, null];\nlet colorFrozen = [false, false, false, false];\nlet freezeTime = [null, null, null, null];\nlet fullscreenStarted = false;\nlet bgo = 0;\nlet checkInterval = 500; // Interval in milliseconds for pixel loading\nlet lastCheckTime = 0;\n\n// Individual video variables\nlet video0, video1, video2;\nlet currentVideo = null; // Tracks the current video being played\nlet videoStarted = false;\nlet delayTimer;\nlet clickCount = 0; // Counter to track the number of clicks\n\nlet images = [];\nlet imageCount = 7\nlet flowersVisible = false; // Controls whether flowers are shown\n\n//////////////////////////////////\n//////////////////////\n//simplified template. for longer story //https://editor.p5js.org/rios/sketches/wtZvFIkW5\n\nconst askForPort = false; //true first time to pick port, then change to false\nconst serial = new p5.WebSerial();\nlet portButton;\nlet inData;\nlet outData;\n\nlet video0Sent = false;\nlet video1Sent = false;\nlet video2Sent = false;\n\nfunction preload() {\n  // Load videos individually\n  video0 = createVideo(\"./Video0.mp4\");\n  video1 = createVideo(\"./Video1.mp4\");\n  video2 = createVideo(\"./Video2.mp4\");\n\n  for (let i = 5; i <= 11; i++) {\n    images.push(loadImage(`flowers${i}.png`)); \n  }\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  video = createCapture(VIDEO);\n\n  video.size(width, height);\n  video.hide();\n  colorMode(RGB, 255);\n\n  let ctx = drawingContext;\nctx.willReadFrequently = true; // Enable frequent pixel reads\n\n  // Setup individual videos\n  setupVideo(video0);\n  setupVideo(video1);\n  setupVideo(video2);\n\n\n    ///////////////////////////////////\n    if (askForPort) {\n      makePortButton();\n    } else {\n      serial.getPorts(); //skip the button use port from last time\n    }\n    serial.on(\"portavailable\", openPort);\n    serial.on(\"data\", serialEvent);\n}\n\nfunction setupVideo(vid) {\n  vid.size(700, 525);\n  vid.hide(); // Hide video elements\n  vid.onended(handleVideoEnd); // Handle video end\n}\n\nfunction draw() {\n  resizeCanvas(windowWidth, windowHeight);\n  console.log(windowHeight);\n  // Only load pixels at specified intervals\n  if (millis() - lastCheckTime > checkInterval) {\n    video.loadPixels(); // Ensure we're working with the latest frame\n    lastCheckTime = millis();\n  }\n\n  // Display the webcam feed on the canvas\n  image(video, 0, 0, width, height);\n\n  // Loop through the positions and store the most recent color for each circle\n  for (let i = 0; i < positions.length; i++) {\n    let pos = positions[i];\n    let colorAtPos = getAverageColor(pos.x, pos.y); // Get averaged color\n\n    if (!colorFrozen[i]) {\n      if (originalColor[i]) {\n        let colorDiff = colorDifference(originalColor[i], colorAtPos);\n        if (colorDiff > 90 && freezeTime[i] === null) {\n          freezeTime[i] = millis();\n        }\n      } else {\n        originalColor[i] = colorAtPos;\n      }\n\n      if (freezeTime[i] !== null && millis() - freezeTime[i] > 1500) {\n        colorFrozen[i] = true;\n      }\n\n      if (!colorFrozen[i]) {\n        colorData[i] = colorAtPos;\n      }\n    }\n\n    // Draw a circle at the sample position to show where we're sampling\n    fill(colorData[i] || colorAtPos);\n    stroke(0);\n    strokeWeight(4);\n    ellipse(pos.x, pos.y, 20, 20);\n  }\n\n  // Draw four rectangles using the stored color from each color array\n  let rectWidth = width / 4;\n  for (let i = 0; i < 4; i++) {\n    if (colorData[i]) {\n      fill(colorData[i]);\n      noStroke();\n      rect(i * rectWidth, height - 100, rectWidth, 100);\n    }\n  }\n  background(0, bgo);\n  // Set background to black and start video when fourth color freezes\n  if (colorFrozen[3] && !videoStarted) {\n\n  setTimeout(() => {\n    serial.write(1); // Send the serial message after 2 seconds\n    video0Sent = true; // Mark that the video has been sent\n  }, 3000);\n  \n    bgo = 255;\n    videoStarted = true;\n    setTimeout(() => {\n      playVideo(video0); // Start the first video\n    }, 5000);\n  }\n\n\n\n  // Display the current video if started\n  if (videoStarted && currentVideo) {\n    imageMode(CENTER);\n    // Update position based on the current video\n    if (currentVideo === video0 && video0Sent == false) {\n      console.log(\"Sending to Arduino:\", 1);\n      serial.write(1);\n      video1Sent = true;\n      image(currentVideo, 350, windowHeight / 2); // Position video to the left\n    } else if (currentVideo === video1 && video1Sent == false) {\n      image(currentVideo, windowWidth - 350, windowHeight / 2); // Position video in the center\n      video1Sent = true;\n    } else if (currentVideo === video2 && video2Sent == false) {\n      video2Sent = true;\n      image(currentVideo, windowWidth - 350, windowHeight / 2); // Position video to the right\n    }\n  }\n  if (flowersVisible) {  \n      for (let i = 0; i < 3; i++) {\n        if (images[i] && colorData[i]) {\n          tint(colorData[i]); // Apply the corresponding color from colorData\n          imageMode(CENTER);\n          image(images[i], 300, windowHeight / 2 - 50, 1280 * 7/16, 1602 * 7/16); // Adjust size as needed\n        }\n    }\n    noTint(); // Clear the tint effect after drawing flowers\n  }\n}\n\nfunction mousePressed() {\n  if (\n    positions.length < 4 &&\n    mouseX >= 0 &&\n    mouseX < width &&\n    mouseY >= 0 &&\n    mouseY < height\n  ) {\n    positions.push(createVector(mouseX, mouseY));\n  }\n\n    // Increment the click counter\n    clickCount++;\n\n    // If 4 clicks have been registered, set bgo to 255\n    // if (clickCount >= 4) {\n    //   bgo = 255;\n    // }\n}\n\n// Play the specified video\nfunction playVideo(video) {\n  currentVideo = video;\n  // video.show();\n  video.play();\n}\n\n// Handle video end to play the next video\nfunction handleVideoEnd() {\n\n  if (currentVideo === video0) {\n    currentVideo.hide();\n    setTimeout(() => {\n      showFlowers(); // Show flowers after a delay\n    }, 2000); // 2-second delay before showing flowers\n    noTint();\n    serial.write(1);\n    delayTimer = setTimeout(() => playVideo(video1), 7000); // 7-second delay before playing the next video\n  } else if (currentVideo === video1) {\n    serial.write(1);\n    imageMode(CENTER);\n    image(currentVideo, windowWidth / 2, windowHeight / 2); // Position video at the center\n    delayTimer = setTimeout(() => playVideo(video2), 2000);\n  } else if (currentVideo === video2) {\n    imageMode(CENTER);\n    image(currentVideo, windowWidth - (290), windowHeight / 2); // Position video to the right\n\n    currentVideo.hide(); // Hide the last video\n    serial.write(2);\n  }\n}\n\nfunction showFlowers() {\n  flowersVisible = true; // Set flowers to be visible\n}\n\n// Calculate color difference\nfunction colorDifference(c1, c2) {\n  let r1 = red(c1);\n  let g1 = green(c1);\n  let b1 = blue(c1);\n  let r2 = red(c2);\n  let g2 = green(c2);\n  let b2 = blue(c2);\n\n  return dist(r1, g1, b1, r2, g2, b2);\n}\n\n// Get averaged color at a position\nfunction getAverageColor(x, y, size = 0) {\n  let r = 0,\n    g = 0,\n    b = 0;\n  let count = 0;\n  for (let dx = -size; dx <= size; dx++) {\n    for (let dy = -size; dy <= size; dy++) {\n      let col = video.get(x + dx, y + dy);\n      r += red(col);\n      g += green(col);\n      b += blue(col);\n      count++;\n    }\n  }\n  return color(r / count, g / count, b / count);\n}\n\n\nfunction keyPressed() {\n  if (!fullscreen()) {\n    fullscreen(true);\n    fullscreenStarted = true; // Track if fullscreen has started\n    // bgo = 255;\n  }\n}\n\n////////////////////////\n///////////////////////////A CALLBACK FUNCTION CALLED WHEN DATA COMES IN  ///  \n///////////////////////////\n\nfunction serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  if (inString) {\n    inData = split(inString, \",\");\n  }\n}\n\n\nfunction openPort() {\n  serial.open()\n  if (portButton) portButton.hide();\n}\n\n// This is a convenience for picking from available serial ports:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(() =>serial.requestPort());\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "674fd6e71f0bac3b5daefc98",
        "createdAt": "2024-12-04T04:13:37.630Z",
        "updatedAt": "2024-12-04T04:13:37.630Z",
        "id": "674fd6e71f0bac3b5daefc98"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "674fd6e71f0bac3b5daefc99",
        "createdAt": "2024-12-04T04:13:37.630Z",
        "updatedAt": "2024-12-04T04:13:37.630Z",
        "id": "674fd6e71f0bac3b5daefc99"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "674fd6e71f0bac3b5daefc9a",
        "createdAt": "2024-12-04T04:13:37.630Z",
        "updatedAt": "2024-12-04T04:13:37.630Z",
        "id": "674fd6e71f0bac3b5daefc9a"
      }
    ],
    "updatedAt": "2024-12-04T04:13:37.630Z",
    "createdAt": "2024-12-04T04:13:37.630Z",
    "id": "iuStmSetB"
  },
  {
    "_id": "lTmFwnYXZ",
    "name": "circle size changing",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6721b376fb23cd4423312ca3",
          "6721b376fb23cd4423312ca4"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6721b376fb23cd4423312ca2",
        "createdAt": "2024-10-30T04:31:12.477Z",
        "updatedAt": "2024-10-30T04:31:12.477Z",
        "id": "6721b376fb23cd4423312ca2"
      },
      {
        "name": "index.html",
        "content": "<!--\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\n  Learn more about the ml5.js project: https://ml5js.org/\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\n\n  This example demonstrates hand tracking on live video through ml5.handPose.\n-->\n\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ml5.js handPose Webcam Example</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6721b376fb23cd4423312ca3",
        "createdAt": "2024-10-30T04:31:12.477Z",
        "updatedAt": "2024-10-30T04:31:12.477Z",
        "id": "6721b376fb23cd4423312ca3"
      },
      {
        "name": "sketch.js",
        "content": "let handPose;\nlet video;\nlet hands = [];\n\nfunction preload() {\n  // Load the handPose model\n  handPose = ml5.handPose();\n}\n\nfunction setup() {\n  createCanvas(640, 480);\n  // Create the webcam video and hide it\n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n  // start detecting hands from the webcam video\n  handPose.detectStart(video, gotHands);\n}\n\nfunction draw() {\n  // Draw the webcam video\n  image(video, 0, 0, width, height);\n  if (hands.length > 0) {\n    let hand = hands[0];\n    let index = hand.index_finger_tip;\n    let thumb = hand.thumb_tip;\n    fill(255, 0, 255);\n    noStroke();\n    \n    let d = dist(index.x, index.y, thumb.x, thumb.y);\n    if(d < 20){\n      fill(0, 0, 255);\n    }\n    \n    let x = (index.x + thumb.x)/2\n    let y = (index.y + thumb.y)/2;\n    \n    circle(x, y, d);\n  }\n}\n\n// Callback function for when handPose outputs data\nfunction gotHands(results) {\n  // save the output to the hands variable\n  hands = results;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6721b376fb23cd4423312ca4",
        "createdAt": "2024-10-30T04:31:12.477Z",
        "updatedAt": "2024-10-30T04:31:12.477Z",
        "id": "6721b376fb23cd4423312ca4"
      }
    ],
    "createdAt": "2024-10-30T04:17:57.481Z",
    "updatedAt": "2024-10-30T04:31:12.477Z",
    "id": "lTmFwnYXZ"
  },
  {
    "_id": "ivhRr3RiW",
    "name": "Code for 3 wire things",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "671c8b8fc8dafa328bd07be0",
          "671c8b8fc8dafa328bd07bdf",
          "671c8b8fc8dafa328bd07be1"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "671c8b8fc8dafa328bd07be2",
        "createdAt": "2024-10-26T07:26:24.551Z",
        "updatedAt": "2024-10-26T07:26:24.551Z",
        "id": "671c8b8fc8dafa328bd07be2"
      },
      {
        "name": "sketch.js",
        "content": "const askForPort = true;\nlet portButton;\nlet inData;\n//let sensor1 = 0;\nlet position;\nlet fullscreenStarted = false;\nlet port;\nlet reader;\nlet trail = [];\n\nasync function setup() {\n  createCanvas(400, 400);\n  textSize(32);\n\n  if (!(\"serial\" in navigator)) {\n    alert(\"WebSerial is not supported. Please use Chrome.\");\n    return;\n  }\n\n  if (askForPort) {\n    makePortButton();\n  } else {\n    getPorts(); // Retrieve previous port if available\n  }\n}\n\nfunction draw() {\n  background(0);\n  if (!isNaN(inData)) {  // Check if inData is a valid number\n    position = map(inData, 0, 400, 0, width); // Adjust range if needed\n    text(\"Distance: \" + inData + \" cm\", 100, 100);\n  } else {\n    text(\"Waiting for data...\", 100, 100);\n  }\n  \n\n   background(0);\n    fill(255, 50);\n    noStroke(0);\n    \n    // Center position\n    let centerX = width / 2;\n    let centerY = height / 2;\n    let numCircles = 120; \n    \n    // Loop to draw circles in a circular pattern\n    for (let i = 0; i < numCircles; i++) {\n        // Calculate angle for current circle\n        let angle = map(i, 0, numCircles, 0, TWO_PI); // map to a full circle\n      let circleRadius = random(5, 13); \n      let distanceFromCenter = random(80, 100); \n\n\n        let x = position + cos(angle) * distanceFromCenter;\n        let y = centerY + sin(angle) * distanceFromCenter;\n        \n        // Draw the smaller circle\n        circle(x, y, circleRadius);\n    }\n      drawingContext.shadowBlur = 30; // Adjust the blur intensity\n    drawingContext.shadowColor = color(255); // White glow effect\n}\n\n\n//function serialEvent(value) {\n // inData = value.split(\",\");\n//}\n\nfunction serialEvent(value) {\n  console.log(\"Received data:\", value); // Check if data is being received\n  inData = parseInt(value.trim()); // Convert to an integer\n}\n\nasync function openPort(selectedPort) {\n  try {\n    port = selectedPort;\n    await port.open({ baudRate: 9600 });\n    if (portButton) portButton.hide();\n\n    const textDecoder = new TextDecoderStream();\n    port.readable.pipeTo(textDecoder.writable);\n    reader = textDecoder.readable.getReader();\n\n    readSerialData(); // Begin reading data\n  } catch (error) {\n    console.error(\"Failed to open serial port:\", error);\n    alert(\"Failed to open serial port. Please try again.\");\n  }\n}\n\nasync function readSerialData() {\n  while (true) {\n    const { value, done } = await reader.read();\n    if (done) {\n      console.log(\"Stream closed.\");\n      reader.releaseLock();\n      break;\n    }\n    serialEvent(value.trim());\n  }\n}\n\nfunction makePortButton() {\n  portButton = createButton(\"Choose Port\");\n  portButton.position(10, 10);\n  portButton.mousePressed(requestPort);\n}\n\nasync function requestPort() {\n  try {\n    const selectedPort = await navigator.serial.requestPort();\n    openPort(selectedPort);\n  } catch (error) {\n    console.error(\"Port selection was canceled.\");\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "671c8b8fc8dafa328bd07bdf",
        "createdAt": "2024-10-26T07:26:24.551Z",
        "updatedAt": "2024-10-26T07:26:24.551Z",
        "id": "671c8b8fc8dafa328bd07bdf"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671c8b8fc8dafa328bd07be0",
        "createdAt": "2024-10-26T07:26:24.551Z",
        "updatedAt": "2024-10-26T07:26:24.551Z",
        "id": "671c8b8fc8dafa328bd07be0"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671c8b8fc8dafa328bd07be1",
        "createdAt": "2024-10-26T07:26:24.551Z",
        "updatedAt": "2024-10-26T07:26:24.551Z",
        "id": "671c8b8fc8dafa328bd07be1"
      }
    ],
    "updatedAt": "2024-10-26T07:26:24.551Z",
    "createdAt": "2024-10-26T06:26:31.599Z",
    "id": "ivhRr3RiW"
  },
  {
    "_id": "FRMcMwBXB",
    "name": "Cooing debt",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6789d194706f2ea3247f0aec",
          "6789d194706f2ea3247f0aeb",
          "6789d194706f2ea3247f0aed"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6789d194706f2ea3247f0aee",
        "createdAt": "2025-01-19T17:51:24.084Z",
        "updatedAt": "2025-01-19T17:51:24.084Z",
        "id": "6789d194706f2ea3247f0aee"
      },
      {
        "name": "sketch.js",
        "content": "let Petals;\nlet Layers = 10;\nlet Radius = 30;\nlet increaseRadius = 20;\n\nfunction setup() {\n  createCanvas(400, 400);\n  angleMode(DEGREES); // Use degrees for easier rotation calculation\n  \n  PetalsSlider = createSlider(3, 20, 8, 1);\n  PetalsSlider.position(10, height + 10);\n  PetalsSlider.size(200);\n  \n  LayersSlider = createSlider(1, 10, 2, 1);\n  LayersSlider.position(10, height + 30);\n  LayersSlider.size(200);\n  \n  IRSlider = createSlider(5, 30, 20, 2.5);\n  IRSlider.position(10, height + 50);\n  IRSlider.size(200);\n  \n\n}\n\nfunction draw() {\n  background(0);\n  \n  Petals = PetalsSlider.value();\n  Layers = LayersSlider.value();\n  increaseRadius = IRSlider.value();\n  \n  \n  \n  translate(width / 2, height / 2); // Move to the center of the canvas\n\n  stroke(150, 50, 200); // Set line color\n  strokeWeight(2); // Line thickness\n\n  for (p = Layers; p > 0; p--) {\n    let currentRadius = Radius + increaseRadius * (p - 1);\n    for (i = 0; i < Petals; i++) {\n      fill(\n        150 + p * (105 / (Layers + 0.5)),\n        50 + p * (205 / (Layers + 0.5)),\n        200 + p * (45 / (Layers + 0.5))\n      );\n\n      curve(\n        -currentRadius,\n        0,\n        0,\n        0,\n        0,\n        currentRadius,\n        -currentRadius,\n        currentRadius\n      );\n\n      curve(\n        currentRadius,\n        0,\n        0,\n        0,\n        0,\n        currentRadius,\n        currentRadius,\n        currentRadius\n      );\n\n      rotate(360 / Petals);\n    }\n    if (p % 2 === 0) {\n      rotate(360 / (2 * Petals)); // Offset rotation for even layers\n    }\n  }\n\n  fill(200, 180, 0);\n  noStroke();\n  ellipse(0, 0, 20, 20);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6789d194706f2ea3247f0aeb",
        "createdAt": "2025-01-19T17:51:24.084Z",
        "updatedAt": "2025-01-19T17:51:24.084Z",
        "id": "6789d194706f2ea3247f0aeb"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6789d194706f2ea3247f0aec",
        "createdAt": "2025-01-19T17:51:24.084Z",
        "updatedAt": "2025-01-19T17:51:24.084Z",
        "id": "6789d194706f2ea3247f0aec"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6789d194706f2ea3247f0aed",
        "createdAt": "2025-01-19T17:51:24.084Z",
        "updatedAt": "2025-01-19T17:51:24.084Z",
        "id": "6789d194706f2ea3247f0aed"
      }
    ],
    "updatedAt": "2025-01-19T17:51:24.084Z",
    "createdAt": "2025-01-19T17:51:24.084Z",
    "id": "FRMcMwBXB"
  },
  {
    "_id": "PH_ePMBJi",
    "name": "CORRECT API BASIC",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6736e8ff8755a37ea55b8e7e",
          "6736e8ff8755a37ea55b8e7f",
          "6736e8ff8755a37ea55b8e80"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6736e8ff8755a37ea55b8e7d",
        "createdAt": "2024-11-15T16:02:53.277Z",
        "updatedAt": "2024-11-15T16:02:53.277Z",
        "id": "6736e8ff8755a37ea55b8e7d"
      },
      {
        "name": "sketch.js",
        "content": "const replicateProxy = \"https://replicate-api-proxy.glitch.me/create_n_get/\"\nlet feedback;\n\nfunction setup() {\n    feedback = createP(\"\");\n    let input_field = createInput(\"A sunny day with friends on the grass\");\n    input_field.id(\"input_prompt\");\n    input_field.size(450);\n    let myButton = createButton(\"AskWords\");\n    myButton.mousePressed(() => {\n        askForWords(input_field.value());\n    });\n}\n\nfunction draw() {\n\n}\n\n\nasync function askForWords(p_prompt) {\n    document.body.style.cursor = \"progress\";\n    feedback.html(\"Waiting for reply from API...\");\n    const data = {\n        \"version\": \"2d19859030ff705a87c746f7e96eea03aefb71f166725aee39692f1476566d48\",\n        input: {\n            prompt:  \"give me hex codes for html colors the reflect the emotions in this prompt: \" + p_prompt + \". Please return the hex codes as json of the following structure: {\\\"hexCodes\\\": [\\\"hex code 1\\\", \\\"hex code 2\\\", \\\"hex code 3\\\"]} Don't return any text except for the JSON. Don't give an explaination after\"\n        },\n    };\n    console.log(\"Asking for Words From Replicate via Proxy\", data);\n    let options = {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: 'application/json',\n        },\n        body: JSON.stringify(data),\n    };\n\n    console.log(\"words url\", replicateProxy, \"words options\", options);\n    const words_response = await fetch(replicateProxy, options);\n    //turn it into json\n    const proxy_said = await words_response.json();\n    console.log(\"words_json\", proxy_said);\n    console.log(proxy_said[0]);\n    if (proxy_said.output.length == 0) {\n        feedback.html(\"Something went wrong, try it again\");\n    } else {\n      console.log(proxy_said);\n        feedback.html(\"\");\n        console.log(\"proxy_said\", proxy_said.output.join(\"\"));\n        let incomingText = proxy_said.output.join(\"\");\n       let JSONResponse = JSON.parse(incomingText);\n      console.log(JSONResponse.hexCodes[0]);\n        createP(incomingText);\n    }\n    document.body.style.cursor = \"auto\";\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6736e8ff8755a37ea55b8e7f",
        "createdAt": "2024-11-15T16:02:53.277Z",
        "updatedAt": "2024-11-15T16:02:53.277Z",
        "id": "6736e8ff8755a37ea55b8e7f"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.8.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.8.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6736e8ff8755a37ea55b8e7e",
        "createdAt": "2024-11-15T16:02:53.277Z",
        "updatedAt": "2024-11-15T16:02:53.277Z",
        "id": "6736e8ff8755a37ea55b8e7e"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6736e8ff8755a37ea55b8e80",
        "createdAt": "2024-11-15T16:02:53.277Z",
        "updatedAt": "2024-11-15T16:02:53.277Z",
        "id": "6736e8ff8755a37ea55b8e80"
      }
    ],
    "createdAt": "2024-11-15T06:23:59.821Z",
    "updatedAt": "2024-11-15T16:02:53.277Z",
    "id": "PH_ePMBJi"
  },
  {
    "_id": "MW86qkwYL",
    "name": "Data Vis 3 sketch 2",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d44ca2bf80f41c5e0a55e8",
          "67d44ca2bf80f41c5e0a55e9",
          "67d44ca2bf80f41c5e0a55ea"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d44ca2bf80f41c5e0a55e7",
        "createdAt": "2025-03-14T17:43:15.356Z",
        "updatedAt": "2025-03-14T17:43:15.356Z",
        "id": "67d44ca2bf80f41c5e0a55e7"
      },
      {
        "name": "sketch.js",
        "content": "var Strength = 40;\nvar v = 40;\nlet numMax = 10;\nlet t = 0;\nlet h = 0.001;\nlet particles = [];\nlet particlecount = 0;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  background(0);\n  setInterval(numMaxincrease, 500);\n  for (let i = 0; i < numMax; i++) {\n    let valX = random(-width / 2, width / 2);\n    let valY = random(-height / 2, height / 2);\n    particles[i] = new Particle(valX, valY, t, h);\n  }\n}\n\nfunction draw() {\n  noCursor();\n  cursor(HAND);\n\n  translate(width / 2, height / 2);\n  fill(0, 20);\n  stroke(0);\n  strokeWeight(2);\n  rect(-width / 2, -height / 2, width, height);\n\n  t += h;\n\n  // Add new particles if numMax increases\n  while (particles.length < numMax) {\n    let valX = random(-width / 2, width / 2);\n    let valY = random(-height / 2, height / 2);\n    particles.push(new Particle(valX, valY, t, h));\n  }\n  \n  \n  for (let i = particles.length - 1; i >= 0; i--) {\n    let p = particles[i];\n    p.update();\n    p.display();\n    if (\n      p.x > width / 2 ||\n      p.y > height / 2 ||\n      p.x < -width / 2 ||\n      p.y < -height / 2\n    ) {\n      particles.splice(i, 1);\n      particles.push(new Particle(-width / 2, random(-height / 2, height / 2), t, h));\n      particlecount ++;\n      console.log(particlecount);\n      \n    }\n  }\n}\n\nclass Particle {\n  constructor(_x, _y, _t, _h) {\n    this.x = _x;\n    this.y = _y;\n    this.time = _t;\n    this.radius = random(0.4, 2);\n    this.h = _h;\n    this.op = random(199, 200);\n    this.r = 255;\n    this.g = random(60, 140);\n    this.b = random(60, 140);\n    this.speedX = random(1, 3);\n    this.speedY = random(-1, 1);\n    this.acceleration = random(0.01, 0.05);\n    this.angle = random(TWO_PI);\n  }\n\n  update() {\n    this.speedX += this.acceleration;\n    this.x += this.speedX;\n    this.y += sin(this.angle) * 2; // Sine wave vertical motion\n    this.angle += 0.05; // Continuous smooth oscillation\n    this.time += this.h;\n  }\n\n  display() {\n    fill(this.r, this.b, this.g, this.op);\n    noStroke();\n    ellipse(-this.x, this.y, 2 * this.radius, 2 * this.radius);\n  }\n}\n\nfunction doubleClicked() {\n  background(0);\n}\n\nfunction numMaxincrease(){\n  if(particlecount >= 6000){\n    numMax --;\n  } else if(particlecount <= 0){\n      numMax = pow(numMax, 5);\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67d44ca2bf80f41c5e0a55e9",
        "createdAt": "2025-03-14T17:43:15.356Z",
        "updatedAt": "2025-03-14T17:43:15.356Z",
        "id": "67d44ca2bf80f41c5e0a55e9"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d44ca2bf80f41c5e0a55e8",
        "createdAt": "2025-03-14T17:43:15.356Z",
        "updatedAt": "2025-03-14T17:43:15.356Z",
        "id": "67d44ca2bf80f41c5e0a55e8"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d44ca2bf80f41c5e0a55ea",
        "createdAt": "2025-03-14T17:43:15.356Z",
        "updatedAt": "2025-03-14T17:43:15.356Z",
        "id": "67d44ca2bf80f41c5e0a55ea"
      }
    ],
    "createdAt": "2025-03-14T15:34:58.731Z",
    "updatedAt": "2025-03-14T17:43:15.356Z",
    "id": "MW86qkwYL"
  },
  {
    "_id": "3XKazGCLZ",
    "name": "deletable",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "673664e25eae2c60983a47c8",
          "673664e25eae2c60983a47c9",
          "673664e25eae2c60983a47ca"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "673664e25eae2c60983a47c7",
        "createdAt": "2024-11-14T21:11:04.421Z",
        "updatedAt": "2024-11-14T21:11:04.421Z",
        "id": "673664e25eae2c60983a47c7"
      },
      {
        "name": "sketch.js",
        "content": "const replicateProxy = \"https://replicate-api-proxy.glitch.me\"\nlet feedback;\n\nfunction setup() {\n    feedback = createP(\"\");\n    let input_field = createInput(\"Why should learn to use a machine learning API?\");\n    input_field.id(\"input_prompt\");\n    input_field.size(450);\n    let myButton = createButton(\"AskWords\");\n    myButton.mousePressed(() => {\n        askForWords(input_field.value());\n    });\n}\n\nfunction draw() {\n\n}\n\n\nasync function askForWords(p_prompt) {\n    document.body.style.cursor = \"progress\";\n    feedback.html(\"Waiting for reply from API...\");\n    const data = {\n        \"version\": \"48df7b6affb51390d728da2372cb1cd19e5a89b59cbc86c2524420a67030c6cc\",\n        input: {\n            prompt: \"give me a hex number that represents the color of the emotion of this prompt:\" + p_prompt,\n        }\n    };\n    console.log(\"Asking for Words From Replicate via Proxy\", data);\n    let options = {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: 'application/json',\n        },\n        body: JSON.stringify(data),\n    };\n    const url = replicateProxy + \"/create_n_get/\"\n    console.log(\"words url\", url, \"words options\", options);\n    const words_response = await fetch(url, options);\n    //turn it into json\n    const proxy_said = await words_response.json();\n    console.log(\"words_json\", proxy_said);\n    if (proxy_said.output.length == 0) {\n        feedback.html(\"Something went wrong, try it again\");\n    } else {\n      \n      console.log(proxy_said);\n        // feedback.html(\"\");\n        // console.log(\"proxy_said\", proxy_said.output.join(\"\"));\n        // let incomingText = proxy_said.output.join(\"\");\n        // createP(incomingText);\n    }\n    document.body.style.cursor = \"auto\";\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "673664e25eae2c60983a47c9",
        "createdAt": "2024-11-14T21:11:04.421Z",
        "updatedAt": "2024-11-14T21:11:04.421Z",
        "id": "673664e25eae2c60983a47c9"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.8.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.8.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673664e25eae2c60983a47c8",
        "createdAt": "2024-11-14T21:11:04.421Z",
        "updatedAt": "2024-11-14T21:11:04.421Z",
        "id": "673664e25eae2c60983a47c8"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673664e25eae2c60983a47ca",
        "createdAt": "2024-11-14T21:11:04.421Z",
        "updatedAt": "2024-11-14T21:11:04.421Z",
        "id": "673664e25eae2c60983a47ca"
      }
    ],
    "createdAt": "2024-11-14T21:00:18.225Z",
    "updatedAt": "2024-11-14T21:45:17.005Z",
    "id": "3XKazGCLZ"
  },
  {
    "_id": "6qm4bcSfa",
    "name": "Diagnostic brother",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "679cec5daea48cd597eb7adc",
          "679cec5daea48cd597eb7adb",
          "679cec5daea48cd597eb7add"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "679cec5daea48cd597eb7ade",
        "createdAt": "2025-01-31T16:18:41.886Z",
        "updatedAt": "2025-01-31T16:18:41.886Z",
        "id": "679cec5daea48cd597eb7ade"
      },
      {
        "name": "sketch.js",
        "content": "let day1 = [\n  0,\n  2,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  2,\n  2,\n  0,\n  1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  1,\n  1,\n];\n\nlet graphX = 50;\nlet graphY = 300;\nlet graphAmplitude = 5;\nlet graphPeriod = 100;\n/////////////////////////////////////\nlet circleX = 200;\nlet circleY = 200;\nlet circleRadius = 100;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n  let angle = PI / 12;\n\n  for (i = 0; i < 25; i++) {\n    if (day1[i] == 0) {\n      arc(200, 200, 100, 100, (PI / 12) * i, (PI / 12) * i + PI / 12);\n    } else {\n    }\n\n    noFill();\n    stroke(\"red\");\n\n    beginShape();\n    for (let c = 0; c <= TWO_PI + QUARTER_PI / 10; c += QUARTER_PI / 10) {\n      for (let t = 0; t <= 50; t++) {\n        let x = map(t, 0, 50, graphX, graphX + graphPeriod);\n        let y = graphY - graphAmplitude * sin(t);\n        let distance = dist(0, 0, x, y);\n        console.log(distance);\n        let pointX = circleX + distance * cos(c);\n        let pointY = circleX - distance * sin(c);\n        vertex(pointX, pointY);\n      }\n    }\n\n    endShape();\n    // beginShape();\n    // for (let t = 0; t <= 50; t++) {\n    //   let x = map(t, 0, 50, graphX, graphX + graphPeriod);\n    //   let y = graphY - graphAmplitude * sin(t);\n    //   vertex(x, y);\n    // }\n    // endShape();\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "679cec5daea48cd597eb7adb",
        "createdAt": "2025-01-31T16:18:41.886Z",
        "updatedAt": "2025-01-31T16:18:41.886Z",
        "id": "679cec5daea48cd597eb7adb"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679cec5daea48cd597eb7adc",
        "createdAt": "2025-01-31T16:18:41.886Z",
        "updatedAt": "2025-01-31T16:18:41.886Z",
        "id": "679cec5daea48cd597eb7adc"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679cec5daea48cd597eb7add",
        "createdAt": "2025-01-31T16:18:41.886Z",
        "updatedAt": "2025-01-31T16:18:41.886Z",
        "id": "679cec5daea48cd597eb7add"
      }
    ],
    "updatedAt": "2025-01-31T16:18:41.886Z",
    "createdAt": "2025-01-31T16:06:17.360Z",
    "id": "6qm4bcSfa"
  },
  {
    "_id": "L-NvfgEiw",
    "name": "drums copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6705b1ee10e5ee3f55f9ef08",
          "6705b1ee10e5ee3f55f9ef09",
          "6705b1ee10e5ee3f55f9ef0a",
          "6705b1ee10e5ee3f55f9ef0b",
          "6705b1ee10e5ee3f55f9ef0c",
          "6705b1ee10e5ee3f55f9ef0d"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6705b1ee10e5ee3f55f9ef07",
        "createdAt": "2024-10-08T22:28:08.037Z",
        "updatedAt": "2024-10-08T22:28:08.037Z",
        "id": "6705b1ee10e5ee3f55f9ef07"
      },
      {
        "name": "sketch.js",
        "content": "let drum;\nlet kick;\nlet beat;\n\nfunction preload(){\n  drum = loadSound(\"drum.mp3\");\n  kick = loadSound(\"kick.mp3\");\n  beat = loadSound(\"beat.mp3\");\n\n}\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n  if ((frameCount % 100) == 0){\n    //for every 100 frame count play it once \n    kick.play();\n  }\n  if ((frameCount % 50) == 0){\n    drum.play();\n  }\n  if ((frameCount % 125) == 0){\n   // beat.play();\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6705b1ee10e5ee3f55f9ef0c",
        "createdAt": "2024-10-08T22:28:08.037Z",
        "updatedAt": "2024-10-08T22:28:08.037Z",
        "id": "6705b1ee10e5ee3f55f9ef0c"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6705b1ee10e5ee3f55f9ef0a",
        "createdAt": "2024-10-08T22:28:08.037Z",
        "updatedAt": "2024-10-08T22:28:08.037Z",
        "id": "6705b1ee10e5ee3f55f9ef0a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6705b1ee10e5ee3f55f9ef0d",
        "createdAt": "2024-10-08T22:28:08.037Z",
        "updatedAt": "2024-10-08T22:28:08.037Z",
        "id": "6705b1ee10e5ee3f55f9ef0d"
      },
      {
        "name": "kick.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/66a315fe-5dd9-434f-9620-f1f6076ff5b1.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6705b1ee10e5ee3f55f9ef0b",
        "createdAt": "2024-10-08T22:28:08.037Z",
        "updatedAt": "2024-10-08T22:28:08.037Z",
        "id": "6705b1ee10e5ee3f55f9ef0b"
      },
      {
        "name": "drum.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/36f3c1c3-229e-48e4-9c9f-542d3ea24244.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6705b1ee10e5ee3f55f9ef09",
        "createdAt": "2024-10-08T22:28:08.037Z",
        "updatedAt": "2024-10-08T22:28:08.037Z",
        "id": "6705b1ee10e5ee3f55f9ef09"
      },
      {
        "name": "beat.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/ac2c488a-c0d1-48cb-8152-0292d44fb65c.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6705b1ee10e5ee3f55f9ef08",
        "createdAt": "2024-10-08T22:28:08.037Z",
        "updatedAt": "2024-10-08T22:28:08.037Z",
        "id": "6705b1ee10e5ee3f55f9ef08"
      }
    ],
    "createdAt": "2024-10-08T22:27:59.079Z",
    "updatedAt": "2024-10-08T22:28:08.037Z",
    "id": "L-NvfgEiw"
  },
  {
    "_id": "qb9PP8VgN",
    "name": "Eggplant script",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67ca821dedfe278cf12b7d45",
          "67ca821dedfe278cf12b7d44",
          "67ca821dedfe278cf12b7d46"
        ],
        "fileType": "folder",
        "_id": "67ca821dedfe278cf12b7d47",
        "createdAt": "2025-03-07T05:31:33.552Z",
        "updatedAt": "2025-03-07T05:31:33.552Z",
        "id": "67ca821dedfe278cf12b7d47"
      },
      {
        "name": "sketch.js",
        "content": "let offset = 0.0;\n\nfunction setup(){\n  createCanvas(960, 540);\n  fill(255);\n  stroke(255);\n  strokeWeight(3);\n\n  textAlign(CENTER, CENTER);\n  textSize(128);\n  pixelDensity(2); // High res, slows frame rate\n  \n  colorMode(RGB, 255, 255, 255, 255); // Set color mode to RGB\n}\n\nfunction draw(){\n  frameRate(24);\n  background(0);\n  objectNeon(400, 400, color(255, 0, 100, 255));\n}\n\n\nfunction objectNeon(x, y, glowColor){\n  glow(glowColor, 50); // Apply glow before drawing\n\n  \n  noStroke();\n  fill(glowColor);\n  circle(x, y, 20);\n}\n\nfunction glow(glowColor, blurriness){\n  drawingContext.shadowBlur = blurriness;\n  drawingContext.shadowColor = glowColor;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67ca821dedfe278cf12b7d44",
        "createdAt": "2025-03-07T05:31:33.552Z",
        "updatedAt": "2025-03-07T05:31:33.552Z",
        "id": "67ca821dedfe278cf12b7d44"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "67ca821dedfe278cf12b7d45",
        "createdAt": "2025-03-07T05:31:33.552Z",
        "updatedAt": "2025-03-07T05:31:33.552Z",
        "id": "67ca821dedfe278cf12b7d45"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "67ca821dedfe278cf12b7d46",
        "createdAt": "2025-03-07T05:31:33.552Z",
        "updatedAt": "2025-03-07T05:31:33.552Z",
        "id": "67ca821dedfe278cf12b7d46"
      }
    ],
    "updatedAt": "2025-03-07T05:31:33.552Z",
    "createdAt": "2025-03-07T05:25:38.937Z",
    "id": "qb9PP8VgN"
  },
  {
    "_id": "Uyl5kaFpm",
    "name": "Emotion collision",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6736f1f48344bc336673a872",
          "6736f1f48344bc336673a873",
          "6736f1f48344bc336673a874",
          "6736f1f48344bc336673a875"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6736f1f48344bc336673a871",
        "createdAt": "2024-11-15T15:03:36.198Z",
        "updatedAt": "2024-11-15T15:03:36.198Z",
        "id": "6736f1f48344bc336673a871"
      },
      {
        "name": "style.css",
        "content": "html, body {\n margin: 0;\n padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6736f1f48344bc336673a875",
        "createdAt": "2024-11-15T15:03:36.198Z",
        "updatedAt": "2024-11-15T15:03:36.198Z",
        "id": "6736f1f48344bc336673a875"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.2/p5.min.js\"></script>\n    <meta charset=\"utf-8\" />\n    <title>NOC_4_06_ParticlesSystemForces</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n  </head>\n  <body>\n    <script src=\"particle.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6736f1f48344bc336673a872",
        "createdAt": "2024-11-15T15:03:36.198Z",
        "updatedAt": "2024-11-15T15:03:36.198Z",
        "id": "6736f1f48344bc336673a872"
      },
      {
        "name": "particle.js",
        "content": "class Particle {\n  constructor(x, y) {\n    this.position = createVector(x, y);\n    this.velocity = p5.Vector.random2D();\n    this.velocity.mult(random(1, 2));\n    this.acceleration = createVector(0, 0);\n    this.mass = random(2, 10);\n    this.r = sqrt(this.mass) * 18;\n\n    // Assign a specific color from hexArray to this particle\n    let colorIndex = floor(random(hexArray.length));\n    this.color = hexArray[colorIndex];\n  }\n\n  applyForce(force) {\n    let f = force.copy();\n    f.div(this.mass);\n    this.acceleration.add(f);\n  }\n\n  update() {\n    this.velocity.add(this.acceleration);\n    this.position.add(this.velocity);\n    this.acceleration.mult(0);\n  }\n\n  collide(other) {\n    let impactVector = p5.Vector.sub(other.position, this.position);\n    let d = impactVector.mag();\n    if (d < this.r + other.r) {\n      let overlap = d - (this.r + other.r);\n      let dir = impactVector.copy();\n      dir.setMag(overlap * 0.5);\n      this.position.add(dir);\n      other.position.sub(dir);\n\n      d = this.r + other.r;\n      impactVector.setMag(d);\n\n      let mSum = this.mass + other.mass;\n      let vDiff = p5.Vector.sub(other.velocity, this.velocity);\n      let num = vDiff.dot(impactVector);\n      let den = mSum * d * d;\n      let deltaVA = impactVector.copy();\n      deltaVA.mult(2 * other.mass * num / den);\n      this.velocity.add(deltaVA);\n\n      let deltaVB = impactVector.copy();\n      deltaVB.mult(-2 * this.mass * num / den);\n      other.velocity.add(deltaVB);\n    }\n  }\n\n  edges() {\n    if (this.position.x > width - this.r) {\n      this.position.x = width - this.r;\n      this.velocity.x *= -1;\n    } else if (this.position.x < this.r) {\n      this.position.x = this.r;\n      this.velocity.x *= -1;\n    }\n\n    if (this.position.y > height - this.r) {\n      this.position.y = height - this.r;\n      this.velocity.y *= -1;\n    } else if (this.position.y < this.r) {\n      this.position.y = this.r;\n      this.velocity.y *= -1;\n    }\n  }\n\n  show() {\n    noStroke();\n    circle(this.position.x, this.position.y, this.r * 2);\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6736f1f48344bc336673a873",
        "createdAt": "2024-11-15T15:03:36.198Z",
        "updatedAt": "2024-11-15T15:03:36.198Z",
        "id": "6736f1f48344bc336673a873"
      },
      {
        "name": "sketch.js",
        "content": "let particles = [];\nlet hexArray = [\"##ace1ef\", \"#f5aec6\", \"#c2f1c0\", \"#faf7c4\", \"#fdd5b6\", \"#efacac\", \"#c4b2f7\", \"#b2f7d3\", \"#b2dcf7\"];\n\nlet currentColor = \"#ffffff\";\n\nfunction setup() {\n  createCanvas(640, 360);\n  for (let i = 0; i < 10; i++) {\n    let x = random(width / 2 - 200, width / 2 + 200);\n    let y = random(height / 2 - 150, height / 2 + 150);\n    particles.push(new Particle(x, y));\n  }\n}\n\nfunction draw() {\n  background(197, 244, 255, 50);\n\n  for (let i = 0; i < particles.length; i++) {\n    let particleA = particles[i];\n    for (let j = i + 1; j < particles.length; j++) {\n      let particleB = particles[j];\n      particleA.collide(particleB);\n    }\n  }\n\n  \n  \n  for (let particle of particles) {\n    \n    let currentColor = particle.color;\n    particle.update();\n    particle.edges();\n    fill(currentColor);\n    particle.show();\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6736f1f48344bc336673a874",
        "createdAt": "2024-11-15T15:03:36.198Z",
        "updatedAt": "2024-11-15T15:03:36.198Z",
        "id": "6736f1f48344bc336673a874"
      }
    ],
    "createdAt": "2024-11-15T07:02:12.659Z",
    "updatedAt": "2024-11-15T15:03:36.198Z",
    "id": "Uyl5kaFpm"
  },
  {
    "_id": "k35rcEmYC",
    "name": "Emotion collision copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "673770ba9580b37de5df6011",
          "673770ba9580b37de5df6012",
          "673770ba9580b37de5df6013",
          "673770ba9580b37de5df6014"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "673770ba9580b37de5df6010",
        "createdAt": "2024-11-15T17:57:22.679Z",
        "updatedAt": "2024-11-15T17:57:22.679Z",
        "id": "673770ba9580b37de5df6010"
      },
      {
        "name": "style.css",
        "content": "html, body {\n margin: 0;\n padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673770ba9580b37de5df6014",
        "createdAt": "2024-11-15T17:57:22.679Z",
        "updatedAt": "2024-11-15T17:57:22.679Z",
        "id": "673770ba9580b37de5df6014"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.2/p5.min.js\"></script>\n    <meta charset=\"utf-8\" />\n    <title>NOC_4_06_ParticlesSystemForces</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n  </head>\n  <body>\n    <script src=\"particle.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673770ba9580b37de5df6011",
        "createdAt": "2024-11-15T17:57:22.679Z",
        "updatedAt": "2024-11-15T17:57:22.679Z",
        "id": "673770ba9580b37de5df6011"
      },
      {
        "name": "particle.js",
        "content": "class Particle {\n  constructor(x, y) {\n    this.position = createVector(x, y);\n    this.velocity = p5.Vector.random2D();\n    this.velocity.mult(random(1, 2));\n    this.acceleration = createVector(0, 0);\n    this.mass = random(5, 15);\n    this.r = sqrt(this.mass) * 20;\n\n    // Assign a specific color from hexArray to this particle\n    let colorIndex = floor(random(hexArray.length));\n    this.color = hexArray[colorIndex];\n  }\n\n  applyForce(force) {\n    let f = force.copy();\n    f.div(this.mass);\n    this.acceleration.add(f);\n  }\n\n  update() {\n    this.velocity.add(this.acceleration);\n    this.position.add(this.velocity);\n    this.acceleration.mult(0);\n  }\n\n  collide(other) {\n    let impactVector = p5.Vector.sub(other.position, this.position);\n    let d = impactVector.mag();\n    if (d < this.r + other.r) {\n      let overlap = d - (this.r + other.r);\n      let dir = impactVector.copy();\n      dir.setMag(overlap * 0.5);\n      this.position.add(dir);\n      other.position.sub(dir);\n\n      d = this.r + other.r;\n      impactVector.setMag(d);\n\n      let mSum = this.mass + other.mass;\n      let vDiff = p5.Vector.sub(other.velocity, this.velocity);\n      let num = vDiff.dot(impactVector);\n      let den = mSum * d * d;\n      let deltaVA = impactVector.copy();\n      deltaVA.mult(2 * other.mass * num / den);\n      this.velocity.add(deltaVA);\n\n      let deltaVB = impactVector.copy();\n      deltaVB.mult(-2 * this.mass * num / den);\n      other.velocity.add(deltaVB);\n    }\n  }\n\n  edges() {\n    if (this.position.x > width - this.r) {\n      this.position.x = width - this.r;\n      this.velocity.x *= -1;\n    } else if (this.position.x < this.r) {\n      this.position.x = this.r;\n      this.velocity.x *= -1;\n    }\n\n    if (this.position.y > height - this.r) {\n      this.position.y = height - this.r;\n      this.velocity.y *= -1;\n    } else if (this.position.y < this.r) {\n      this.position.y = this.r;\n      this.velocity.y *= -1;\n    }\n  }\n\n  show() {\n    noStroke();\n    circle(this.position.x, this.position.y, this.r * 2);\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673770ba9580b37de5df6012",
        "createdAt": "2024-11-15T17:57:22.679Z",
        "updatedAt": "2024-11-15T17:57:22.679Z",
        "id": "673770ba9580b37de5df6012"
      },
      {
        "name": "sketch.js",
        "content": "let particles = [];\nlet hexArray = [\n  \"##ace1ef\",\n  \"#f5aec6\",\n  \"#c2f1c0\",\n  \"#faf7c4\",\n  \"#fdd5b6\",\n  \"#efacac\",\n  \"#c4b2f7\",\n  \"#b2f7d3\",\n  \"#b2dcf7\",\n];\nconst replicateProxy = \"https://replicate-api-proxy.glitch.me/create_n_get/\";\nlet feedback;\nlet currentColor = \"#ffffff\";\n\nfunction setup() {\n  createCanvas(640, 800);\n  for (let i = 0; i < 10; i++) {\n    let x = random(width / 2 - 200, width / 2 + 200);\n    let y = random(height / 2 - 150, height / 2 + 150);\n    particles.push(new Particle(x, y));\n  }\n  ///////////////////API/////////////////////////\n  feedback = createP(\"\").style(\"text-align\", \"center\");\n\n    // Center the container div\n    let container = createDiv();\n    container.style(\"position\", \"absolute\");\n    container.style(\"top\", \"50%\");\n    container.style(\"left\", \"50%\");\n    container.style(\"transform\", \"translate(-50%, -50%)\");\n    container.style(\"text-align\", \"center\");\n\n    // Create the input field inside the container\n    let input_field = createElement(\"textarea\");\n    input_field.id(\"input_prompt\");\n    input_field.size(450, 100); // Set width and height for the textarea\n    input_field.parent(container);\n\n    // Create the button inside the container\n    let myButton = createButton(\"Enter\");\n    myButton.style('color', 'white');\n    myButton.style('background-color', 'lightblue');\n    myButton.style('width', '90px');\n    myButton.style('height', '30px');\n    myButton.style('margin-top', '10px'); // Add some spacing above the button\n    myButton.parent(container); // Place the button inside the container\n    myButton.mousePressed(() => {\n        askForWords(input_field.value());\n    });\n\n    feedback.parent(container); // Place feedback below the button\n}\n\nfunction draw() {\n  background(197, 244, 255, 50);\n\n  for (let i = 0; i < particles.length; i++) {\n    let particleA = particles[i];\n    for (let j = i + 1; j < particles.length; j++) {\n      let particleB = particles[j];\n      particleA.collide(particleB);\n    }\n  }\n\n  for (let particle of particles) {\n    let currentColor = particle.color;\n    particle.update();\n    particle.edges();\n    fill(currentColor);\n    particle.show();\n  }\n}\n\n////////////////////API////////////////////////////\nasync function askForWords(p_prompt) {\n  document.body.style.cursor = \"progress\";\n  feedback.html(\"Waiting for reply from API...\");\n  const data = {\n    version: \"2d19859030ff705a87c746f7e96eea03aefb71f166725aee39692f1476566d48\",\n    input: {\n      prompt:\n        \"give me hex codes for html colors the reflect the emotions in this prompt: \" +\n        p_prompt +\n        '. Please return the hex codes as json of the following structure: {\"hexCodes\": [\"hex code 1\", \"hex code 2\", \"hex code 3\"]} Don\\'t return any text except for the JSON. Don\\'t give an explaination after',\n    },\n  };\n  console.log(\"Asking for Words From Replicate via Proxy\", data);\n  let options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  console.log(\"words url\", replicateProxy, \"words options\", options);\n  const words_response = await fetch(replicateProxy, options);\n  //turn it into json\n  const proxy_said = await words_response.json();\n  console.log(\"words_json\", proxy_said);\n  console.log(proxy_said[0]);\n  if (proxy_said.output.length == 0) {\n    feedback.html(\"Something went wrong, try it again\");\n  } else {\n    \n    console.log(proxy_said);\n    feedback.html(\"\");\n    console.log(\"proxy_said\", proxy_said.output.join(\"\"));\n    let incomingText = proxy_said.output.join(\"\");\n\n    ////////////////////////////////////////////////////\n   // Remove any non-JSON text by extracting the JSON part with regex\n    let jsonMatch = incomingText.match(/\\{.*\\}/);\n    if (jsonMatch) {\n      try {\n        // Parse the JSON string\n        let JSONResponse = JSON.parse(jsonMatch[0]);\n\n        // Extract hex codes array\n        let hexCodes = JSONResponse.hexCodes;\n        \n        console.log(\"Hex codes from API:\", hexCodes);\n\n        // Ensure hexArray is updated with at least the first 3 hex codes\n        if (hexCodes && hexCodes.length >= 3) {\n          hexArray = hexCodes.slice(0, 3);\n          console.log(\"Updated hexArray:\", hexArray);\n        }\n\n            background(0);\n        for (let i = 0; i < particles.length; i++) {\n          particles[i].color = hexArray[i % hexArray.length];\n        }\n      } catch (error) {\n        console.error(\"JSON parsing error:\", error);\n        feedback.html(\"There was an error parsing the JSON response.\");\n      }\n    } else {\n      console.error(\"No JSON found in the response\");\n      feedback.html(\"No valid JSON found in the API response.\");\n    }\n  }\n  document.body.style.cursor = \"auto\";\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "673770ba9580b37de5df6013",
        "createdAt": "2024-11-15T17:57:22.679Z",
        "updatedAt": "2024-11-15T17:57:22.679Z",
        "id": "673770ba9580b37de5df6013"
      }
    ],
    "createdAt": "2024-11-15T16:03:05.746Z",
    "updatedAt": "2024-11-15T17:57:22.679Z",
    "id": "k35rcEmYC"
  },
  {
    "_id": "Z0wjTT8s8",
    "name": "EMOTION FINAL",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6737a44d7f7b70365b173b79",
          "6737a5777f7b70365b17d39d",
          "67379fdf9580b37de5df6016",
          "67379fdf9580b37de5df6017",
          "67379fdf9580b37de5df6018",
          "67379fdf9580b37de5df6019"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67379fdf9580b37de5df6015",
        "createdAt": "2024-12-04T00:11:47.376Z",
        "updatedAt": "2024-12-04T00:11:47.376Z",
        "id": "67379fdf9580b37de5df6015"
      },
      {
        "name": "style.css",
        "content": "html, body {\n margin: 0;\n padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67379fdf9580b37de5df6019",
        "createdAt": "2024-12-04T00:11:47.376Z",
        "updatedAt": "2024-12-04T00:11:47.376Z",
        "id": "67379fdf9580b37de5df6019"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.2/p5.min.js\"></script>\n    <meta charset=\"utf-8\" />\n    <title>NOC_4_06_ParticlesSystemForces</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n  </head>\n  <body>\n    <script src=\"particle.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67379fdf9580b37de5df6016",
        "createdAt": "2024-12-04T00:11:47.376Z",
        "updatedAt": "2024-12-04T00:11:47.376Z",
        "id": "67379fdf9580b37de5df6016"
      },
      {
        "name": "particle.js",
        "content": "class Particle {\n  constructor(x, y) {\n    this.position = createVector(x, y);\n    this.velocity = p5.Vector.random2D();\n    this.velocity.mult(random(1, 2));\n    this.acceleration = createVector(0, 0);\n    this.mass = random(5, 13);\n    this.r = sqrt(this.mass) * 16;\n\n    // Assign a specific color from hexArray to this particle\n    let colorIndex = floor(random(hexArray.length));\n    this.color = hexArray[colorIndex];\n  }\n\n  applyForce(force) {\n    let f = force.copy();\n    f.div(this.mass);\n    this.acceleration.add(f);\n  }\n\n  update() {\n    this.velocity.add(this.acceleration);\n    this.position.add(this.velocity);\n    this.acceleration.mult(0);\n  }\n\n  collide(other) {\n    let impactVector = p5.Vector.sub(other.position, this.position);\n    let d = impactVector.mag();\n    if (d < this.r + other.r) {\n      let overlap = d - (this.r + other.r);\n      let dir = impactVector.copy();\n      dir.setMag(overlap * 0.5);\n      this.position.add(dir);\n      other.position.sub(dir);\n\n      d = this.r + other.r;\n      impactVector.setMag(d);\n\n      let mSum = this.mass + other.mass;\n      let vDiff = p5.Vector.sub(other.velocity, this.velocity);\n      let num = vDiff.dot(impactVector);\n      let den = mSum * d * d;\n      let deltaVA = impactVector.copy();\n      deltaVA.mult(2 * other.mass * num / den);\n      this.velocity.add(deltaVA);\n\n      let deltaVB = impactVector.copy();\n      deltaVB.mult(-2 * this.mass * num / den);\n      other.velocity.add(deltaVB);\n    }\n  }\n\n  edges() {\n    if (this.position.x > width - 20 - this.r) {\n      this.position.x = width - 20 - this.r;\n      this.velocity.x *= -1;\n    } else if (this.position.x < this.r + 20) {\n      this.position.x = this.r + 20;\n      this.velocity.x *= -1;\n    }\n\n    if (this.position.y > height - 20 - this.r) {\n      this.position.y = height - 20 - this.r;\n      this.velocity.y *= -1;\n    } else if (this.position.y < this.r + 20) {\n      this.position.y = this.r + 20;\n      this.velocity.y *= -1;\n    }\n  }\n\n  show() {\n    noStroke();\n    circle(this.position.x, this.position.y, this.r * 2);\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67379fdf9580b37de5df6017",
        "createdAt": "2024-12-04T00:11:47.376Z",
        "updatedAt": "2024-12-04T00:11:47.376Z",
        "id": "67379fdf9580b37de5df6017"
      },
      {
        "name": "sketch.js",
        "content": "let particles = [];\nlet hexArray = [\n  \"#ace1ef\",\n  \"#f5aec6\",\n  \"#c2f1c0\",\n  \"#faf7c4\",\n  \"#fdd5b6\",\n  \"#efacac\",\n  \"#c4b2f7\",\n  \"#b2f7d3\",\n  \"#b2dcf7\",\n];\nconst replicateProxy = \"https://replicate-api-proxy.glitch.me/create_n_get/\";\nlet feedback;\nlet currentColor = \"#ffffff\";\nlet container;\nlet fading = false;\nlet fadeOpacity = 1.0;\n\nlet myFont;\nlet myFont1;\nlet showText = false;\nlet firstTextOpacity;\n\nfunction preload() {\n  myFont = loadFont(\"Anja Eliane accent002.ttf\");\n  myFont1 = loadFont(\"Mermaid Swash Caps.ttf\");\n}\n\nfunction setup() {\n  createCanvas(1179 / 3, 1859 / 3);\n  for (let i = 0; i < 10; i++) {\n    let x = random(width / 2 - 200, width / 2 + 200);\n    let y = random(height / 2 - 150, height / 2 + 150);\n    particles.push(new Particle(x, y));\n  }\n\n  textFont(myFont);\n  feedback = createP(\"\").style(\"text-align\", \"center\");\n\n  container = createDiv();\n  container.style(\"position\", \"absolute\");\n  container.style(\"top\", \"50%\");\n  container.style(\"left\", \"50%\");\n  container.style(\"transform\", \"translate(-50%, -50%)\");\n  container.style(\"text-align\", \"center\");\n\n  let input_field = createElement(\"textarea\");\n  input_field.style(\"font-family\", \"Anja Eliane accent002\");\n  input_field.id(\"input_prompt\");\n  input_field.size(260, 120);\n  input_field.parent(container);\n\n  let myButton = createButton(\"Enter\");\n  myButton.style(\"font-family\", \"Anja Eliane accent002\");\n  myButton.style(\"color\", \"white\");\n  myButton.style(\"background-color\", \"lightblue\");\n  myButton.style(\"width\", \"90px\");\n  myButton.style(\"height\", \"30px\");\n  myButton.style(\"margin-top\", \"10px\");\n  myButton.parent(container);\n  myButton.mousePressed(() => {\n    firstTextOpacity = 0;\n    askForWords(input_field.value());\n    fading = true;\n    setTimeout(() => {\n      showText = true;\n    }, 2000);\n  });\n}\n\nfunction draw() {\n  background(197, 244, 255, 50);\n\n  for (let i = 0; i < particles.length; i++) {\n    let particleA = particles[i];\n    for (let j = i + 1; j < particles.length; j++) {\n      let particleB = particles[j];\n      particleA.collide(particleB);\n    }\n  }\n\n  for (let particle of particles) {\n    let currentColor = particle.color;\n    particle.update();\n    particle.edges();\n    fill(currentColor);\n    particle.show();\n  }\n\n  if (fading) {\n    fadeOpacity -= 0.02;\n    container.style(\"opacity\", fadeOpacity);\n    if (fadeOpacity <= 0) {\n      container.hide();\n      fading = false;\n    }\n  }\n\n  textSize(40);\n  textAlign(CENTER);\n  fill(0, 0, 0, firstTextOpacity);\n  textFont(myFont);\n  textSize(20);\n  text(\"DESCRIBE A MEMORY OF YOURS\", width / 2, height / 2 - 150);\n  text(\"IN ONE OR TWO SENTENCES\", width / 2, height / 2 - 130);\n  textSize(15);\n  text(\"It can be anything, but be descriptive!\", width / 2, height / 2 - 95);\n  text(\"And how did it make you feel?\", width / 2, height / 2 - 75);\n\n  if (showText) {\n    rectMode(CENTER);\n    fill(197, 244, 255, 150);\n    rect( width/2, height/2 - 50, 320, 260)\n    firstTextOpacity -= 2;\n    textSize(40);\n    textAlign(CENTER);\n    fill(0, 0, 0);\n    text(\"Thank you!\", width / 2, height / 2 - 100);\n    textSize(14);\n    text(\"We'll take good care of your memories!\", width / 2, height / 2 - 60);\n    textAlign(LEFT);\n    text(\"The colors of these particles now\", 60, height / 2 - 30);\n    text(\"represent the colors of your emotions.\", 60, height / 2 - 10);\n    text(\"Now, pick the poms poms that fits\", 60, height / 2 + 10);\n    text(\"these colors, and place them inside\", 60, height / 2 + 30);\n    text(\"of the blue box!\", 60, height / 2 + 50);\n    \n  }\n}\n\nasync function askForWords(p_prompt) {\n  document.body.style.cursor = \"progress\";\n  const data = {\n    version: \"2d19859030ff705a87c746f7e96eea03aefb71f166725aee39692f1476566d48\",\n    input: {\n      prompt:\n        \"give me hex codes for html colors the reflect the emotions in this prompt: \" +\n        p_prompt +\n        '. Please return the hex codes as json of the following structure: {\"hexCodes\": [\"hex code \", \"hex code 2\", \"hex code 3\"]} Don\\'t return any text except for the JSON. Don\\'t give an explanation after. Don\\'t say anything else after the curly bracket',\n    },\n  };\n  let options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  const words_response = await fetch(replicateProxy, options);\n  const proxy_said = await words_response.json();\n\n  if (proxy_said.output.length == 0) {\n    feedback.html(\"Something went wrong, try it again\");\n  } else {\n    let incomingText = proxy_said.output.join(\"\");\n    let jsonMatch = incomingText.match(/\\{.*\\}/);\n    if (jsonMatch) {\n      try {\n        let JSONResponse = JSON.parse(jsonMatch[0]);\n        let hexCodes = JSONResponse.hexCodes;\n        if (hexCodes && hexCodes.length >= 3) {\n          hexArray = hexCodes.slice(0, 3);\n        }\n        for (let i = 0; i < particles.length; i++) {\n          particles[i].color = hexArray[i % hexArray.length];\n        }\n      } catch (error) {\n        feedback.html(\"There was an error parsing the JSON response.\");\n      }\n    } else {\n      feedback.html(\"No valid JSON found in the API response.\");\n    }\n  }\n  document.body.style.cursor = \"auto\";\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67379fdf9580b37de5df6018",
        "createdAt": "2024-12-04T00:11:47.376Z",
        "updatedAt": "2024-12-04T00:11:47.376Z",
        "id": "67379fdf9580b37de5df6018"
      },
      {
        "name": "Anja Eliane accent002.ttf",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/5b0552bf-c178-40fa-9992-7b64c12384f5.ttf",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6737a44d7f7b70365b173b79",
        "createdAt": "2024-12-04T00:11:47.376Z",
        "updatedAt": "2024-12-04T00:11:47.376Z",
        "id": "6737a44d7f7b70365b173b79"
      },
      {
        "name": "Mermaid Swash Caps.ttf",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/39ac13e7-ea9b-4e5e-8514-1f315ca4662e.ttf",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6737a5777f7b70365b17d39d",
        "createdAt": "2024-12-04T00:11:47.376Z",
        "updatedAt": "2024-12-04T00:11:47.376Z",
        "id": "6737a5777f7b70365b17d39d"
      }
    ],
    "createdAt": "2024-11-15T19:24:15.640Z",
    "updatedAt": "2024-12-04T00:11:47.376Z",
    "id": "Z0wjTT8s8"
  },
  {
    "_id": "6AwRV6ODk",
    "name": "EMOTION FINAL copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6753e1d9d6f3546b682fe61d",
          "6753e1d9d6f3546b682fe61e",
          "6753e1d9d6f3546b682fe61f",
          "6753e1d9d6f3546b682fe620",
          "6753e1d9d6f3546b682fe621",
          "6753e1d9d6f3546b682fe622"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6753e1d9d6f3546b682fe61c",
        "createdAt": "2024-12-07T05:52:54.875Z",
        "updatedAt": "2024-12-07T05:52:54.875Z",
        "id": "6753e1d9d6f3546b682fe61c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n margin: 0;\n padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6753e1d9d6f3546b682fe622",
        "createdAt": "2024-12-07T05:52:54.875Z",
        "updatedAt": "2024-12-07T05:52:54.875Z",
        "id": "6753e1d9d6f3546b682fe622"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.2/p5.min.js\"></script>\n    <meta charset=\"utf-8\" />\n    <title>NOC_4_06_ParticlesSystemForces</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n  </head>\n  <body>\n    <script src=\"particle.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6753e1d9d6f3546b682fe61f",
        "createdAt": "2024-12-07T05:52:54.875Z",
        "updatedAt": "2024-12-07T05:52:54.875Z",
        "id": "6753e1d9d6f3546b682fe61f"
      },
      {
        "name": "particle.js",
        "content": "class Particle {\n  constructor(x, y) {\n    this.position = createVector(x, y);\n    this.velocity = p5.Vector.random2D();\n    this.velocity.mult(random(1, 2));\n    this.acceleration = createVector(0, 0);\n    this.mass = random(5, 13);\n    this.r = sqrt(this.mass) * 16;\n\n    // Assign a specific color from hexArray to this particle\n    let colorIndex = floor(random(hexArray.length));\n    this.color = hexArray[colorIndex];\n  }\n\n  applyForce(force) {\n    let f = force.copy();\n    f.div(this.mass);\n    this.acceleration.add(f);\n  }\n\n  update() {\n    this.velocity.add(this.acceleration);\n    this.position.add(this.velocity);\n    this.acceleration.mult(0);\n  }\n\n  collide(other) {\n    let impactVector = p5.Vector.sub(other.position, this.position);\n    let d = impactVector.mag();\n    if (d < this.r + other.r) {\n      let overlap = d - (this.r + other.r);\n      let dir = impactVector.copy();\n      dir.setMag(overlap * 0.5);\n      this.position.add(dir);\n      other.position.sub(dir);\n\n      d = this.r + other.r;\n      impactVector.setMag(d);\n\n      let mSum = this.mass + other.mass;\n      let vDiff = p5.Vector.sub(other.velocity, this.velocity);\n      let num = vDiff.dot(impactVector);\n      let den = mSum * d * d;\n      let deltaVA = impactVector.copy();\n      deltaVA.mult(2 * other.mass * num / den);\n      this.velocity.add(deltaVA);\n\n      let deltaVB = impactVector.copy();\n      deltaVB.mult(-2 * this.mass * num / den);\n      other.velocity.add(deltaVB);\n    }\n  }\n\n  edges() {\n    if (this.position.x > width - 20 - this.r) {\n      this.position.x = width - 20 - this.r;\n      this.velocity.x *= -1;\n    } else if (this.position.x < this.r + 20) {\n      this.position.x = this.r + 20;\n      this.velocity.x *= -1;\n    }\n\n    if (this.position.y > height - 20 - this.r) {\n      this.position.y = height - 20 - this.r;\n      this.velocity.y *= -1;\n    } else if (this.position.y < this.r + 20) {\n      this.position.y = this.r + 20;\n      this.velocity.y *= -1;\n    }\n  }\n\n  show() {\n    noStroke();\n    circle(this.position.x, this.position.y, this.r * 2);\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6753e1d9d6f3546b682fe620",
        "createdAt": "2024-12-07T05:52:54.875Z",
        "updatedAt": "2024-12-07T05:52:54.875Z",
        "id": "6753e1d9d6f3546b682fe620"
      },
      {
        "name": "sketch.js",
        "content": "let particles = [];\nlet hexArray = [\n  \"#ace1ef\",\n  \"#f5aec6\",\n  \"#c2f1c0\",\n  \"#faf7c4\",\n  \"#fdd5b6\",\n  \"#efacac\",\n  \"#c4b2f7\",\n  \"#b2f7d3\",\n  \"#b2dcf7\",\n];\nconst replicateProxy = \"https://replicate-api-proxy.glitch.me/create_n_get/\";\nlet feedback;\nlet currentColor = \"#ffffff\";\nlet container;\nlet fading = false;\nlet fadeOpacity = 1.0;\n\nlet myFont;\nlet myFont1;\nlet showText = false;\nlet firstTextOpacity;\n\nfunction preload() {\n  myFont = loadFont(\"Anja Eliane accent002.ttf\");\n  myFont1 = loadFont(\"Mermaid Swash Caps.ttf\");\n}\n\nfunction setup() {\n  createCanvas(1179 / 3, 1859 / 3);\n  for (let i = 0; i < 10; i++) {\n    let x = random(width / 2 - 200, width / 2 + 200);\n    let y = random(height / 2 - 150, height / 2 + 150);\n    particles.push(new Particle(x, y));\n  }\n\n  textFont(myFont);\n  feedback = createP(\"\").style(\"text-align\", \"center\");\n\n  container = createDiv();\n  container.style(\"position\", \"absolute\");\n  container.style(\"top\", \"50%\");\n  container.style(\"left\", \"50%\");\n  container.style(\"transform\", \"translate(-50%, -50%)\");\n  container.style(\"text-align\", \"center\");\n\n  let input_field = createElement(\"textarea\");\n  input_field.style(\"font-family\", \"Anja Eliane accent002\");\n  input_field.id(\"input_prompt\");\n  input_field.size(260, 120);\n  input_field.parent(container);\n\n  let myButton = createButton(\"Enter\");\n  myButton.style(\"font-family\", \"Anja Eliane accent002\");\n  myButton.style(\"color\", \"white\");\n  myButton.style(\"background-color\", \"lightblue\");\n  myButton.style(\"width\", \"90px\");\n  myButton.style(\"height\", \"30px\");\n  myButton.style(\"margin-top\", \"10px\");\n  myButton.parent(container);\n  myButton.mousePressed(() => {\n    firstTextOpacity = 0;\n    askForWords(input_field.value());\n    fading = true;\n    setTimeout(() => {\n      showText = true;\n    }, 2000);\n  });\n  \n  \n}\n\nfunction draw() {\n  background(197, 244, 255, 50);\n\n  for (let i = 0; i < particles.length; i++) {\n    let particleA = particles[i];\n    for (let j = i + 1; j < particles.length; j++) {\n      let particleB = particles[j];\n      particleA.collide(particleB);\n    }\n  }\n\n  for (let particle of particles) {\n    let currentColor = particle.color;\n    particle.update();\n    particle.edges();\n    fill(currentColor);\n    particle.show();\n  }\n\n  if (fading) {\n    fadeOpacity -= 0.02;\n    container.style(\"opacity\", fadeOpacity);\n    if (fadeOpacity <= 0) {\n      container.hide();\n      fading = false;\n    }\n  }\n\n  textSize(40);\n  textAlign(CENTER);\n  fill(0, 0, 0, firstTextOpacity);\n  textFont(myFont);\n  textSize(20);\n  text(\"DESCRIBE A MEMORY OF YOURS\", width / 2, height / 2 - 150);\n  text(\"IN ONE OR TWO SENTENCES\", width / 2, height / 2 - 130);\n  textSize(15);\n  text(\"It can be anything, but be descriptive!\", width / 2, height / 2 - 95);\n  text(\"And how did it make you feel?\", width / 2, height / 2 - 75);\n\n  if (showText) {\n    rectMode(CENTER);\n    fill(197, 244, 255, 150);\n    rect( width/2, height/2 - 50, 320, 260)\n    firstTextOpacity -= 2;\n    textSize(40);\n    textAlign(CENTER);\n    fill(0, 0, 0);\n    text(\"Thank you!\", width / 2, height / 2 - 100);\n    textSize(14);\n    text(\"We'll take good care of your memories!\", width / 2, height / 2 - 60);\n    textAlign(LEFT);\n    text(\"The colors of these particles now\", 60, height / 2 - 30);\n    text(\"represent the colors of your emotions.\", 60, height / 2 - 10);\n    text(\"Now, pick the poms poms that fits\", 60, height / 2 + 10);\n    text(\"these colors, and place them inside\", 60, height / 2 + 30);\n    text(\"of the blue box!\", 60, height / 2 + 50);\n    \n  }\n}\n\nasync function askForWords(p_prompt) {\n  document.body.style.cursor = \"progress\";\n  const data = {\n    version: \"2d19859030ff705a87c746f7e96eea03aefb71f166725aee39692f1476566d48\",\n    input: {\n      prompt:\n        \"give me hex codes for html colors the reflect the emotions in this prompt: \" +\n        p_prompt +\n        '. Please return the hex codes as json of the following structure: {\"hexCodes\": [\"hex code \", \"hex code 2\", \"hex code 3\"]} Don\\'t return any text except for the JSON. Don\\'t give an explanation after. Don\\'t say anything else after the curly bracket',\n    },\n  };\n  let options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  const words_response = await fetch(replicateProxy, options);\n  const proxy_said = await words_response.json();\n\n  if (proxy_said.output.length == 0) {\n    feedback.html(\"Something went wrong, try it again\");\n  } else {\n    let incomingText = proxy_said.output.join(\"\");\n    let jsonMatch = incomingText.match(/\\{.*\\}/);\n    if (jsonMatch) {\n      try {\n        let JSONResponse = JSON.parse(jsonMatch[0]);\n        let hexCodes = JSONResponse.hexCodes;\n        if (hexCodes && hexCodes.length >= 3) {\n          hexArray = hexCodes.slice(0, 3);\n        }\n        for (let i = 0; i < particles.length; i++) {\n          particles[i].color = hexArray[i % hexArray.length];\n        }\n      } catch (error) {\n        feedback.html(\"There was an error parsing the JSON response.\");\n      }\n    } else {\n      feedback.html(\"No valid JSON found in the API response.\");\n    }\n  }\n  document.body.style.cursor = \"auto\";\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6753e1d9d6f3546b682fe621",
        "createdAt": "2024-12-07T05:52:54.875Z",
        "updatedAt": "2024-12-07T05:52:54.875Z",
        "id": "6753e1d9d6f3546b682fe621"
      },
      {
        "name": "Anja Eliane accent002.ttf",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/c67fda9d-bb29-4e1a-9ea1-a6793adc18c6.ttf",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6753e1d9d6f3546b682fe61d",
        "createdAt": "2024-12-07T05:52:54.875Z",
        "updatedAt": "2024-12-07T05:52:54.875Z",
        "id": "6753e1d9d6f3546b682fe61d"
      },
      {
        "name": "Mermaid Swash Caps.ttf",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/36e22d7e-25e6-4094-b978-1c411d6beec4.ttf",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6753e1d9d6f3546b682fe61e",
        "createdAt": "2024-12-07T05:52:54.875Z",
        "updatedAt": "2024-12-07T05:52:54.875Z",
        "id": "6753e1d9d6f3546b682fe61e"
      }
    ],
    "createdAt": "2024-12-07T05:49:14.944Z",
    "updatedAt": "2024-12-07T05:52:54.875Z",
    "id": "6AwRV6ODk"
  },
  {
    "_id": "UjQSpO2Xy",
    "name": "EMOTION Projection",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "675cabd8ec18a22e46f0f8cf",
          "675cabd8ec18a22e46f0f8d0",
          "675cabd8ec18a22e46f0f8d2",
          "675cabd8ec18a22e46f0f8d3"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "675cabd8ec18a22e46f0f8cd",
        "createdAt": "2024-12-22T00:11:16.266Z",
        "updatedAt": "2024-12-22T00:11:16.266Z",
        "id": "675cabd8ec18a22e46f0f8cd"
      },
      {
        "name": "style.css",
        "content": "html, body {\n margin: 0;\n padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675cabd8ec18a22e46f0f8d3",
        "createdAt": "2024-12-22T00:11:16.266Z",
        "updatedAt": "2024-12-22T00:11:16.266Z",
        "id": "675cabd8ec18a22e46f0f8d3"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>p5.js Sketch</title>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.min.js\"></script>\n  <script src=\"sketch.js\"></script>\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n  </style>\n</head>\n<body></body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675cabd8ec18a22e46f0f8d0",
        "createdAt": "2024-12-22T00:11:16.266Z",
        "updatedAt": "2024-12-22T00:11:16.266Z",
        "id": "675cabd8ec18a22e46f0f8d0"
      },
      {
        "name": "sketch.js",
        "content": "let particles = [];\nlet followingParticle; // Particle that will follow the mouse\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  drawingContext.shadowBlur = 30; // Adjust the blur intensity\n  drawingContext.shadowColor = color(255); // White glow effect\n\n  // Create multiple particles\n  for (let i = 0; i < 10; i++) {\n    let x = random(width / 2 - 200, width / 2 + 200);\n    let y = random(height / 2 - 150, height / 2 + 150);\n    particles.push(new Particle(x, y));\n  }\n  \n  // Choose one particle to follow the mouse (for example, the first one)\n  followingParticle = particles[0]; // You can change the index to choose which particle to follow\n}\n\nfunction draw() {\n  background(0, 150);\n  resizeCanvas(windowWidth, windowHeight);\n\n  // Update the position of the following particle to mouse position\n  followingParticle.position.x = mouseX;\n  followingParticle.position.y = mouseY;\n\n  // Update and display all particles\n  for (let i = 0; i < particles.length; i++) {\n    let particleA = particles[i];\n    for (let j = i + 1; j < particles.length; j++) {\n      let particleB = particles[j];\n      particleA.collide(particleB);\n    }\n  }\n\n  // Update and show each particle, but skip the one following mouse\n  for (let particle of particles) {\n    if (particle !== followingParticle) { // Skip the one following the mouse\n      particle.update();\n      particle.edges();\n      fill(255, 255, 80, 100);\n      particle.show();\n    }\n  }\n}\n\nfunction keyPressed() {\n  if (!fullscreen()) {\n    fullscreen(true);\n  }\n}\n\n// Particle class\nclass Particle {\n  constructor(x, y) {\n    this.position = createVector(x, y);\n    this.velocity = p5.Vector.random2D();\n    this.velocity.mult(random(1, 2));\n    this.acceleration = createVector(0, 0);\n    this.mass = random(7, 16);\n    this.r = sqrt(this.mass) * 15;\n\n    // Gravity vector\n    this.gravity = createVector(0, 0.1); // Simulate gravity pulling downward\n  }\n\n  applyForce(force) {\n    let f = force.copy();\n    f.div(this.mass);\n    this.acceleration.add(f);\n  }\n\n  update() {\n    // Apply gravity to acceleration\n    this.acceleration.add(this.gravity);\n    this.velocity.add(this.acceleration);\n    this.position.add(this.velocity);\n    this.acceleration.mult(0);\n  }\n\n  collide(other) {\n    let impactVector = p5.Vector.sub(other.position, this.position);\n    let d = impactVector.mag();\n    if (d < this.r + other.r) {\n      let overlap = d - (this.r + other.r);\n      let dir = impactVector.copy();\n      dir.setMag(overlap * 0.5);\n      this.position.add(dir);\n      other.position.sub(dir);\n\n      d = this.r + other.r;\n      impactVector.setMag(d);\n\n      let mSum = this.mass + other.mass;\n      let vDiff = p5.Vector.sub(other.velocity, this.velocity);\n      let num = vDiff.dot(impactVector);\n      let den = mSum * d * d;\n      let deltaVA = impactVector.copy();\n      deltaVA.mult(2 * other.mass * num / den);\n      this.velocity.add(deltaVA);\n\n      let deltaVB = impactVector.copy();\n      deltaVB.mult(-2 * this.mass * num / den);\n      other.velocity.add(deltaVB);\n    }\n  }\n\n  edges() {\n    if (this.position.x > width - 20 - this.r) {\n      this.position.x = width - 20 - this.r;\n      this.velocity.x *= -1;\n    } else if (this.position.x < this.r + 20) {\n      this.position.x = this.r + 20;\n      this.velocity.x *= -1;\n    }\n\n    if (this.position.y > height - 20 - this.r) {\n      this.position.y = height - 20 - this.r;\n      this.velocity.y *= -1;\n    } else if (this.position.y < this.r + 20) {\n      this.position.y = this.r + 20;\n      this.velocity.y *= -1;\n    }\n  }\n\n  show() {\n    noStroke();\n    ellipse(this.position.x, this.position.y, this.r * 2, this.r * 2); // Draw a circle\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "675cabd8ec18a22e46f0f8d2",
        "createdAt": "2024-12-22T00:11:16.266Z",
        "updatedAt": "2024-12-22T00:11:16.266Z",
        "id": "675cabd8ec18a22e46f0f8d2"
      },
      {
        "name": "Mermaid Swash Caps.ttf",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/4471725c-a97a-48de-b4d6-7a6210397660.ttf",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675cabd8ec18a22e46f0f8cf",
        "createdAt": "2024-12-22T00:11:16.266Z",
        "updatedAt": "2024-12-22T00:11:16.266Z",
        "id": "675cabd8ec18a22e46f0f8cf"
      }
    ],
    "createdAt": "2024-12-13T21:49:12.972Z",
    "updatedAt": "2024-12-22T00:11:16.266Z",
    "id": "UjQSpO2Xy"
  },
  {
    "_id": "oD_dLVigc",
    "name": "emotions",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67366f6f727d2e850bcd92ff",
          "67366f6f727d2e850bcd9300",
          "67366f6f727d2e850bcd9301"
        ],
        "fileType": "folder",
        "_id": "67366f6f727d2e850bcd92fe",
        "createdAt": "2024-11-14T23:40:51.545Z",
        "updatedAt": "2024-11-14T23:40:51.545Z",
        "id": "67366f6f727d2e850bcd92fe"
      },
      {
        "name": "sketch.js",
        "content": "const replicateProxy = \"https://replicate-api-proxy.glitch.me\";\nlet feedback;\nlet emotionsColor;\n\nfunction setup() {\n    createCanvas(600, 1000); // Create a canvas with a width of 600 and height of 400\n    feedback = createP(\"\").style(\"text-align\", \"center\");\n\n    // Center the container div\n    let container = createDiv();\n    container.style(\"position\", \"absolute\");\n    container.style(\"top\", \"50%\");\n    container.style(\"left\", \"50%\");\n    container.style(\"transform\", \"translate(-50%, -50%)\");\n    container.style(\"text-align\", \"center\");\n\n    // Create the input field inside the container\n    let input_field = createElement(\"textarea\");\n    input_field.id(\"input_prompt\");\n    input_field.size(450, 100); // Set width and height for the textarea\n    input_field.parent(container);\n\n    // Create the button inside the container\n    let myButton = createButton(\"Enter\");\n    myButton.style('color', 'white');\n    myButton.style('background-color', 'lightblue');\n    myButton.style('width', '90px');\n    myButton.style('height', '30px');\n    myButton.style('margin-top', '10px'); // Add some spacing above the button\n    myButton.parent(container); // Place the button inside the container\n    myButton.mousePressed(() => {\n        askForWords(input_field.value());\n    });\n\n    feedback.parent(container); // Place feedback below the button\n}\n\nfunction draw() {\n    background(220);\n    fill(255);\n    circle(width / 2, height / 2 + 100, 100); // Draw the circle in the center of the canvas\n}\n\nasync function askForWords(p_prompt) {\n    document.body.style.cursor = \"progress\";\n    feedback.html(\"Waiting for reply from API...\");\n    const data = {\n        \"version\": \"2d19859030ff705a87c746f7e96eea03aefb71f166725aee39692f1476566d48\",\n        input: {\n            prompt: \"only give me 3 hex numbers that represent the color of the emotion of this prompt in alphabetical order according to importance in JSON format. Do not give any text before:\" + p_prompt,\n            max_tokens: 100,\n            max_length: 100,\n        },\n    };\n\n    let options = {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: 'application/json',\n        },\n        body: JSON.stringify(data),\n    };\n    const url = replicateProxy + \"/create_n_get/\";\n    const words_response = await fetch(url, options);\n    const proxy_said = await words_response.json();\n\n    if (proxy_said.output.length == 0) {\n        feedback.html(\"Something went wrong, try it again\");\n    } else {\n        feedback.html(\"\");\n        let incomingText = proxy_said.output.join(\"\");\n      console.log(incomingText);\n    }\n    document.body.style.cursor = \"auto\";\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67366f6f727d2e850bcd9300",
        "createdAt": "2024-11-14T23:40:51.545Z",
        "updatedAt": "2024-11-14T23:40:51.545Z",
        "id": "67366f6f727d2e850bcd9300"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.8.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.8.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "67366f6f727d2e850bcd92ff",
        "createdAt": "2024-11-14T23:40:51.545Z",
        "updatedAt": "2024-11-14T23:40:51.545Z",
        "id": "67366f6f727d2e850bcd92ff"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "67366f6f727d2e850bcd9301",
        "createdAt": "2024-11-14T23:40:51.545Z",
        "updatedAt": "2024-11-14T23:40:51.545Z",
        "id": "67366f6f727d2e850bcd9301"
      }
    ],
    "createdAt": "2024-11-14T21:45:19.999Z",
    "updatedAt": "2024-11-14T23:40:51.545Z",
    "id": "oD_dLVigc"
  },
  {
    "_id": "j6bS815lo",
    "name": "emotions copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67368ab3727d2e850bcd930b",
          "67368ab3727d2e850bcd930c",
          "67368ab3727d2e850bcd930d"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67368ab3727d2e850bcd930a",
        "createdAt": "2024-11-14T23:52:31.511Z",
        "updatedAt": "2024-11-14T23:52:31.511Z",
        "id": "67368ab3727d2e850bcd930a"
      },
      {
        "name": "sketch.js",
        "content": "const replicateProxy = \"https://replicate-api-proxy.glitch.me\";\nlet feedback;\nlet emotionsColor = \"#FFFFFF\"; // Default color for the circle\n\nfunction setup() {\n    createCanvas(600, 1000); // Create a canvas with a width of 600 and height of 1000\n    feedback = createP(\"\").style(\"text-align\", \"center\");\n\n    // Center the container div\n    let container = createDiv();\n    container.style(\"position\", \"absolute\");\n    container.style(\"top\", \"50%\");\n    container.style(\"left\", \"50%\");\n    container.style(\"transform\", \"translate(-50%, -50%)\");\n    container.style(\"text-align\", \"center\");\n\n    // Create the input field inside the container\n    let input_field = createElement(\"textarea\");\n    input_field.id(\"input_prompt\");\n    input_field.size(450, 100); // Set width and height for the textarea\n    input_field.parent(container);\n\n    // Create the button inside the container\n    let myButton = createButton(\"Enter\");\n    myButton.style('color', 'white');\n    myButton.style('background-color', 'lightblue');\n    myButton.style('width', '90px');\n    myButton.style('height', '30px');\n    myButton.style('margin-top', '10px'); // Add some spacing above the button\n    myButton.parent(container); // Place the button inside the container\n    myButton.mousePressed(() => {\n        askForWords(input_field.value());\n    });\n\n    feedback.parent(container); // Place feedback below the button\n}\n\nfunction draw() {\n    background(220);\n    fill(emotionsColor);\n    circle(width / 2, height / 2 + 100, 100); // Draw the circle in the center of the canvas\n}\n\nasync function askForWords(p_prompt) {\n    document.body.style.cursor = \"progress\";\n    feedback.html(\"Waiting for reply from API...\");\n    \n    const data = {\n        \"version\": \"2d19859030ff705a87c746f7e96eea03aefb71f166725aee39692f1476566d48\",\n        input: {\n            prompt: \"only give hex numbers that represent the color of the emotion of this prompt without any text before. Example: #FF5733 #00A86B #FFD700: \" + p_prompt,\n            max_tokens: 100,\n            max_length: 100,\n        },\n    };\n\n    let options = {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: 'application/json',\n        },\n        body: JSON.stringify(data),\n    };\n    \n    const url = replicateProxy + \"/create_n_get/\";\n    const words_response = await fetch(url, options);\n    const proxy_said = await words_response.text(); // Read the response as plain text\n\n    // Use a regular expression to find all hex color codes in the plain text response\n    let colorHexCodes = proxy_said.match(/#[A-Fa-f0-9]{6}/g); // Matches all hex color codes in the response\n\n    if (colorHexCodes && colorHexCodes.length > 0) {\n        emotionsColor = colorHexCodes[0]; // Use the first hex color found to set the circle color\n        feedback.html(\"Received colors: \" + colorHexCodes.join(\", \"));\n    } else {\n        feedback.html(\"No valid color hex codes found in the response.\");\n    }\n\n    document.body.style.cursor = \"auto\";\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67368ab3727d2e850bcd930c",
        "createdAt": "2024-11-14T23:52:31.511Z",
        "updatedAt": "2024-11-14T23:52:31.511Z",
        "id": "67368ab3727d2e850bcd930c"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.8.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.8.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67368ab3727d2e850bcd930b",
        "createdAt": "2024-11-14T23:52:31.511Z",
        "updatedAt": "2024-11-14T23:52:31.511Z",
        "id": "67368ab3727d2e850bcd930b"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67368ab3727d2e850bcd930d",
        "createdAt": "2024-11-14T23:52:31.511Z",
        "updatedAt": "2024-11-14T23:52:31.511Z",
        "id": "67368ab3727d2e850bcd930d"
      }
    ],
    "createdAt": "2024-11-14T23:41:39.742Z",
    "updatedAt": "2024-11-14T23:52:31.511Z",
    "id": "j6bS815lo"
  },
  {
    "_id": "uSBOySHyK",
    "name": "emotions copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "673688be727d2e850bcd9303",
          "673688be727d2e850bcd9304",
          "673688be727d2e850bcd9305"
        ],
        "fileType": "folder",
        "_id": "673688be727d2e850bcd9302",
        "createdAt": "2024-11-14T23:39:28.509Z",
        "updatedAt": "2024-11-14T23:39:28.509Z",
        "id": "673688be727d2e850bcd9302"
      },
      {
        "name": "sketch.js",
        "content": "const replicateProxy = \"https://replicate-api-proxy.glitch.me\";\nlet feedback;\nlet emotionsColor = \"#FFFFFF\"; // Default color for the circle\n\nfunction setup() {\n    createCanvas(600, 1000);\n    feedback = createP(\"\").style(\"text-align\", \"center\");\n\n    // Center the container div\n    let container = createDiv();\n    container.style(\"position\", \"absolute\");\n    container.style(\"top\", \"50%\");\n    container.style(\"left\", \"50%\");\n    container.style(\"transform\", \"translate(-50%, -50%)\");\n    container.style(\"text-align\", \"center\");\n\n    // Create the input field inside the container\n    let input_field = createElement(\"textarea\");\n    input_field.id(\"input_prompt\");\n    input_field.size(450, 100);\n    input_field.parent(container);\n\n    // Create the button inside the container\n    let myButton = createButton(\"Enter\");\n    myButton.style('color', 'white');\n    myButton.style('background-color', 'lightblue');\n    myButton.style('width', '90px');\n    myButton.style('height', '30px');\n    myButton.style('margin-top', '10px');\n    myButton.parent(container);\n    myButton.mousePressed(() => {\n        askForWords(input_field.value());\n    });\n\n    feedback.parent(container);\n}\n\nfunction draw() {\n    background(220);\n    fill(emotionsColor); // Use the color from the API response\n    circle(width / 2, height / 2 + 100, 100); // Draw the circle in the center of the canvas\n}\n\nasync function askForWords(p_prompt) {\n    document.body.style.cursor = \"progress\";\n    feedback.html(\"Waiting for reply from API...\");\n    \n    const data = {\n        \"version\": \"2d19859030ff705a87c746f7e96eea03aefb71f166725aee39692f1476566d48\",\n        input: {\n            prompt: \"only give me 3 hex numbers that represent the color of the emotion of this prompt in alphabetical order according to importance in JSON format \" + p_prompt,\n            max_tokens: 100,\n            max_length: 100,\n        },\n    };\n\n    let options = {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: 'application/json',\n        },\n        body: JSON.stringify(data),\n    };\n    \n    const url = replicateProxy + \"/create_n_get/\";\n    const words_response = await fetch(url, options);\n    const proxy_said = await words_response.text(); // Use .text() instead of .json() since it's plain text\n\n    // Use a regular expression to find hex color codes in the text\n    let colorHexCodes = proxy_said.match(/#[A-Fa-f0-9]{6}/g);\n\n    if (colorHexCodes && colorHexCodes.length > 0) {\n        emotionsColor = colorHexCodes[0]; // Use the first hex color found\n        feedback.html(\"Received colors: \" + colorHexCodes.join(\", \"));\n    } else {\n        feedback.html(\"No valid color hex codes found in the response.\");\n    }\n    console.log(emotionsColor);\n    console.log(colorHexCodes);\n    document.body.style.cursor = \"auto\";\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "673688be727d2e850bcd9304",
        "createdAt": "2024-11-14T23:39:28.509Z",
        "updatedAt": "2024-11-14T23:39:28.509Z",
        "id": "673688be727d2e850bcd9304"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.8.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.8.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "673688be727d2e850bcd9303",
        "createdAt": "2024-11-14T23:39:28.509Z",
        "updatedAt": "2024-11-14T23:39:28.509Z",
        "id": "673688be727d2e850bcd9303"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "673688be727d2e850bcd9305",
        "createdAt": "2024-11-14T23:39:28.509Z",
        "updatedAt": "2024-11-14T23:39:28.509Z",
        "id": "673688be727d2e850bcd9305"
      }
    ],
    "createdAt": "2024-11-14T23:33:18.319Z",
    "updatedAt": "2024-11-14T23:39:28.509Z",
    "id": "uSBOySHyK"
  },
  {
    "_id": "kzDUjuY0w",
    "name": "Encouraging antler",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66fcb2d362df0bc1ef495df5",
          "66fcb2d362df0bc1ef495df4",
          "66fcb2d362df0bc1ef495df6"
        ],
        "fileType": "folder",
        "_id": "66fcb2d362df0bc1ef495df7",
        "createdAt": "2024-10-02T02:46:02.499Z",
        "updatedAt": "2024-10-02T02:46:02.499Z",
        "id": "66fcb2d362df0bc1ef495df7"
      },
      {
        "name": "sketch.js",
        "content": "let pos;\nlet vel;\nlet acc;\n\nfunction setup() {\n  createCanvas(400, 400);\n  pos = createVector(width/2, height/2)\n  vel = createVector(0, 0)\n  acc = p5.Vector.random2D();\n}\n\nfunction draw() {\n  background(220);\n  vel.add(acc);\n  pos.add(vel);\n  ellipse(pos.x, pos.y, 10, 10);\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66fcb2d362df0bc1ef495df4",
        "createdAt": "2024-10-02T02:46:02.499Z",
        "updatedAt": "2024-10-02T02:46:02.499Z",
        "id": "66fcb2d362df0bc1ef495df4"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "66fcb2d362df0bc1ef495df5",
        "createdAt": "2024-10-02T02:46:02.499Z",
        "updatedAt": "2024-10-02T02:46:02.499Z",
        "id": "66fcb2d362df0bc1ef495df5"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "66fcb2d362df0bc1ef495df6",
        "createdAt": "2024-10-02T02:46:02.499Z",
        "updatedAt": "2024-10-02T02:46:02.499Z",
        "id": "66fcb2d362df0bc1ef495df6"
      }
    ],
    "updatedAt": "2024-10-02T02:46:02.499Z",
    "createdAt": "2024-10-02T02:46:02.499Z",
    "id": "kzDUjuY0w"
  },
  {
    "_id": "wZWlkSFm6",
    "name": "Final project color detection + projection",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "674179bd0a0fd72ea3d4ffec",
          "674179bd0a0fd72ea3d4ffeb",
          "674179bd0a0fd72ea3d4ffed"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "674179bd0a0fd72ea3d4ffee",
        "createdAt": "2024-12-03T06:36:17.819Z",
        "updatedAt": "2024-12-03T06:36:17.819Z",
        "id": "674179bd0a0fd72ea3d4ffee"
      },
      {
        "name": "sketch.js",
        "content": "let video;\nlet positions = [];\nlet colorData = [null, null, null, null];\nlet originalColor = [null, null, null, null];\nlet colorFrozen = [false, false, false, false];\nlet freezeTime = [null, null, null, null];\nlet fullscreenStarted = false;\nlet bgo = 0;\nlet checkInterval = 500; // Interval in milliseconds for pixel loading\nlet lastCheckTime = 0;\n\n// Individual video variables\nlet video0, video1, video2;\nlet currentVideo = null; // Tracks the current video being played\nlet videoStarted = false;\nlet delayTimer;\nlet clickCount = 0; // Counter to track the number of clicks\n\nlet images = [];\nlet imageCount = 7\nlet flowersVisible = false; // Controls whether flowers are shown\n\n////////////////////////////////////\n////////////////////////\n//simplified template. for longer story //https://editor.p5js.org/rios/sketches/wtZvFIkW5\n\nconst askForPort = true; //true first time to pick port, then change to false\nconst serial = new p5.WebSerial();\nlet portButton;\nlet inData;\nlet outData;\n\n\nfunction preload() {\n  // Load videos individually\n  video0 = createVideo(\"./Video0.mp4\");\n  video1 = createVideo(\"./Video1.mp4\");\n  video2 = createVideo(\"./Video2.mp4\");\n\n  for (let i = 5; i <= 11; i++) {\n    images.push(loadImage(`flowers${i}.png`)); // Replace with your image path if needed\n  }\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  video = createCapture(VIDEO);\n\n  video.size(width, height);\n  video.hide();\n  colorMode(RGB, 255);\n\n  // Setup individual videos\n  setupVideo(video0);\n  setupVideo(video1);\n  setupVideo(video2);\n\n\n//     ///////////////////////////////////\n//     if (askForPort) {\n//       makePortButton();\n//     } else {\n//       serial.getPorts(); //skip the button use port from last time\n//     }\n//     serial.on(\"portavailable\", openPort);\n//     serial.on(\"data\", serialEvent);\n}\n\nfunction setupVideo(vid) {\n  vid.size(700, 525);\n  vid.hide(); // Hide video elements\n  vid.onended(handleVideoEnd); // Handle video end\n}\n\nfunction draw() {\n  resizeCanvas(windowWidth, windowHeight);\n  console.log(windowHeight);\n  // Only load pixels at specified intervals\n  if (millis() - lastCheckTime > checkInterval) {\n    video.loadPixels(); // Ensure we're working with the latest frame\n    lastCheckTime = millis();\n  }\n\n  // Display the webcam feed on the canvas\n  image(video, 0, 0, width, height);\n\n  // Loop through the positions and store the most recent color for each circle\n  for (let i = 0; i < positions.length; i++) {\n    let pos = positions[i];\n    let colorAtPos = getAverageColor(pos.x, pos.y); // Get averaged color\n\n    if (!colorFrozen[i]) {\n      if (originalColor[i]) {\n        let colorDiff = colorDifference(originalColor[i], colorAtPos);\n        if (colorDiff > 50 && freezeTime[i] === null) {\n          freezeTime[i] = millis();\n        }\n      } else {\n        originalColor[i] = colorAtPos;\n      }\n\n      if (freezeTime[i] !== null && millis() - freezeTime[i] > 1500) {\n        colorFrozen[i] = true;\n      }\n\n      if (!colorFrozen[i]) {\n        colorData[i] = colorAtPos;\n      }\n    }\n\n    // Draw a circle at the sample position to show where we're sampling\n    fill(colorData[i] || colorAtPos);\n    stroke(0);\n    strokeWeight(4);\n    ellipse(pos.x, pos.y, 20, 20);\n  }\n\n  // Draw four rectangles using the stored color from each color array\n  let rectWidth = width / 4;\n  for (let i = 0; i < 4; i++) {\n    if (colorData[i]) {\n      fill(colorData[i]);\n      noStroke();\n      rect(i * rectWidth, height - 100, rectWidth, 100);\n    }\n  }\n  background(0, bgo);\n  // Set background to black and start video when fourth color freezes\n  if (colorFrozen[3] && !videoStarted) {\n    bgo = 255;\n    videoStarted = true;\n    setTimeout(() => {\n      playVideo(video0); // Start the first video\n    }, 5000);\n  }\n\n\n\n  // Display the current video if started\n  if (videoStarted && currentVideo) {\n    imageMode(CENTER);\n    // Update position based on the current video\n    if (currentVideo === video0) {\n      // serial.write(1);\n      image(currentVideo, 350, windowHeight / 2); // Position video to the left\n    } else if (currentVideo === video1) {\n      image(currentVideo, windowWidth - 350, windowHeight / 2); // Position video in the center\n    } else if (currentVideo === video2) {\n      image(currentVideo, windowWidth - 350, windowHeight / 2); // Position video to the right\n    }\n  }\n  if (flowersVisible) {  \n      for (let i = 0; i < 3; i++) {\n        if (images[i] && colorData[i]) {\n          tint(colorData[i]); // Apply the corresponding color from colorData\n          imageMode(CENTER);\n          image(images[i], 300, windowHeight / 2 - 50, 1280 * 7/16, 1602 * 7/16); // Adjust size as needed\n        }\n    }\n    noTint(); // Clear the tint effect after drawing flowers\n  }\n}\n\nfunction mousePressed() {\n  if (\n    positions.length < 4 &&\n    mouseX >= 0 &&\n    mouseX < width &&\n    mouseY >= 0 &&\n    mouseY < height\n  ) {\n    positions.push(createVector(mouseX, mouseY));\n  }\n\n    // Increment the click counter\n    clickCount++;\n\n    // If 4 clicks have been registered, set bgo to 255\n    // if (clickCount >= 4) {\n    //   bgo = 255;\n    // }\n}\n\n// Play the specified video\nfunction playVideo(video) {\n  currentVideo = video;\n  // video.show();\n  video.play();\n}\n\n// Handle video end to play the next video\nfunction handleVideoEnd() {\n\n  if (currentVideo === video0) {\n    currentVideo.hide();\n    setTimeout(() => {\n      showFlowers(); // Show flowers after a delay\n    }, 2000); // 2-second delay before showing flowers\n    noTint();\n    // serial.write(1);\n    delayTimer = setTimeout(() => playVideo(video1), 7000); // 7-second delay before playing the next video\n  } else if (currentVideo === video1) {\n    // serial.write(1);\n    imageMode(CENTER);\n    image(currentVideo, windowWidth / 2, windowHeight / 2); // Position video at the center\n    delayTimer = setTimeout(() => playVideo(video2), 2000);\n  } else if (currentVideo === video2) {\n    imageMode(CENTER);\n    image(currentVideo, windowWidth - (290), windowHeight / 2); // Position video to the right\n\n    currentVideo.hide(); // Hide the last video\n    //serial.write(2);\n  }\n}\n\nfunction showFlowers() {\n  flowersVisible = true; // Set flowers to be visible\n}\n\n// Calculate color difference\nfunction colorDifference(c1, c2) {\n  let r1 = red(c1);\n  let g1 = green(c1);\n  let b1 = blue(c1);\n  let r2 = red(c2);\n  let g2 = green(c2);\n  let b2 = blue(c2);\n\n  return dist(r1, g1, b1, r2, g2, b2);\n}\n\n// Get averaged color at a position\nfunction getAverageColor(x, y, size = 0) {\n  let r = 0,\n    g = 0,\n    b = 0;\n  let count = 0;\n  for (let dx = -size; dx <= size; dx++) {\n    for (let dy = -size; dy <= size; dy++) {\n      let col = video.get(x + dx, y + dy);\n      r += red(col);\n      g += green(col);\n      b += blue(col);\n      count++;\n    }\n  }\n  return color(r / count, g / count, b / count);\n}\n\n\nfunction keyPressed() {\n  if (!fullscreen()) {\n    fullscreen(true);\n    fullscreenStarted = true; // Track if fullscreen has started\n  }\n}\n\n////////////////////////\n///////////////////////////A CALLBACK FUNCTION CALLED WHEN DATA COMES IN  ///  \n///////////////////////////\n\n// function serialEvent() {\n//   // read a string from the serial port\n//   // until you get carriage return and newline:\n//   let inString = serial.readStringUntil(\"\\r\\n\");\n//   //check to see that there's actually a string there:\n//   if (inString) {\n//     inData = split(inString, \",\");\n//   }\n// }\n\n\n// function openPort() {\n//   serial.open()\n//   if (portButton) portButton.hide();\n// }\n\n// // This is a convenience for picking from available serial ports:\n// function makePortButton() {\n//   // create and position a port chooser button:\n//   portButton = createButton(\"choose port\");\n//   portButton.position(10, 10);\n//   // give the port button a mousepressed handler:\n//   portButton.mousePressed(() =>serial.requestPort());\n// }\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "674179bd0a0fd72ea3d4ffeb",
        "createdAt": "2024-12-03T06:36:17.819Z",
        "updatedAt": "2024-12-03T06:36:17.819Z",
        "id": "674179bd0a0fd72ea3d4ffeb"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674179bd0a0fd72ea3d4ffec",
        "createdAt": "2024-12-03T06:36:17.819Z",
        "updatedAt": "2024-12-03T06:36:17.819Z",
        "id": "674179bd0a0fd72ea3d4ffec"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674179bd0a0fd72ea3d4ffed",
        "createdAt": "2024-12-03T06:36:17.819Z",
        "updatedAt": "2024-12-03T06:36:17.819Z",
        "id": "674179bd0a0fd72ea3d4ffed"
      }
    ],
    "updatedAt": "2024-12-03T06:36:17.819Z",
    "createdAt": "2024-11-23T06:44:16.274Z",
    "id": "wZWlkSFm6"
  },
  {
    "_id": "N6oBUGHrR",
    "name": "Gradient Spiral",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "676fb73ce2ebcf8359724e07",
          "676fb73ce2ebcf8359724e06",
          "676fb73ce2ebcf8359724e08"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "676fb73ce2ebcf8359724e09",
        "createdAt": "2024-12-30T18:49:25.806Z",
        "updatedAt": "2024-12-30T18:49:25.806Z",
        "id": "676fb73ce2ebcf8359724e09"
      },
      {
        "name": "sketch.js",
        "content": "let cols, rows; let size = 10;\nlet threshold = 0.5; let t = 0;\n\n\nfunction setup() {\n  createCanvas(400, 400);\n  cols = width/size;\n  rows = height/size;\n  textSize(size);\n  textAlign(CENTER, CENTER);\n}\n\nfunction draw() {\n  background(0);\n  \n  for (let i = 0; i<cols; i ++){\n    for(let j=0; j<rows;j++){\n      let x = size/2 + i*size;\n      let y = size/2 + j*size;\n      let d = dist(x, y, width/2, height/2);\n      let k = 10;\n      \n      let dx = x - width/2;\n      let dy = y - height/2;\n      let angle = atan2(dy, dx);\n      \n      let spiralPath = sin(d/k + angle + t);\n      \n      let distanceFactor = 100;\n      let angleFactor = 5;\n      let condition= sin(d / distanceFactor + angleFactor * angle);\n      \n      let symbol;\n      if(spiralPath > condition) {\n        symbol = \"X\";\n        c = colorGradient(d);\n      } else {\n        symbol = \".\"\n        c = color(255, 100);\n      }\n      \n      fill(c);\n      text(symbol, x, y )\n    }\n  }\n  t -= 0.01;\n}\n\nfunction colorGradient(d){\n  let colors = [color(252, 176, 69), color(131, 58, 180)];\n  let colorRadius = 120;\n  let amt = d % colorRadius / colorRadius;\n  \n  return lerpColor(colors[0],colors[1], amt);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "676fb73ce2ebcf8359724e06",
        "createdAt": "2024-12-30T18:49:25.807Z",
        "updatedAt": "2024-12-30T18:49:25.807Z",
        "id": "676fb73ce2ebcf8359724e06"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "676fb73ce2ebcf8359724e07",
        "createdAt": "2024-12-30T18:49:25.807Z",
        "updatedAt": "2024-12-30T18:49:25.807Z",
        "id": "676fb73ce2ebcf8359724e07"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "676fb73ce2ebcf8359724e08",
        "createdAt": "2024-12-30T18:49:25.807Z",
        "updatedAt": "2024-12-30T18:49:25.807Z",
        "id": "676fb73ce2ebcf8359724e08"
      }
    ],
    "updatedAt": "2024-12-30T18:49:25.807Z",
    "createdAt": "2024-12-30T18:49:25.807Z",
    "id": "N6oBUGHrR"
  },
  {
    "_id": "xcOC9zfvp7",
    "name": "Granite crocus",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d43fc1bf80f41c5e0a55e3",
          "67d440a3bf80f41c5e0a55e6",
          "67d43fc1bf80f41c5e0a55e2",
          "67d43fc1bf80f41c5e0a55e4"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d43fc1bf80f41c5e0a55e5",
        "createdAt": "2025-03-14T15:06:48.413Z",
        "updatedAt": "2025-03-14T15:06:48.413Z",
        "id": "67d43fc1bf80f41c5e0a55e5"
      },
      {
        "name": "sketch.js",
        "content": "let seaData;\nlet csv;\nlet index = 1;\nlet currentSeaLevel = 0;\n\nfunction preload(){\n  csv = loadTable('sealevel.csv','csv','header');\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n  seaData = csv.rows;\n  setInterval(increaseIndex, 1000);\n}\n\nfunction draw() {\n  background(220);\n  \n  \n  currentSeaLevel = lerp(currentSeaLevel, seaData[index].obj.sealevel, 0.05);\n  \n  let h = map(currentSeaLevel, 0, 9.8, 0, 400);\n  \n  console.log(h);\n  \n  fill(200, 100, 100);\n  noStroke();\n  rectMode(CORNERS);\n  rect(0, 400, 400, 400-h);\n  \n  fill(0, 0, 0);\n  \n  text(seaData[index].obj.Year, 0, 380);\n  text(seaData[index].obj.sealevel + 'mm', 40, 380);\n}\n\nfunction increaseIndex(){\n  index ++;\n  if(index == seaData.length){\n    index = 0;\n  }\n}\n\nfunction mousePressed(){\n  increaseIndex();\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67d43fc1bf80f41c5e0a55e2",
        "createdAt": "2025-03-14T15:06:48.413Z",
        "updatedAt": "2025-03-14T15:06:48.413Z",
        "id": "67d43fc1bf80f41c5e0a55e2"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43fc1bf80f41c5e0a55e3",
        "createdAt": "2025-03-14T15:06:48.413Z",
        "updatedAt": "2025-03-14T15:06:48.413Z",
        "id": "67d43fc1bf80f41c5e0a55e3"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43fc1bf80f41c5e0a55e4",
        "createdAt": "2025-03-14T15:06:48.413Z",
        "updatedAt": "2025-03-14T15:06:48.413Z",
        "id": "67d43fc1bf80f41c5e0a55e4"
      },
      {
        "name": "sealevel.csv",
        "content": "Year,sealevel\n1880,0\n1881,0.220472441\n1882,-0.440944881\n1883,-0.232283464\n1884,0.59055118\n1885,0.531496062\n1886,0.437007874\n1887,0.216535433\n1888,0.299212598\n1889,0.362204724\n1890,0.440944881\n1891,0.374015748\n1892,0.499999999\n1893,0.685039369\n1894,0.303149606\n1895,0.767716535\n1896,0.468503937\n1897,0.673228346\n1898,1.043307086\n1899,1.338582676\n1900,1.125984251\n1901,1.110236219\n1902,1.291338581\n1903,1.606299211\n1904,1.2007874\n1905,0.984251968\n1906,1.251968503\n1907,1.196850392\n1908,1.098425196\n1909,1.27559055\n1910,1.271653542\n1911,1.598425195\n1912,1.476377951\n1913,1.547244093\n1914,1.795275589\n1915,2.10629921\n1916,2.031496061\n1917,1.854330707\n1918,1.791338581\n1919,1.854330707\n1920,1.905511809\n1921,1.988188974\n1922,1.952755904\n1923,1.999999998\n1924,1.712598423\n1925,1.791338581\n1926,2.047244092\n1927,2.003937006\n1928,1.850393699\n1929,1.905511809\n1930,2.062992124\n1931,2.047244092\n1932,2.271653541\n1933,2.440944879\n1934,2.228346454\n1935,2.448818895\n1936,2.295275588\n1937,2.519685037\n1938,2.622047241\n1939,2.826771651\n1940,2.618110234\n1941,3.098425194\n1942,3.098425194\n1943,3.098425194\n1944,2.84645669\n1945,2.95669291\n1946,3.251968501\n1947,3.374015745\n1948,3.562992122\n1949,3.51181102\n1950,3.598425193\n1951,3.972440941\n1952,3.870078736\n1953,4.043307082\n1954,3.929133854\n1955,3.964566925\n1956,3.763779524\n1957,4.291338578\n1958,4.346456688\n1959,4.358267712\n1960,4.503937003\n1961,4.748031491\n1962,4.543307082\n1963,4.480314956\n1964,4.169291334\n1965,4.610236216\n1966,4.397637791\n1967,4.452755901\n1968,4.484251964\n1969,4.751968499\n1970,4.67716535\n1971,4.881889759\n1972,5.240157475\n1973,5.003937003\n1974,5.472440939\n1975,5.409448813\n1976,5.370078735\n1977,5.303149601\n1978,5.555118105\n1979,5.362204719\n1980,5.598425191\n1981,6.086614167\n1982,5.858267711\n1983,6.188976372\n1984,6.153543301\n1985,5.74803149\n1986,5.771653537\n1987,5.795275585\n1988,5.980314955\n1989,6.157480309\n1990,6.24803149\n1991,6.346456686\n1992,6.374015742\n1993,6.306781039\n1994,6.438651665\n1995,6.57674495\n1996,6.723710173\n1997,6.779514525\n1998,6.770265291\n1999,6.840497137\n2000,6.919122465\n2001,7.116325549\n2002,7.258223788\n2003,7.410511627\n2004,7.465565214\n2005,7.566645782\n2006,7.678404507\n2007,7.674412818\n2008,7.828383728\n2009,7.973212968\n2010,8.03087412\n2011,7.966928207\n2012,8.362109902\n2013,8.453537927\n2014,8.579036068\n2015,8.92498423\n2016,9.048398764\n2017,9.11098598\n2018,9.234520538\n2019,9.480222637\n2020,9.592476574\n2021,9.797220121",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d440a3bf80f41c5e0a55e6",
        "createdAt": "2025-03-14T15:06:48.413Z",
        "updatedAt": "2025-03-14T15:06:48.413Z",
        "id": "67d440a3bf80f41c5e0a55e6"
      }
    ],
    "updatedAt": "2025-03-14T15:06:48.413Z",
    "createdAt": "2025-03-14T14:54:50.570Z",
    "id": "xcOC9zfvp7"
  },
  {
    "_id": "RHjju-wxy",
    "name": "Group project official",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67181c20c7de224b851ecb9e",
          "67181c20c7de224b851ecb9f",
          "67181c20c7de224b851ecba0"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67181c20c7de224b851ecb9d",
        "createdAt": "2024-10-26T06:28:52.189Z",
        "updatedAt": "2024-10-26T06:28:52.189Z",
        "id": "67181c20c7de224b851ecb9d"
      },
      {
        "name": "sketch.js",
        "content": "const askForPort = true;\nlet portButton;\nlet inData;\n//let sensor1 = 0;\nlet position;\nlet fullscreenStarted = false;\nlet port;\nlet reader;\n\nasync function setup() {\n  createCanvas(400, 400);\n  textSize(32);\n\n  if (!(\"serial\" in navigator)) {\n    alert(\"WebSerial is not supported. Please use Chrome.\");\n    return;\n  }\n\n  if (askForPort) {\n    makePortButton();\n  } else {\n    getPorts(); // Retrieve previous port if available\n  }\n}\n\nfunction draw() {\n  background(0);\n\n  if (inData) {\n    sensor1 = parseInt(inData[0]);\n    let sensor2 = parseInt(inData[1]);\n    text(\"Input \" + inData + \", \" + sensor2, 100, 100);\n \n  }\n \n\n  position = map(inData, 0, 1000, 0, 400);\n  fill(255);\n  circle(position, height / 2, 50);\n  console.log(position);\n}\n\n\n//function serialEvent(value) {\n // inData = value.split(\",\");\n//}\n\nfunction serialEvent(value) {\n  console.log(\"Received data:\", value); // Check if data is being received\n  inData = value.split(\",\");\n}\n\nasync function openPort(selectedPort) {\n  try {\n    port = selectedPort;\n    await port.open({ baudRate: 9600 });\n    if (portButton) portButton.hide();\n\n    const textDecoder = new TextDecoderStream();\n    port.readable.pipeTo(textDecoder.writable);\n    reader = textDecoder.readable.getReader();\n\n    readSerialData(); // Begin reading data\n  } catch (error) {\n    console.error(\"Failed to open serial port:\", error);\n    alert(\"Failed to open serial port. Please try again.\");\n  }\n}\n\nasync function readSerialData() {\n  while (true) {\n    const { value, done } = await reader.read();\n    if (done) {\n      console.log(\"Stream closed.\");\n      reader.releaseLock();\n      break;\n    }\n    serialEvent(value.trim());\n  }\n}\n\nfunction makePortButton() {\n  portButton = createButton(\"Choose Port\");\n  portButton.position(10, 10);\n  portButton.mousePressed(requestPort);\n}\n\nasync function requestPort() {\n  try {\n    const selectedPort = await navigator.serial.requestPort();\n    openPort(selectedPort);\n  } catch (error) {\n    console.error(\"Port selection was canceled.\");\n  }\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67181c20c7de224b851ecb9f",
        "createdAt": "2024-10-26T06:28:52.189Z",
        "updatedAt": "2024-10-26T06:28:52.189Z",
        "id": "67181c20c7de224b851ecb9f"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  \n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n    \n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n  \n  \n  </head>\n \n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67181c20c7de224b851ecb9e",
        "createdAt": "2024-10-26T06:28:52.189Z",
        "updatedAt": "2024-10-26T06:28:52.189Z",
        "id": "67181c20c7de224b851ecb9e"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67181c20c7de224b851ecba0",
        "createdAt": "2024-10-26T06:28:52.189Z",
        "updatedAt": "2024-10-26T06:28:52.189Z",
        "id": "67181c20c7de224b851ecba0"
      }
    ],
    "createdAt": "2024-10-22T21:41:52.015Z",
    "updatedAt": "2024-10-26T06:28:52.189Z",
    "id": "RHjju-wxy"
  },
  {
    "_id": "gBnYTPxNW",
    "name": "Hand motion tracing drawing",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6721b694fb23cd4423312ca6",
          "6721b694fb23cd4423312ca7"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6721b694fb23cd4423312ca5",
        "createdAt": "2024-10-30T18:19:34.849Z",
        "updatedAt": "2024-10-30T18:19:34.849Z",
        "id": "6721b694fb23cd4423312ca5"
      },
      {
        "name": "index.html",
        "content": "<!--\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\n  Learn more about the ml5.js project: https://ml5js.org/\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\n\n  This example demonstrates hand tracking on live video through ml5.handPose.\n-->\n\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ml5.js handPose Webcam Example</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6721b694fb23cd4423312ca6",
        "createdAt": "2024-10-30T18:19:34.849Z",
        "updatedAt": "2024-10-30T18:19:34.849Z",
        "id": "6721b694fb23cd4423312ca6"
      },
      {
        "name": "sketch.js",
        "content": "let handPose;\nlet video;\nlet hands = [];\nlet painting;\nlet px = 0;\nlet py = 0;\n\nfunction preload() {\n  // Load the handPose model\n  handPose = ml5.handPose();\n}\n\nfunction setup() {\n  createCanvas(640, 480);\n  painting = createGraphics(640, 480);\n  painting.clear();\n  // Create the webcam video and hide it\n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n  // start detecting hands from the webcam video\n  handPose.detectStart(video, gotHands);\n}\n\nfunction draw() {\n  // Draw the webcam video\n  image(video, 0, 0, width, height);\n  if (hands.length > 0) {\n    let hand = hands[0];\n    let index = hand.index_finger_tip;\n    let thumb = hand.thumb_tip;\n    painting.fill(255, 0, 255);\n    painting.noStroke();\n    let x = (index.x + thumb.x)/2\n    let y = (index.y + thumb.y)/2;\n    \n    let d = dist(index.x, index.y, thumb.x, thumb.y);\n    \n    if(d < 20){\n      painting.stroke(0, 0, 255);\n      painting.strokeWeight(8);\n      painting.line(px, py, x, y);\n    }\n    px = x;\n    py = y;\n  }\n  image(painting, 0, 0);\n}\n\n// Callback function for when handPose outputs data\nfunction gotHands(results) {\n  // save the output to the hands variable\n  hands = results;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6721b694fb23cd4423312ca7",
        "createdAt": "2024-10-30T18:19:34.849Z",
        "updatedAt": "2024-10-30T18:19:34.849Z",
        "id": "6721b694fb23cd4423312ca7"
      }
    ],
    "createdAt": "2024-10-30T04:31:15.146Z",
    "updatedAt": "2024-10-30T18:19:34.849Z",
    "id": "gBnYTPxNW"
  },
  {
    "_id": "10zXdOGM_",
    "name": "handPose-keypoints copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67b24e3c2c96de8a680c069a",
          "67b01290b83f40f2fbb322cc",
          "67b2534a5fcb381a46974b0b",
          "67af7b4af129165b78739144",
          "67af76f8109efc18e77bab45",
          "67af7a92f129165b78734414",
          "67af76f8109efc18e77bab46",
          "67b243665db908566b83ef52",
          "67b0ec2bb45d4b7b93a7d466",
          "67b0ec2bb45d4b7b93a7d471",
          "67b0ec2b6b59ceaba365f84b",
          "67b0ec2bbbc1ebca768c56f3",
          "67b0edc5034df4a7d249469e"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67af76f8109efc18e77bab44",
        "createdAt": "2025-02-16T21:14:13.459Z",
        "updatedAt": "2025-02-16T21:14:13.459Z",
        "id": "67af76f8109efc18e77bab44"
      },
      {
        "name": "index.html",
        "content": "<!--\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\n  Learn more about the ml5.js project: https://ml5js.org/\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\n\n  This example demonstrates hand tracking on live video through ml5.handPose.\n-->\n\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ml5.js handPose Webcam Example</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/addons/p5.sound.min.js\"></script>\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n    <script src=\"backgrounds.js\"></script>\n    <script>\n  document.addEventListener(\"DOMContentLoaded\", function() {\n    let video = document.getElementById(\"backgroundVideo\");\n\n    document.addEventListener(\"click\", function() {\n      if (video && video.paused) {\n        video.play();\n      }\n    });\n  });\n</script>\n\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67af76f8109efc18e77bab45",
        "createdAt": "2025-02-16T21:14:13.459Z",
        "updatedAt": "2025-02-16T21:14:13.459Z",
        "id": "67af76f8109efc18e77bab45"
      },
      {
        "name": "sketch.js",
        "content": "let ps = []; // this is for the system\n//let backgrounds = [];\nlet repeatCount = 0;\nlet maxRepeats = 7;\nlet p = null;\nlet Speed = 1;\n\nlet handPose;\nlet video;\nlet hands = [];\nlet open = false;\nlet pushed = false;\n\nlet prevHandPos = null; // Stores previous position of keypoint 9\nlet moveThreshold = 140; // Distance threshold for detecting movement\n\nlet particleGenerated = false; // Track if a particle has been generated for movement\n\nlet backgroundVideo;\n\nlet water1, water2, water3, water4, water5;\nlet water = [];\n\nlet started = false;\nlet font;\nlet a = 255;\nlet increasing = true;\n\nlet backgroundmusicplaying = false;\n\nfunction preload() {\n  // Load the handPose model\n  handPose = ml5.handPose();\n  water1 = loadSound(\"water1.MP3\");\n  water2 = loadSound(\"water2.MP3\");\n  water3 = loadSound(\"water3.MP3\");\n  water4 = loadSound(\"water4.MP3\");\n  water5 = loadSound(\"water5.MP3\");\n  water = [water1, water2, water3, water4, water5];\n  backgroundVideo = createVideo(\"background.mp4\"); // Ensure the file exists\n  font = loadFont(\"KingsguardCalligraphy.otf\");\n  backgroundmusic = loadSound(\"backgroundmusic.MP3\");\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n\n  video = createCapture(VIDEO);\n  video.size(windowWidth, windowHeight);\n  video.hide();\n  // start detecting hands from the webcam video\n  handPose.detectStart(video, gotHands);\n\n  backgroundVideo.size(windowWidth, windowHeight);\n  backgroundVideo.loop(); // Ensures the video plays continuously\n  backgroundVideo.hide(); // Prevents default HTML video display\n  backgroundVideo.volume(0);\n}\n\nfunction draw() {\n  // Draw the webcam video\n  resizeCanvas(windowWidth, windowHeight);\n  background(0, 0, 0, 255);\n  noStroke();\n  if (started == false) {\n    textSize(35);\n\n    if (a >= 255) {\n      increasing = false;\n    } else if (a <= 150) {\n      increasing = true;\n    }\n\n    if (increasing) {\n      a = a + 1.5;\n    } else {\n      a = a - 1.5;\n    }\n\n    fill(255, a);\n    textAlign(CENTER, CENTER);\n    // textFont(font);\n    text(\n      \"Click to enter a new realm. Open, close, and wave one hand to interact\",\n      windowWidth / 2,\n      windowHeight / 2\n    );\n    \n  }\n\n  translate(width, 0); // Move origin to right\n  scale(-1, 1); // Flip horizontally\n  rectMode(CORNER);\n\n  // backgroundVideo.play();\n  backgroundVideo.speed(Speed);\n  image(backgroundVideo, 0, 0, windowWidth, windowHeight);\n\n  for (let i = ps.length - 1; i >= 0; i--) {\n    ps[i].update();\n    ps[i].display();\n\n    if (ps[i].done == true) {\n      this.resetTimeout = setTimeout(() => {}, 7000);\n      console.log(\"Speed reset to 1 after 3 seconds\");\n      Speed = 1;\n    }\n\n    if (ps[i].done) {\n      ps.splice(i, 1);\n    }\n  }\n\n  // Draw all the tracked hand points\n  for (let i = 0; i < hands.length; i++) {\n    let hand = hands[i];\n    // for (let j = 0; j < hand.keypoints.length; j++) {\n    //   let keypoint = hand.keypoints[j];\n    //   fill(0, 255, 0);\n    //   noStroke();\n    //   circle(keypoint.x, keypoint.y, 10);\n    // }\n    if (isHandOpen(hand)) {\n      // fill(255, 0, 0);\n      // textSize(32);\n      // text(\"Hand is OPEN\", 50, 50);\n      open = true;\n    } else {\n      // fill(0, 0, 255);\n      // textSize(32);\n      // text(\"Hand is CLOSED\", 50, 50);\n      open = false;\n      pushed = false;\n    }\n\n    if (open == true && pushed == false) {\n      let handposition = hand.keypoints[9];\n\n      p = new Particle(handposition.x, handposition.y);\n      ps.push(new System(handposition.x, handposition.y));\n      for (let i = 0; i < 3; i++) {\n        setTimeout(\n          () => ps.push(new System(handposition.x, handposition.y)),\n          200 + i * 200\n        );\n\n        Speed = 4;\n        pushed = true;\n\n        let soundIndex = floor(random(0, 3));\n        if (!water[soundIndex].isPlaying()) {\n          water[soundIndex].play();\n        }\n      }\n    }\n    let currentHandPos = hand.keypoints[9];\n\n    fill(255);\n\n    if (open) {\n      stroke(255);\n      strokeWeight(5);\n      noFill();\n      circle(currentHandPos.x, currentHandPos.y, 15, 15);\n    } else if (!open) {\n      circle(currentHandPos.x, currentHandPos.y, 10, 10);\n      // Speed = 1;\n    }\n\n    if (prevHandPos) {\n      // Calculate distance moved\n      let distanceMoved = dist(\n        currentHandPos.x,\n        currentHandPos.y,\n        prevHandPos.x,\n        prevHandPos.y\n      );\n\n      // Check if movement is significant\n      if (distanceMoved > moveThreshold && open == true) {\n        // fill(0, 255, 0);\n        // textSize(32);\n        // text(\"Hand MOVED\", 50, 100);\n\n        for (let i = 0; i < 3; i++) {\n          setTimeout(\n            () => ps.push(new System(currentHandPos.x, currentHandPos.y)),\n            200 + i * 200\n          );\n          particleGenerated = true;\n        }\n\n        Speed = 4;\n        let soundIndex = floor(random(0, 3));\n        if (!water[soundIndex].isPlaying()) {\n          water[soundIndex].play();\n        }\n      } else if (distanceMoved < moveThreshold * 0.8) {\n        particleGenerated = false;\n      }\n    }\n    // Update previous hand position for next frame\n    prevHandPos = { x: currentHandPos.x, y: currentHandPos.y };\n  }\n}\n\nfunction isHandOpen(hand) {\n  let threshold = 100; // Adjust based on testing\n\n  let thumbTip = hand.keypoints[4];\n  let indexTip = hand.keypoints[8];\n  let middleTip = hand.keypoints[12];\n  let ringTip = hand.keypoints[16];\n  let pinkyTip = hand.keypoints[20];\n\n  let indexKnuckle = hand.keypoints[5];\n  let middleKnuckle = hand.keypoints[9];\n  let ringKnuckle = hand.keypoints[13];\n  let pinkyKnuckle = hand.keypoints[17];\n\n  // Measure distances\n  let indexDist = dist(indexTip.x, indexTip.y, indexKnuckle.x, indexKnuckle.y);\n  let middleDist = dist(\n    middleTip.x,\n    middleTip.y,\n    middleKnuckle.x,\n    middleKnuckle.y\n  );\n  let ringDist = dist(ringTip.x, ringTip.y, ringKnuckle.x, ringKnuckle.y);\n  let pinkyDist = dist(pinkyTip.x, pinkyTip.y, pinkyKnuckle.x, pinkyKnuckle.y);\n\n  // If most fingers are extended, consider the hand open\n  if (\n    indexDist > threshold &&\n    middleDist > threshold &&\n    pinkyDist > threshold\n  ) {\n    return true; // Hand is open\n  } else {\n    return false; // Hand is closed\n  }\n}\n\nfunction mousePressed() {\n  backgroundVideo.play();\n  fullscreen(true);\n  started = true;\n  if(backgroundmusicplaying == false){\n    backgroundmusic.play()\n    backgroundmusic.loop();\n    backgroundmusicplaying = true;\n  }\n}\n\nclass System {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n\n    this.particles = [];\n    this.num = 150;\n    for (let i = 0; i < this.num; i++) {\n      this.particles.push(new Particle(this.x, this.y));\n    }\n    //console.log(\"hello\");\n    this.done = false;\n  }\n\n  update() {\n    this.finished();\n    for (let i = this.particles.length - 1; i >= 0; i--) {\n      this.particles[i].update();\n\n      if (this.particles[i].done) {\n        this.particles.splice(i, 1);\n      }\n    }\n  }\n\n  display() {\n    for (let i = 0; i < this.particles.length; i++) {\n      this.particles[i].display();\n    }\n  }\n\n  finished() {\n    if (this.particles.length == 0) {\n      this.done = true;\n    } else {\n      this.done = false;\n    }\n  }\n}\n\nfunction startVideo() {\n  let videoElement = document.getElementById(\"backgroundVideo\");\n  if (videoElement && videoElement.paused) {\n    videoElement\n      .play()\n      .catch((error) => console.log(\"Autoplay blocked:\", error));\n  }\n}\n\n// Modify gotHands() to trigger startVideo() when a hand appears\nfunction gotHands(results) {\n  hands = results;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67af76f8109efc18e77bab46",
        "createdAt": "2025-02-16T21:14:13.459Z",
        "updatedAt": "2025-02-16T21:14:13.459Z",
        "id": "67af76f8109efc18e77bab46"
      },
      {
        "name": "particle.js",
        "content": "class Particle {\n  constructor(x, y) {\n    this.pos = createVector(x, y);\n    this.vel = createVector(0, 0);\n    this.acc = p5.Vector.random2D();\n    this.acc.mult(0.03);\n    this.life = 255;\n    this.done = false;\n    this.hueValue = 0;\n    this.color1 = 163;\n    this.color2 = 212;\n  }\n\n  update() {\n    if (this.pos.x <= 0 || this.pos.x >= width) {\n      //this.acc.x = this.acc.x * -1;\n      this.vel.x = this.vel.x * -1;\n    }\n\n    if (this.pos.y <= 0 || this.pos.y >= height) {\n      //this.acc.y = this.acc * -1;\n      this.vel.y = this.vel.y * -1;\n    }\n\n    this.finished();\n\n    this.vel.add(this.acc);\n    this.pos.add(this.vel);\n\n    this.life -= 3;\n  }\n  display() {\n    noStroke();\n    //  let oscillation = sin(frameCount * 0.05); // Adjust speed by changing 0.05\n    // let blueShade = map(oscillation, -1, 1, 255, 100); // Dark blue (50) to light blue (200)\n    this.color1 += 1.5;\n    this.color2 += 1.5;\n\n    fill(this.color1, this.color2, 255, this.life); // RGB (0, 0, blueShade)\n    ellipse(this.pos.x, this.pos.y, 8, 8);\n  }\n\n  finished() {\n    if (this.life < 0) {\n      this.done = true;\n    } else {\n      this.done = false;\n    }\n  }\n\n  positionX() {\n    return this.pos.x;\n  }\n\n  positionY() {\n    return this.pos.y;\n  }\n\n  // Set a timeout to reset Speed to 1 after 3 seconds\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67af7a92f129165b78734414",
        "createdAt": "2025-02-16T21:14:13.459Z",
        "updatedAt": "2025-02-16T21:14:13.459Z",
        "id": "67af7a92f129165b78734414"
      },
      {
        "name": "backgrounds.js",
        "content": "class Background {\n  constructor(x, y){\n    this.radius = createVector(x, y)\n    this.size = createVector(1, 1)\n    this.life = 255;\n    this.done = false; \n  }\n  \n  update(){\n    if(this.radius <= 50 || this.radius >= 50){\n      this.size * -1;\n    }\n    \n    this.finished();\n    this.radius.add(this.size);\n    this.life -= 1.6;\n  }\n  display(){   \n    noStroke();\n    fill(random(160, 180), random(160,180), 160, this.life);\n    circle(random(0, width), random(0, height), this.radius);\n  }\n\n  finished(){\n    if (this.life < 0){\n      this.done = true;\n    } else {\n      this.done = false;\n    }\n  }\n} ",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67af7b4af129165b78739144",
        "createdAt": "2025-02-16T21:14:13.459Z",
        "updatedAt": "2025-02-16T21:14:13.459Z",
        "id": "67af7b4af129165b78739144"
      },
      {
        "name": "background.mp4",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/6c314733-90cc-4de0-bc77-ba72eec7e498.mp4",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b01290b83f40f2fbb322cc",
        "createdAt": "2025-02-16T21:14:13.459Z",
        "updatedAt": "2025-02-16T21:14:13.459Z",
        "id": "67b01290b83f40f2fbb322cc"
      },
      {
        "name": "water1.MP3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/db12906b-fcdf-4c75-b0f1-da9b6786971e.MP3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b0ec2bb45d4b7b93a7d466",
        "createdAt": "2025-02-16T21:14:13.459Z",
        "updatedAt": "2025-02-16T21:14:13.459Z",
        "id": "67b0ec2bb45d4b7b93a7d466"
      },
      {
        "name": "water2.MP3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/3854f61d-59ed-40cf-8350-4745e745085e.MP3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b0ec2bb45d4b7b93a7d471",
        "createdAt": "2025-02-16T21:14:13.459Z",
        "updatedAt": "2025-02-16T21:14:13.459Z",
        "id": "67b0ec2bb45d4b7b93a7d471"
      },
      {
        "name": "water3.MP3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/7dd24bce-a196-48b7-b6a6-f181dd4c596e.MP3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b0ec2b6b59ceaba365f84b",
        "createdAt": "2025-02-16T21:14:13.459Z",
        "updatedAt": "2025-02-16T21:14:13.459Z",
        "id": "67b0ec2b6b59ceaba365f84b"
      },
      {
        "name": "water4.MP3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/86bab10f-2474-4d9d-a353-82b4fe2d09e4.MP3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b0ec2bbbc1ebca768c56f3",
        "createdAt": "2025-02-16T21:14:13.459Z",
        "updatedAt": "2025-02-16T21:14:13.459Z",
        "id": "67b0ec2bbbc1ebca768c56f3"
      },
      {
        "name": "water5.MP3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/43d3272d-b586-4c49-bb85-248f1d13c983.MP3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b0edc5034df4a7d249469e",
        "createdAt": "2025-02-16T21:14:13.459Z",
        "updatedAt": "2025-02-16T21:14:13.459Z",
        "id": "67b0edc5034df4a7d249469e"
      },
      {
        "name": "style.css",
        "content": "\nhtml, body {\n  margin: 0;\n  padding: 0;\n  overflow: hidden; /* Prevents scrolling */\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b243665db908566b83ef52",
        "createdAt": "2025-02-16T21:14:13.459Z",
        "updatedAt": "2025-02-16T21:14:13.459Z",
        "id": "67b243665db908566b83ef52"
      },
      {
        "name": "KingsguardCalligraphy.otf",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/6f7ac709-1820-4050-b85c-e5a5b09d6921.otf",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b24e3c2c96de8a680c069a",
        "createdAt": "2025-02-16T21:14:13.459Z",
        "updatedAt": "2025-02-16T21:14:13.459Z",
        "id": "67b24e3c2c96de8a680c069a"
      },
      {
        "name": "backgroundmusic.MP3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/eadab284-44e2-4652-a05b-1c485c260472.MP3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b2534a5fcb381a46974b0b",
        "createdAt": "2025-02-16T21:14:13.459Z",
        "updatedAt": "2025-02-16T21:14:13.459Z",
        "id": "67b2534a5fcb381a46974b0b"
      }
    ],
    "createdAt": "2025-02-14T17:01:41.972Z",
    "updatedAt": "2025-02-16T21:14:13.459Z",
    "id": "10zXdOGM_"
  },
  {
    "_id": "6zwNpKRVL",
    "name": "handPose-keypoints copy copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67b25559ad8a15bdcd2a06dc",
          "67b25559ad8a15bdcd2a06dd",
          "67b25559ad8a15bdcd2a06df",
          "67b25559ad8a15bdcd2a06de",
          "67b25559ad8a15bdcd2a06e0",
          "67b25559ad8a15bdcd2a06e1",
          "67b25559ad8a15bdcd2a06e2",
          "67b25559ad8a15bdcd2a06e3",
          "67b27e711092f9ceccaf7631",
          "67b27e716548e484e3bf73dc",
          "67b27e715fcb381a46a59156",
          "67b27e716548e484e3bf73cd"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67b25559ad8a15bdcd2a06db",
        "createdAt": "2025-02-18T23:58:31.034Z",
        "updatedAt": "2025-02-18T23:58:31.034Z",
        "id": "67b25559ad8a15bdcd2a06db"
      },
      {
        "name": "index.html",
        "content": "<!--\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\n  Learn more about the ml5.js project: https://ml5js.org/\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\n\n  This example demonstrates hand tracking on live video through ml5.handPose.\n-->\n\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ml5.js handPose Webcam Example</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/addons/p5.sound.min.js\"></script>\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n    <script src=\"backgrounds.js\"></script>\n    <script>\n  document.addEventListener(\"DOMContentLoaded\", function() {\n    let video = document.getElementById(\"backgroundVideo\");\n\n    document.addEventListener(\"click\", function() {\n      if (video && video.paused) {\n        video.play();\n      }\n    });\n  });\n</script>\n\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b25559ad8a15bdcd2a06e0",
        "createdAt": "2025-02-18T23:58:31.034Z",
        "updatedAt": "2025-02-18T23:58:31.034Z",
        "id": "67b25559ad8a15bdcd2a06e0"
      },
      {
        "name": "sketch.js",
        "content": "let ps = []; // this is for the system\n//let backgrounds = [];\nlet repeatCount = 0;\nlet maxRepeats = 7;\nlet p = null;\nlet Speed = 1;\n\nlet handPose;\nlet video;\nlet hands = [];\nlet open = false;\nlet pushed = false;\n\nlet prevHandPos = null; // Stores previous position of keypoint 9\nlet moveThreshold = 140; // Distance threshold for detecting movement\n\nlet particleGenerated = false; // Track if a particle has been generated for movement\n\nlet backgroundVideo;\n\nlet water1, water2, water3, water4;\nlet water = [];\n\nlet started = false;\nlet font;\nlet a = 255;\nlet increasing = true;\n\nlet backgroundmusic;\nlet backgroundmusicplaying = false;\n\nfunction preload() {\n   backgroundmusic = loadSound(\"guzhen.MP3\", () => {\n    console.log(\"Background music loaded\");\n  });\n  handPose = ml5.handPose();\n  water1 = loadSound(\"water1.MP3\");\n  water2 = loadSound(\"water2.MP3\");\n  water3 = loadSound(\"water3.MP3\");\n  water4 = loadSound(\"water4.MP3\");\n\n  water = [water1, water2, water3, water4];\n  backgroundVideo = createVideo(\"background.mp4\"); // Ensure the file exists\n  font = loadFont(\"KingsguardCalligraphy.otf\", () => {\n    console.log(\"font loaded\");\n  });\n}\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n\n  video = createCapture(VIDEO);\n  video.size(windowWidth, windowHeight);\n  video.hide();\n  // start detecting hands from the webcam video\n  handPose.detectStart(video, gotHands);\n\n  backgroundVideo.size(windowWidth, windowHeight);\n  backgroundVideo.loop(); // Ensures the video plays continuously\n  backgroundVideo.hide(); // Prevents default HTML video display\n  backgroundVideo.volume(0);\n}\n\nfunction draw() {\n  // Draw the webcam video\n  resizeCanvas(windowWidth, windowHeight);\n  background(0, 0, 0, 255);\n  \n  push();\n  translate(width, 0); // Move origin to right\n  scale(-1, 1); // Flip horizontally\n  rectMode(CORNER);\n\n  // backgroundVideo.play();\n  backgroundVideo.speed(Speed);\n  image(backgroundVideo, 0, 0, windowWidth, windowHeight);\n\n  for (let i = ps.length - 1; i >= 0; i--) {\n    ps[i].update();\n    ps[i].display();\n\n    if (ps[i].done == true) {\n      this.resetTimeout = setTimeout(() => {}, 7000);\n      console.log(\"Speed reset to 1 after 3 seconds\");\n      Speed = 1;\n    }\n\n    if (ps[i].done) {\n      ps.splice(i, 1);\n    }\n  }\n  \n\n\n  // Draw all the tracked hand points\n  for (let i = 0; i < hands.length; i++) {\n    let hand = hands[i];\n    // for (let j = 0; j < hand.keypoints.length; j++) {\n    //   let keypoint = hand.keypoints[j];\n    //   fill(0, 255, 0);\n    //   noStroke();\n    //   circle(keypoint.x, keypoint.y, 10);\n    // }\n    if (isHandOpen(hand)) {\n      // fill(255, 0, 0);\n      // textSize(32);\n      // text(\"Hand is OPEN\", 50, 50);\n      open = true;\n    } else {\n      // fill(0, 0, 255);\n      // textSize(32);\n      // text(\"Hand is CLOSED\", 50, 50);\n      open = false;\n      pushed = false;\n    }\n\n    if (open == true && pushed == false) {\n      let handposition = hand.keypoints[9];\n\n      p = new Particle(handposition.x, handposition.y);\n      ps.push(new System(handposition.x, handposition.y));\n      for (let i = 0; i < 3; i++) {\n        setTimeout(\n          () => ps.push(new System(handposition.x, handposition.y)),\n          200 + i * 200\n        );\n\n        Speed = 4;\n        pushed = true;\n\n        let soundIndex = floor(random(0, 3));\n        if (!water[soundIndex].isPlaying()) {\n          water[soundIndex].play();\n        }\n      }\n    }\n    let currentHandPos = hand.keypoints[9];\n\n    fill(255);\n\n    if (open) {\n      stroke(255);\n      strokeWeight(5);\n      noFill();\n      circle(currentHandPos.x, currentHandPos.y, 15, 15);\n    } else if (!open) {\n      circle(currentHandPos.x, currentHandPos.y, 10, 10);\n      // Speed = 1;\n    }\n\n    if (prevHandPos) {\n      // Calculate distance moved\n      let distanceMoved = dist(\n        currentHandPos.x,\n        currentHandPos.y,\n        prevHandPos.x,\n        prevHandPos.y\n      );\n\n      // Check if movement is significant\n      if (distanceMoved > moveThreshold && open == true) {\n        // fill(0, 255, 0);\n        // textSize(32);\n        // text(\"Hand MOVED\", 50, 100);\n\n        for (let i = 0; i < 3; i++) {\n          setTimeout(\n            () => ps.push(new System(currentHandPos.x, currentHandPos.y)),\n            200 + i * 200\n          );\n          particleGenerated = true;\n        }\n\n        Speed = 4;\n        let soundIndex = floor(random(0, 3));\n        if (!water[soundIndex].isPlaying()) {\n          water[soundIndex].play();\n        }\n      } else if (distanceMoved < moveThreshold * 0.8) {\n        particleGenerated = false;\n      }\n    }\n    // Update previous hand position for next frame\n    prevHandPos = { x: currentHandPos.x, y: currentHandPos.y };\n  }\n    pop();\n  noStroke();\n  if (started == false) {\n    textSize(35);\n\n    if (a >= 255) {\n      increasing = false;\n    } else if (a <= 150) {\n      increasing = true;\n    }\n\n    if (increasing) {\n      a = a + 1.5;\n    } else {\n      a = a - 1.5;\n    }\n\n    fill(255, a);\n    textAlign(CENTER, CENTER);\n    textFont(font);\n    text(\n      \"Click to enter a new realm. Open, close, and wave one hand to interact\",\n      windowWidth / 2,\n      windowHeight / 2 - 30\n    );\n    text(\n      \"'Finding peace within yourself and the world around you is the greatest achievement of all'\",\n      windowWidth / 2,\n      windowHeight / 2 + 30\n    );\n  }\n\n  \n}\n\nfunction isHandOpen(hand) {\n  let threshold = 100; // Adjust based on testing\n\n  let thumbTip = hand.keypoints[4];\n  let indexTip = hand.keypoints[8];\n  let middleTip = hand.keypoints[12];\n  let ringTip = hand.keypoints[16];\n  let pinkyTip = hand.keypoints[20];\n\n  let indexKnuckle = hand.keypoints[5];\n  let middleKnuckle = hand.keypoints[9];\n  let ringKnuckle = hand.keypoints[13];\n  let pinkyKnuckle = hand.keypoints[17];\n\n  // Measure distances\n  let indexDist = dist(indexTip.x, indexTip.y, indexKnuckle.x, indexKnuckle.y);\n  let middleDist = dist(\n    middleTip.x,\n    middleTip.y,\n    middleKnuckle.x,\n    middleKnuckle.y\n  );\n  let ringDist = dist(ringTip.x, ringTip.y, ringKnuckle.x, ringKnuckle.y);\n  let pinkyDist = dist(pinkyTip.x, pinkyTip.y, pinkyKnuckle.x, pinkyKnuckle.y);\n\n  // If most fingers are extended, consider the hand open\n  if (\n    indexDist > threshold &&\n    middleDist > threshold &&\n    pinkyDist > threshold\n  ) {\n    return true; // Hand is open\n  } else {\n    return false; // Hand is closed\n  }\n}\n\nfunction mousePressed() {\n      if (!backgroundmusicplaying) {\n        backgroundmusic.loop();\n        backgroundmusicplaying = true;\n    }\n    backgroundVideo.play();\n    fullscreen(true);\n    started = true;\n}\n\nclass System {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n\n    this.particles = [];\n    this.num = 150;\n    for (let i = 0; i < this.num; i++) {\n      this.particles.push(new Particle(this.x, this.y));\n    }\n    //console.log(\"hello\");\n    this.done = false;\n  }\n\n  update() {\n    this.finished();\n    for (let i = this.particles.length - 1; i >= 0; i--) {\n      this.particles[i].update();\n\n      if (this.particles[i].done) {\n        this.particles.splice(i, 1);\n      }\n    }\n  }\n\n  display() {\n    for (let i = 0; i < this.particles.length; i++) {\n      this.particles[i].display();\n    }\n  }\n\n  finished() {\n    if (this.particles.length == 0) {\n      this.done = true;\n    } else {\n      this.done = false;\n    }\n  }\n}\n\nfunction startVideo() {\n  let videoElement = document.getElementById(\"backgroundVideo\");\n  if (videoElement && videoElement.paused) {\n    videoElement\n      .play()\n      .catch((error) => console.log(\"Autoplay blocked:\", error));\n  }\n}\n\n// Modify gotHands() to trigger startVideo() when a hand appears\nfunction gotHands(results) {\n  hands = results;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67b25559ad8a15bdcd2a06e2",
        "createdAt": "2025-02-18T23:58:31.034Z",
        "updatedAt": "2025-02-18T23:58:31.034Z",
        "id": "67b25559ad8a15bdcd2a06e2"
      },
      {
        "name": "particle.js",
        "content": "class Particle {\n  constructor(x, y) {\n    this.pos = createVector(x, y);\n    this.vel = createVector(0, 0);\n    this.acc = p5.Vector.random2D();\n    this.acc.mult(0.03);\n    this.life = 255;\n    this.done = false;\n    this.hueValue = 0;\n    this.color1 = 163;\n    this.color2 = 212;\n  }\n\n  update() {\n    if (this.pos.x <= 0 || this.pos.x >= width) {\n      //this.acc.x = this.acc.x * -1;\n      this.vel.x = this.vel.x * -1;\n    }\n\n    if (this.pos.y <= 0 || this.pos.y >= height) {\n      //this.acc.y = this.acc * -1;\n      this.vel.y = this.vel.y * -1;\n    }\n\n    this.finished();\n\n    this.vel.add(this.acc);\n    this.pos.add(this.vel);\n\n    this.life -= 3;\n  }\n  display() {\n    noStroke();\n    //  let oscillation = sin(frameCount * 0.05); // Adjust speed by changing 0.05\n    // let blueShade = map(oscillation, -1, 1, 255, 100); // Dark blue (50) to light blue (200)\n    this.color1 += 1.5;\n    this.color2 += 1.5;\n\n    fill(this.color1, this.color2, 255, this.life); // RGB (0, 0, blueShade)\n    ellipse(this.pos.x, this.pos.y, 8, 8);\n  }\n\n  finished() {\n    if (this.life < 0) {\n      this.done = true;\n    } else {\n      this.done = false;\n    }\n  }\n\n  positionX() {\n    return this.pos.x;\n  }\n\n  positionY() {\n    return this.pos.y;\n  }\n\n  // Set a timeout to reset Speed to 1 after 3 seconds\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b25559ad8a15bdcd2a06e1",
        "createdAt": "2025-02-18T23:58:31.034Z",
        "updatedAt": "2025-02-18T23:58:31.034Z",
        "id": "67b25559ad8a15bdcd2a06e1"
      },
      {
        "name": "backgrounds.js",
        "content": "class Background {\n  constructor(x, y){\n    this.radius = createVector(x, y)\n    this.size = createVector(1, 1)\n    this.life = 255;\n    this.done = false; \n  }\n  \n  update(){\n    if(this.radius <= 50 || this.radius >= 50){\n      this.size * -1;\n    }\n    \n    this.finished();\n    this.radius.add(this.size);\n    this.life -= 1.6;\n  }\n  display(){   \n    noStroke();\n    fill(random(160, 180), random(160,180), 160, this.life);\n    circle(random(0, width), random(0, height), this.radius);\n  }\n\n  finished(){\n    if (this.life < 0){\n      this.done = true;\n    } else {\n      this.done = false;\n    }\n  }\n} ",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b25559ad8a15bdcd2a06df",
        "createdAt": "2025-02-18T23:58:31.034Z",
        "updatedAt": "2025-02-18T23:58:31.034Z",
        "id": "67b25559ad8a15bdcd2a06df"
      },
      {
        "name": "background.mp4",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/6654bfa7-e763-47d8-a8da-b997cea1aaaa.mp4",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b25559ad8a15bdcd2a06dd",
        "createdAt": "2025-02-18T23:58:31.034Z",
        "updatedAt": "2025-02-18T23:58:31.034Z",
        "id": "67b25559ad8a15bdcd2a06dd"
      },
      {
        "name": "style.css",
        "content": "\nhtml, body {\n  margin: 0;\n  padding: 0;\n  overflow: hidden; /* Prevents scrolling */\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b25559ad8a15bdcd2a06e3",
        "createdAt": "2025-02-18T23:58:31.034Z",
        "updatedAt": "2025-02-18T23:58:31.034Z",
        "id": "67b25559ad8a15bdcd2a06e3"
      },
      {
        "name": "KingsguardCalligraphy.otf",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/21ce60a1-2ab0-48d8-8010-e859425145d7.otf",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b25559ad8a15bdcd2a06dc",
        "createdAt": "2025-02-18T23:58:31.034Z",
        "updatedAt": "2025-02-18T23:58:31.034Z",
        "id": "67b25559ad8a15bdcd2a06dc"
      },
      {
        "name": "guzhen.MP3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/9241f0f6-7703-4bd5-9a76-eb033235920a.MP3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b25559ad8a15bdcd2a06de",
        "createdAt": "2025-02-18T23:58:31.034Z",
        "updatedAt": "2025-02-18T23:58:31.034Z",
        "id": "67b25559ad8a15bdcd2a06de"
      },
      {
        "name": "water4.MP3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/aa7d34cb-ba26-4644-a819-23f947e92d9c.MP3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b27e716548e484e3bf73cd",
        "createdAt": "2025-02-18T23:58:31.034Z",
        "updatedAt": "2025-02-18T23:58:31.034Z",
        "id": "67b27e716548e484e3bf73cd"
      },
      {
        "name": "water2.MP3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/a7a9c4ef-85c8-459c-a154-b9ade8bda531.MP3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b27e716548e484e3bf73dc",
        "createdAt": "2025-02-18T23:58:31.034Z",
        "updatedAt": "2025-02-18T23:58:31.034Z",
        "id": "67b27e716548e484e3bf73dc"
      },
      {
        "name": "water1.MP3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/fb6272ef-585f-4edd-8531-0f41b8ee7537.MP3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b27e711092f9ceccaf7631",
        "createdAt": "2025-02-18T23:58:31.034Z",
        "updatedAt": "2025-02-18T23:58:31.034Z",
        "id": "67b27e711092f9ceccaf7631"
      },
      {
        "name": "water3.MP3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/66fc3b78-ae45-4195-9468-3ad462ad5fd9.MP3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b27e715fcb381a46a59156",
        "createdAt": "2025-02-18T23:58:31.034Z",
        "updatedAt": "2025-02-18T23:58:31.034Z",
        "id": "67b27e715fcb381a46a59156"
      }
    ],
    "createdAt": "2025-02-16T21:15:04.929Z",
    "updatedAt": "2025-02-18T23:58:31.034Z",
    "id": "6zwNpKRVL"
  },
  {
    "_id": "BWuwJimC1",
    "name": "How many times I yawn each Day",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67a4e0215ec771d641e08afc",
          "679cfe00e36d142b191eedeb",
          "679cfe00e36d142b191eedec",
          "679cfe00e36d142b191eeded"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "679cfe00e36d142b191eedea",
        "createdAt": "2025-02-06T16:16:36.556Z",
        "updatedAt": "2025-02-06T16:16:36.556Z",
        "id": "679cfe00e36d142b191eedea"
      },
      {
        "name": "sketch.js",
        "content": "let day = [\n  [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n  [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 5, 0, 0, 1, 11, 0, 0, 6, 1, 0, 0, 0],\n  [0, 1, 0, 0, 0, 0, 0, 0, 7, 7, 6, 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\n  [3, 0, 0, 0, 0, 0, 0, 0, 1, 9, 4, 0, 0, 2, 1, 4, 0, 0, 0, 3, 4, 0, 0, 0],\n];\n\nlet sleep = [\n  [2, 05, 9, 0],\n  [2, 30, 9, 30],\n  [1, 30, 8, 14],\n  [1, 10, 7, 30],\n  [1, 30, 8, 15],\n];\n\nlet Month = [\"1/25\", \"1/26\", \"1/27\", \"1/28\", \"1/29\"];\n\nlet graphX = 200;\n///////////////////// ^^ controls circle radius\nlet graphY = 200;\nlet graphAmplitude = 6;\nlet graphPeriod = 12;\n//////^^ controls height\n/////////////////////////////////////\nlet circleX = 100;\nlet circleY = 300;\nlet circleRadius = 70;\n\nlet Distance = 250;\n\nlet Background;\n\nfunction setup() {\n  createCanvas(1500, 600);\n  Background =   loadImage('Background.png');\n}\n\nfunction draw() {\n  background(0);\n  image(Background,-8, 0);\n\n  textAlign(CENTER);\n\n  let angle = PI / 12;\n  for (j = 0; j < 5; j++) {\n    for (i = 0; i < 24; i++) {\n      ////////////////////SLEEPTIME/////////////////////////\n      stroke(55, 152, 232);\n      strokeWeight(6);\n      arc(\n        (j + 1) * Distance,\n        300,\n        circleRadius * 1.4,\n        circleRadius * 1.4,\n        (TWO_PI / 24) * sleep[j][0] - PI / 2,\n        (TWO_PI / 24) * sleep[j][2] - PI / 2\n      );\n\n      ///////////////////WORDS///////////////////\n      noStroke();\n      fill(255);\n      let textsize = 15;\n      textSize(textsize);\n      text(Month[j], (j + 1) * Distance, 300);\n      ///////////////////////TIME/////////////////////////\n\n      strokeWeight(2);\n      stroke(255);\n      if (i == 0) {\n        line((j + 1) * Distance, 215, (j + 1) * Distance, 245);\n        strokeWeight(1);\n        textSize(10);\n        text(\"0:00\", (j + 1) * Distance, 205);\n      } else if (i == 11) {\n        line((j + 1) * Distance, 355, (j + 1) * Distance, 385);\n        strokeWeight(1);\n        textSize(10);\n        text(\"12:00\", (j + 1) * Distance, 405);\n      } else if (i == 5){\n        line((j + 1) * Distance + 55, 300, (j + 1) * Distance + 85, 300);\n        strokeWeight(1);\n        textSize(10);\n        text(\"6:00\", (j + 1) * Distance + 100, 303);\n      }\n      else if (i == 17){\n        line((j + 1) * Distance - 55, 300, (j + 1) * Distance - 85, 300);\n        strokeWeight(1);\n        textSize(10);\n        text(\"18:00\", (j + 1) * Distance - 100, 303);\n      }\n\n      //////////////////////YAWNS/////////////////////////\n\n      noFill();\n      stroke(255, 132, 187);\n      strokeWeight(4);\n\n      if (day[j][i] == 0) {\n        // arc(j * 150, 300, 100, 100, HALF_PI - ((PI / 12) * i), HALF_PI - ((PI / 12) * i) + PI / 12);\n        arc(\n          (j + 1) * Distance,\n          300,\n          circleRadius * 2,\n          circleRadius * 2,\n          (PI / 12) * i - PI / 2,\n          (PI / 12) * i + PI / 12 - PI / 2\n        );\n      } else {\n        beginShape();\n        for (\n          let c = (PI / 12) * i - PI / 2;\n          c <= (PI / 12) * i + PI / 12 - PI / 2;\n          c += 0.01\n        ) {\n          let extrusion = graphAmplitude * day[j][i];\n          // if (extrusion > 50) {\n          //   extrusion = 40;\n          // }\n\n          let sineOffset = extrusion * abs(sin(c * graphPeriod));\n          let r = circleRadius + sineOffset; // Adjusted radius\n          // console.log(distance);\n          let shiftFactor = 0;\n          if(extrusion > 50){\n            shiftFactor = map(extrusion, 50, 100, 0, 20);\n          } else {\n            shiftFactor = 0;\n          }\n          \n          let pointX =\n           circleX * (j + 1) * (Distance/100) + r * cos(c) - shiftFactor * cos(c);\n          let pointY = circleY + r * sin(c) - shiftFactor * sin(c);\n          curveVertex(pointX, pointY);\n          \n          // let pointX = circleX * (j + 1) * 2 + r * cos(c);\n          // let pointY = circleY + r * sin(c);\n          // //////////////////MOUSEHOVER//////////////////////\n\n          strokeWeight(2);\n          let tolerance = 3;\n          textSize(40);\n          text(\"Number of Yawns = \", width / 2, 500);\n          \n          if (dist(mouseX, mouseY, pointX, pointY) < tolerance) {\n            textSize(50);\n            text(day[j][i], width / 2 + 200, 500);\n          }\n        }\n        strokeWeight(4);\n        endShape();\n      }\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "679cfe00e36d142b191eedec",
        "createdAt": "2025-02-06T16:16:36.556Z",
        "updatedAt": "2025-02-06T16:16:36.556Z",
        "id": "679cfe00e36d142b191eedec"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679cfe00e36d142b191eedeb",
        "createdAt": "2025-02-06T16:16:36.556Z",
        "updatedAt": "2025-02-06T16:16:36.556Z",
        "id": "679cfe00e36d142b191eedeb"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679cfe00e36d142b191eeded",
        "createdAt": "2025-02-06T16:16:36.556Z",
        "updatedAt": "2025-02-06T16:16:36.556Z",
        "id": "679cfe00e36d142b191eeded"
      },
      {
        "name": "Background.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/b5ba9fb3-d0ec-4450-91a9-2561f3e1eb49.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a4e0215ec771d641e08afc",
        "createdAt": "2025-02-06T16:16:36.556Z",
        "updatedAt": "2025-02-06T16:16:36.556Z",
        "id": "67a4e0215ec771d641e08afc"
      }
    ],
    "createdAt": "2025-01-31T16:44:46.895Z",
    "updatedAt": "2025-02-06T16:16:36.556Z",
    "id": "BWuwJimC1"
  },
  {
    "_id": "LT1O3ERZV",
    "name": "How many times I yawn each Day copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67acfaeec8d7ee3dbf83acda",
          "67a642a56fe3d0c8dbaea885",
          "67a6417846d4f5dc445d9676",
          "67a6417846d4f5dc445d9677",
          "67a6417846d4f5dc445d9678"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67a6417846d4f5dc445d9674",
        "createdAt": "2025-02-14T05:53:27.326Z",
        "updatedAt": "2025-02-14T05:53:27.326Z",
        "id": "67a6417846d4f5dc445d9674"
      },
      {
        "name": "sketch.js",
        "content": "let graphX = 200;\n///////////////////// ^^ controls circle radius\nlet graphY = 200;\nlet graphAmplitude = 6;\nlet graphPeriod = 12;\n//////^^ controls height\n/////////////////////////////////////\nlet circleX = 100;\nlet circleY = 300;\nlet circleRadius = 70;\n\nlet Distance = 250;\n\nlet Background;\n\nlet shiftheight = 350;\n\nfunction preload() {\n  myJSON = loadJSON(\"data.json\");\n}\n\nfunction setup() {\n  createCanvas(1500, 900);\n  Background = loadImage(\"Background.png\");\n\n  day = myJSON.day;\n  sleep = myJSON.sleep;\n  Month = myJSON.Month;\n}\n\nfunction draw() {\n  background(0);\n  image(Background, -8, 0);\n\n  textAlign(CENTER);\n\n  let angle = PI / 12;\n  for (j = 0; j < 5; j++) {\n    for (i = 0; i < 24; i++) {\n      ////////////////////SLEEPTIME/////////////////////////\n      stroke(55, 152, 232);\n      strokeWeight(6);\n      arc(\n        (j + 1) * Distance,\n        300,\n        circleRadius * 1.4,\n        circleRadius * 1.4,\n        (TWO_PI / 24) * sleep[j][0] - PI / 2 - (sleep[j][1] * PI) / (12 * 60),\n        (TWO_PI / 24) * sleep[j][2] - PI / 2 - (sleep[j][3] * PI) / (12 * 60)\n      );\n\n      ///////////////////WORDS///////////////////\n      noStroke();\n      fill(255);\n      let textsize = 15;\n      textSize(textsize);\n      text(Month[j], (j + 1) * Distance, 300);\n      ///////////////////////TIME/////////////////////////\n\n      strokeWeight(2);\n      stroke(255);\n      if (i == 0) {\n        line((j + 1) * Distance, 215, (j + 1) * Distance, 245);\n        strokeWeight(1);\n        textSize(10);\n        text(\"0:00\", (j + 1) * Distance, 205);\n      } else if (i == 11) {\n        line((j + 1) * Distance, 355, (j + 1) * Distance, 385);\n        strokeWeight(1);\n        textSize(10);\n        text(\"12:00\", (j + 1) * Distance, 405);\n      } else if (i == 5) {\n        line((j + 1) * Distance + 55, 300, (j + 1) * Distance + 85, 300);\n        strokeWeight(1);\n        textSize(10);\n        text(\"6:00\", (j + 1) * Distance + 100, 303);\n      } else if (i == 17) {\n        line((j + 1) * Distance - 55, 300, (j + 1) * Distance - 85, 300);\n        strokeWeight(1);\n        textSize(10);\n        text(\"18:00\", (j + 1) * Distance - 100, 303);\n      }\n\n      //////////////////////YAWNS/////////////////////////\n\n      noFill();\n      stroke(255, 132, 187);\n      strokeWeight(4);\n\n      if (day[j][i] == 0) {\n        // arc(j * 150, 300, 100, 100, HALF_PI - ((PI / 12) * i), HALF_PI - ((PI / 12) * i) + PI / 12);\n        arc(\n          (j + 1) * Distance,\n          300,\n          circleRadius * 2,\n          circleRadius * 2,\n          (PI / 12) * i - PI / 2,\n          (PI / 12) * i + PI / 12 - PI / 2\n        );\n      } else {\n        beginShape();\n        for (\n          let c = (PI / 12) * i - PI / 2;\n          c <= (PI / 12) * i + PI / 12 - PI / 2;\n          c += 0.01\n        ) {\n          let extrusion = graphAmplitude * day[j][i];\n          // if (extrusion > 50) {\n          //   extrusion = 40;\n          // }\n\n          let sineOffset = extrusion * abs(sin(c * graphPeriod));\n          let r = circleRadius + sineOffset; // Adjusted radius\n          // console.log(distance);\n          let shiftFactor = 0;\n          if (extrusion > 50) {\n            shiftFactor = map(extrusion, 50, 100, 0, 20);\n          } else {\n            shiftFactor = 0;\n          }\n\n          let pointX =\n            circleX * (j + 1) * (Distance / 100) +\n            r * cos(c) -\n            shiftFactor * cos(c);\n          let pointY = circleY + r * sin(c) - shiftFactor * sin(c);\n          curveVertex(pointX, pointY);\n\n          // let pointX = circleX * (j + 1) * 2 + r * cos(c);\n          // let pointY = circleY + r * sin(c);\n          // //////////////////MOUSEHOVER//////////////////////\n\n          strokeWeight(2);\n          let tolerance = 3;\n          textSize(40);\n          text(\"Number of Yawns = \", width / 2, 500);\n\n          if (dist(mouseX, mouseY, pointX, pointY) < tolerance) {\n            textSize(50);\n            text(day[j][i], width / 2 + 200, 500);\n          }\n        }\n        strokeWeight(4);\n        endShape();\n      }\n    }\n  }\n\n  for (j = 5; j < 10; j++) {\n    for (i = 0; i < 24; i++) {\n      ////////////////////SLEEPTIME/////////////////////////\n      stroke(55, 152, 232);\n      strokeWeight(6);\n      arc(\n        (j + 1 - 5) * Distance,\n        300 + shiftheight,\n        circleRadius * 1.4,\n        circleRadius * 1.4,\n        (TWO_PI / 24) * sleep[j][0] - PI / 2 - (sleep[j][1] * PI) / (12 * 60),\n        (TWO_PI / 24) * sleep[j][2] - PI / 2 - (sleep[j][3] * PI) / (12 * 60)\n      );\n\n      ///////////////////WORDS///////////////////\n      noStroke();\n      fill(255);\n      let textsize = 15;\n      textSize(textsize);\n      text(Month[j], (j + 1 - 5) * Distance, 300 + shiftheight);\n      ///////////////////////TIME/////////////////////////\n\n      strokeWeight(2);\n      stroke(255);\n      if (i == 0) {\n        line(\n          (j + 1 - 5) * Distance,\n          215 + shiftheight,\n          (j + 1 - 5) * Distance,\n          245 + shiftheight\n        );\n        strokeWeight(1);\n        textSize(10);\n        text(\"0:00\", (j + 1 - 5) * Distance, 205 + shiftheight);\n      } else if (i == 11) {\n        line(\n          (j + 1 - 5) * Distance,\n          355 + shiftheight,\n          (j + 1 - 5) * Distance,\n          385 + shiftheight\n        );\n        strokeWeight(1);\n        textSize(10);\n        text(\"12:00\", (j + 1 - 5) * Distance, 405 + shiftheight);\n      } else if (i == 5) {\n        line(\n          (j + 1 - 5) * Distance + 55,\n          300 + shiftheight,\n          (j + 1 - 5) * Distance + 85,\n          300 + shiftheight\n        );\n        strokeWeight(1);\n        textSize(10);\n        text(\"6:00\", (j + 1 - 5) * Distance + 100, 303 + shiftheight);\n      } else if (i == 17) {\n        line(\n          (j + 1 - 5) * Distance - 55,\n          300 + shiftheight,\n          (j + 1 - 5) * Distance - 85,\n          300 + shiftheight\n        );\n        strokeWeight(1);\n        textSize(10);\n        text(\"18:00\", (j + 1 - 5) * Distance - 100, 303 + shiftheight);\n      }\n\n      //////////////////////YAWNS/////////////////////////\n\n      noFill();\n      stroke(255, 132, 187);\n      strokeWeight(4);\n\n      if (day[j][i] == 0) {\n        // arc(j * 150, 300, 100, 100, HALF_PI - ((PI / 12) * i), HALF_PI - ((PI / 12) * i) + PI / 12);\n        arc(\n          (j + 1 - 5) * Distance,\n          300 + shiftheight,\n          circleRadius * 2,\n          circleRadius * 2,\n          (PI / 12) * i - PI / 2,\n          (PI / 12) * i + PI / 12 - PI / 2\n        );\n      } else {\n        beginShape();\n        for (\n          let c = (PI / 12) * i - PI / 2;\n          c <= (PI / 12) * i + PI / 12 - PI / 2;\n          c += 0.01\n        ) {\n          let extrusion = graphAmplitude * day[j][i];\n          // if (extrusion > 50) {\n          //   extrusion = 40;\n          // }\n\n          let sineOffset = extrusion * abs(sin(c * graphPeriod));\n          let r = circleRadius + sineOffset; // Adjusted radius\n          // console.log(distance);\n          let shiftFactor = 50;\n          if (extrusion > 50) {\n            shiftFactor = map(extrusion, 50, 100, 0, 20);\n          } else {\n            shiftFactor = 0;\n          }\n\n          let pointX =\n            circleX * (j + 1 - 5) * (Distance / 100) +\n            r * cos(c) -\n            shiftFactor * cos(c);\n          let pointY =\n            circleY + r * sin(c) - shiftFactor * sin(c) + shiftheight;\n          curveVertex(pointX, pointY);\n\n          // let pointX = circleX * (j + 1) * 2 + r * cos(c);\n          // let pointY = circleY + r * sin(c);\n          // //////////////////MOUSEHOVER//////////////////////\n\n          strokeWeight(2);\n          let tolerance = 3;\n          textSize(40);\n          text(\"Number of Yawns = \", width / 2, 500);\n\n          if (dist(mouseX, mouseY, pointX, pointY) < tolerance) {\n            textSize(50);\n            text(day[j][i], width / 2 + 200, 500);\n          }\n        }\n        strokeWeight(4);\n        endShape();\n      }\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67a6417846d4f5dc445d9677",
        "createdAt": "2025-02-14T05:53:27.326Z",
        "updatedAt": "2025-02-14T05:53:27.326Z",
        "id": "67a6417846d4f5dc445d9677"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a6417846d4f5dc445d9676",
        "createdAt": "2025-02-14T05:53:27.326Z",
        "updatedAt": "2025-02-14T05:53:27.326Z",
        "id": "67a6417846d4f5dc445d9676"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a6417846d4f5dc445d9678",
        "createdAt": "2025-02-14T05:53:27.326Z",
        "updatedAt": "2025-02-14T05:53:27.326Z",
        "id": "67a6417846d4f5dc445d9678"
      },
      {
        "name": "data.json",
        "content": "{\n  \"day\": [\n    [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n    [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 5, 0, 0, 1, 11, 0, 0, 6, 1, 0, 0, 0],\n    [0, 1, 0, 0, 0, 0, 0, 0, 7, 7, 6, 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\n    [3, 0, 0, 0, 0, 0, 0, 0, 1, 9, 4, 0, 0, 2, 1, 4, 0, 0, 0, 3, 4, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 1, 4, 0, 0, 2, 0, 0, 2],\n    [0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 5, 6, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 4, 2, 8, 0, 5, 2, 0, 0, 0, 15, 5, 0, 3, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1]\n  ],\n  \n  \"sleep\": [\n    [2, 5, 9, 0],\n    [2, 30, 9, 30],\n    [1, 30, 8, 14],\n    [1, 10, 7, 30],\n    [1, 30, 8, 15],\n    [2, 18, 8, 20],\n    [2, 30, 9, 0],\n    [1, 30, 8, 30],\n    [1, 30, 7, 45],\n    [1, 35, 8, 10]\n  ],\n  \"Month\": [\"1/25\", \"1/26\", \"1/27\", \"1/28\", \"1/29\",\"2/1\",\"2/2\",\"2/3\",\"2/4\",\"2/5\"]\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a642a56fe3d0c8dbaea885",
        "createdAt": "2025-02-14T05:53:27.326Z",
        "updatedAt": "2025-02-14T05:53:27.326Z",
        "id": "67a642a56fe3d0c8dbaea885"
      },
      {
        "name": "Background.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/defa3aeb-88f9-42d5-93dd-5ea013ca26a1.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67acfaeec8d7ee3dbf83acda",
        "createdAt": "2025-02-14T05:53:27.326Z",
        "updatedAt": "2025-02-14T05:53:27.326Z",
        "id": "67acfaeec8d7ee3dbf83acda"
      }
    ],
    "createdAt": "2025-02-07T17:23:04.986Z",
    "updatedAt": "2025-02-14T05:53:27.326Z",
    "id": "LT1O3ERZV"
  },
  {
    "_id": "MQbS55Vku",
    "name": "IM Screen week 1",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d2f3d4adeb8dacb0907c34",
          "67d2f3d4adeb8dacb0907c33",
          "67d2f3d4adeb8dacb0907c35"
        ],
        "fileType": "folder",
        "_id": "67d2f3d4adeb8dacb0907c36",
        "createdAt": "2025-03-20T12:54:59.906Z",
        "updatedAt": "2025-03-20T12:54:59.906Z",
        "id": "67d2f3d4adeb8dacb0907c36"
      },
      {
        "name": "sketch.js",
        "content": "/* \nFlow around a circle simulation designed with p5.js (https://p5js.org/)\n Under Creative Commons License\n https://creativecommons.org/licenses/by-sa/4.0/\n \n Written by Juan Carlos Ponce Campuzano, 12-Febt-2019\n https://jcponce.github.io\n */\n\n\n///the user controls the size of the circle through mousePressed. The circle starts from a radius of 0.01 and is contrlled by the variable a. \n//The tracing effect is achieved by placing a black rectangle with minimal opacity under the sketch\n// the particles flowing in the background is created using a class. \n//the warping is achieved through exponential function. There are two variables --> P and Q. \n\nvar Strength = 40;\n//controls the speed at which the particles move\n\nvar v = 40;\n// work with strenght to control the threshold of the warp?\n\n\nvar a = 0.01;\nlet numMax = 800;\nlet t = 0;\n//time\nlet h = 0.001;\n//controls how fast the time is passing by. If H was bigger, particles would not necessarily move faster, but it's more a reflection of the entire process being sped up?\nlet particles = [];\nlet currentParticle = 0;\n\nlet trace = false;\n\nlet buttonTrace;\n\nfunction setup() {\n\n  createCanvas(windowWidth, windowHeight);\n  background(0);\n  //seting up particles\n    for (let i=0; i<numMax; i++) {\n        let valX = random(-width/2, width/2);\n        let valY = random(-height/2, height/2);\n        particles[i] = new Particle(valX, valY, t, h);\n    }\n\t\n\tbuttonTrace = createButton('Trace');\n    buttonTrace.position(30, 30);\n    buttonTrace.mousePressed(traceShow);\n\n}\n\nfunction draw() {\n\tnoCursor();\n\tcursor(HAND);\n  //changing the cursor from point to hand? Not sure what the point is\n\t\n\t//Initial message\n  if (a <= 0.01) {\n    fill(255);\n    stroke(255);\n\t\tstrokeWeight(0.3);\n    textAlign(CENTER);\n    textSize(28);\n    text(\"Keep mouse pressed to grow.\", width / 2, height / 2);\n\t\t text(\"Double click to reset.\", width / 2, height / 2+30);\n    //the first time the viewer enters, a is set to 0. Displays the initial message letting users know how to interact with it\n  }\n    \n  translate(width/2,height/2);\n  //If the translation was not here, the particles would only be displayed at the top left corner of the screen. Might have to do with the way the equation is written\n  \n\tif(trace == true){\n  fill(0, 6);\n\t}else fill(0,100);\n  stroke(0);\n  strokeWeight(2);\n  //translate(width/2,height/2);\n  rect(-width/2, -height/2, width, height);\n  //using the semi-transparent background to create the lingering effect\n  \n   t += h;\n        \n        for (let i=particles.length-1; i>=0; i-=1) {\n            let p = particles[i];\n            p.update();\n            p.display();\n            if ( p.x > width/2 ||  p.y > height/2 || p.x < -width/2 ||  p.y < -height/2 || ( pow(p.x+mouseX/2 - width/2, 2) + pow(p.y-mouseY/2 + height/2, 2) ) < a ) {\n                particles.splice(i,1);\n                currentParticle--;\n                particles.push(new Particle(-width/2, random(-height/2, height/2),t,h) );\n              //splicing the particle so it doesn't just keep creating new ones\n            }\n        }\n  \n  fill(0, 200);\n  stroke(0);\n  ellipse(mouseX-width/2, mouseY-height/2,(a-1)*2,(a-1)*2);\n\t\n\tif(mouseIsPressed && a < 210){\n\t\ta +=1;\n      //using mousepressed to control the radius of the circle\n\t} else a+=0;\n\t\n}\n\nlet P = (t, x, y) => Strength*( v- (v*(a*a)*(pow( x + mouseX-width/2, 2)-pow( y - mouseY+height/2, 2)))/((pow( x + mouseX-width/2, 2)+pow( y - mouseY+height/2, 2))*(pow( x + mouseX-width/2, 2)+pow( y - mouseY+height/2, 2)))  );\n\n\n//pow(x + mouseX - width/2, 2) --> squared horizontal distance from a point to the center of the canvas\n//pow( y - mouseY+height/2, 2))) --> squared vertical distance \n// v = velocity\n//This represents a mathematical field — possibly an electric or gravitational potential — or a distortion field in graphics\n\n\n\nlet Q = (t, x, y) => Strength*(  (-2*v*(a*a)*(x+mouseX-width/2)*(y-mouseY+height/2))/((pow( x + mouseX-width/2, 2)+pow( y - mouseY+height/2, 2))*(pow( x + mouseX-width/2, 2)+pow( y - mouseY+height/2, 2))) );\n\n//Define particles and how they are moved with Runge–Kutta method of 4th degree.\n//This is a variation of the taylor series used to solve for differential equations. Here it's likely calculating the curve between the two points \nclass Particle{\n  //using class to push particles\n    \n   constructor(_x, _y, _t, _h){\n    this.x = _x;\n    this.y = _y;\n    this.time = _t;\n    this.radius = random(3, 4);\n     //radius of individual circles randomnized\n    this.h = _h;\n    this.op = random(199,200);\n    this.r = random(10);\n    this.g = random(164,255);\n    this.b = random(255);\n     //blue to greenish circles\n\t}\n    \n    update() {\n        this.k1 = P(this.time, this.x, this.y);\n        this.j1 = Q(this.time, this.x, this.y);\n        this.k2 = P(this.time + 1/2 * this.h, this.x + 1/2 * this.h * this.k1, this.y + 1/2 * this.h * this.j1);\n        this.j2 = Q(this.time + 1/2 * this.h, this.x + 1/2 * this.h * this.k1, this.y + 1/2 * this.h * this.j1);\n        this.k3 = P(this.time + 1/2 * this.h, this.x + 1/2 * this.h * this.k2, this.y + 1/2 * this.h * this.j2);\n        this.j3 = Q(this.time + 1/2 * this.h, this.x + 1/2 * this.h * this.k2, this.y + 1/2 * this.h * this.j2);\n        this.k4 = P(this.time + this.h, this.x + this.h * this.k3, this.y + this.h * this.j3);\n        this.j4 = Q(this.time + this.h, this.x + this.h * this.k3, this.y + this.h * this.j3);\n        this.x = this.x + this.h/6 *(this.k1 + 2 * this.k2 + 2 * this.k3 + this.k4);\n        this.y = this.y + this.h/6 *(this.j1 + 2 * this.j2 + 2 * this.j3 + this.j4);\n        this.time += this.h;\n      //this following the Runge–Kutta method of 4th degree\n      //k1 = hf(x0, y0)\n\n      //k2 = hf[x0 + (½)h, y0 + (½)k1]\n\n      //k3 = hf[x0 + (½)h, y0 + (½)k2]\n\n      //k4 = hf(x0 + h, y0 + k3)\n    }\n    \n    display() {\n        fill(this.r, this.b, this.g, this.op);\n        noStroke();\n        //this.updatex = map(this.x, -7, 7, -width, width);\n        //this.updatey = map(-this.y, -5, 5, -height, height);\n        ellipse(-this.x, this.y, 2*this.radius, 2*this.radius);\n    }\n    \n}\n\nfunction traceShow() {\n  //function for toggling between the rectangles\n\t\tnoCursor();\n    if(trace==false) {\n        trace = true;\n    }else{\n        trace = false;\n    }\n}\n\nfunction doubleClicked() {\n  //double click to reset the size of the black hole\n  if (a > 10) {\n    a = 0.02;\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67d2f3d4adeb8dacb0907c33",
        "createdAt": "2025-03-20T12:54:59.906Z",
        "updatedAt": "2025-03-20T12:54:59.906Z",
        "id": "67d2f3d4adeb8dacb0907c33"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "67d2f3d4adeb8dacb0907c34",
        "createdAt": "2025-03-20T12:54:59.906Z",
        "updatedAt": "2025-03-20T12:54:59.906Z",
        "id": "67d2f3d4adeb8dacb0907c34"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "67d2f3d4adeb8dacb0907c35",
        "createdAt": "2025-03-20T12:54:59.906Z",
        "updatedAt": "2025-03-20T12:54:59.906Z",
        "id": "67d2f3d4adeb8dacb0907c35"
      }
    ],
    "updatedAt": "2025-03-20T12:54:59.906Z",
    "createdAt": "2025-03-13T15:21:09.745Z",
    "id": "MQbS55Vku"
  },
  {
    "_id": "QjRgJv6vb",
    "name": "Immersion Final Project",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67c9452100a0dd07ac461d58",
          "67c9452100a0dd07ac461d59"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67c9452100a0dd07ac461d57",
        "createdAt": "2025-03-07T05:13:50.720Z",
        "updatedAt": "2025-03-07T05:13:50.720Z",
        "id": "67c9452100a0dd07ac461d57"
      },
      {
        "name": "index.html",
        "content": "<!--\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\n  Learn more about the ml5.js project: https://ml5js.org/\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\n\n  This example demonstrates drawing skeletons on poses for the MoveNet model.\n-->\n\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>ml5.js bodyPose Skeleton Example</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n  </head>\n\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67c9452100a0dd07ac461d58",
        "createdAt": "2025-03-07T05:13:50.720Z",
        "updatedAt": "2025-03-07T05:13:50.720Z",
        "id": "67c9452100a0dd07ac461d58"
      },
      {
        "name": "sketch.js",
        "content": "/*\n * 👋 Hello! This is an ml5.js example made and shared with ❤️.\n * Learn more about the ml5.js project: https://ml5js.org/\n * ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\n *\n * This example demonstrates drawing skeletons on poses for the MoveNet model.\n */\n\n\n\n/*\n*\n* PoseNet - Trained on Full Body poses - meaning points should be more \n* stable if you have your full body in the frame \n*\n* You should test how far user should be away from the camera\n*\n* Poses do not have ids! So you can not track were a person moves, \n* person 1 and person 2 data can swap randomly \n* \n* Check lighting conditions, low lighting could result in less stable \n* pose detection\n* \n* fun trick you can get approx distance of person from camera by calculating \n* the distance between the left eye and the right eye.\n* remember to remove console output to speed up rendering\n*\n*/\n\n\n\nlet video;\nlet bodyPose;\nlet poses = [];\nlet connections;\nlet frameArray = [];\n let Rcolor1 = 50;\n let Gcolor1 = 50;\nlet Bcolor1 = 50;\n\n\n\nfunction preload() {\n  // Load the bodyPose model\n  bodyPose = ml5.bodyPose();\n}\n\nfunction setup() {\n  createCanvas(640, 480);\n\n  // Create the video and hide it\n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n\n  // Start detecting poses in the webcam video\n  bodyPose.detectStart(video, gotPoses);\n  // Get the skeleton connection information\n  connections = bodyPose.getSkeleton();\n}\n\nfunction draw() {\n  // Draw the webcam video\n  image(video, 0, 0, width, height);\n  stroke(255, 255, 255);\n  \n  \n  \n  // get the approx dist from the camera by calculating the distance \n  // between the eyes. \n  for (let i = 0; i < poses.length; i++) {\n    let leye = poses[i].left_eye;\n    let reye = poses[i].right_eye;\n    d = dist(leye.x, leye.y, reye.x, reye.y);\n    fill(Rcolor1, Gcolor1, Bcolor1);\n    stroke(Rcolor1, Gcolor1, Bcolor1);\n    ellipse(poses[i].nose.x, poses[i].nose.y, 20);  \n    \n    // if(d > 25) {\n    //   // console.log('move')\n    //   stroke(0, 0, 0);\n    //   strokeWeight(2);\n    //   textSize(30);\n    //   text(\"move further from camera\", 150, 30)\n    // }\n  }\n  \n  //if we have 2 people we can id them by left and right people\n  // by comparing nose x coordinates \n  \n  if(poses.length > 1) {\n  let leye1 = poses[0].left_eye;\n  let reye1 = poses[0].right_eye;\n  let leye2 = poses[1].left_eye;\n  let reye2 = poses[1].right_eye;\n\n  // Calculate the inter-eye distance for each person\n  let eyeDistance1 = Math.abs(leye1.x - reye1.x);\n  let eyeDistance2 = Math.abs(leye2.x - reye2.x);\n    \n    \n  let person1heartX = (poses[0].left_shoulder.x - poses[0].right_shoulder.x)/2;\n    console.log(person1heartX);\n    \n  //------------------------------------------\n    \n  let xDistance = Math.abs(poses[0].nose.x - poses[1].nose.x);\n  let yDistance = Math.abs(poses[0].nose.y - poses[1].nose.y);\n  let zDistance = eyeDistance1 / eyeDistance2;\n    \n  Rcolor1 = map(xDistance, 0, 620, 50, 255);\n  Gcolor1 = map(yDistance, 0, 620, 50, 255);\n  Bcolor1 = map(zDistance, 0, 8, 50, 255); //double check on this\n  fill(Rcolor1, Gcolor1, Bcolor1);\n    \n    \n    line(\n(poses[0].left_shoulder.x + poses[0].right_shoulder.x)/2,(poses[0].left_shoulder.y + poses[0].right_shoulder.y)/2,(poses[1].left_shoulder.x + poses[1].right_shoulder.x)/2,(poses[1].left_shoulder.y + poses[1].right_shoulder.y)/2\n    );\n      \n  }\n\n  // Draw the skeleton connections\n  for (let i = 0; i < poses.length; i++) {\n    let pose = poses[i];\n    for (let j = 0; j < connections.length; j++) {\n      let pointAIndex = connections[j][0];\n      let pointBIndex = connections[j][1];\n      let pointA = pose.keypoints[pointAIndex];\n      let pointB = pose.keypoints[pointBIndex];\n      \n\n      \n      \n      // Only draw a line if both points are confident enough\n      if (pointA.confidence > 0.5 && pointB.confidence > 0.5) {\n        strokeWeight(2);\n        line(pointA.x, pointA.y, pointB.x, pointB.y);\n      }\n    }\n  }\n  \n\n  // Draw all the tracked landmark points\n  for (let i = 0; i < poses.length; i++) {\n    let pose = poses[i];\n    for (let j = 0; j < pose.keypoints.length; j++) {\n      let keypoint = pose.keypoints[j];\n      // Only draw a circle if the keypoint's confidence is bigger than 0.1\n      if (keypoint.confidence > 0.1) {\n        // fill(0, 255, 0);\n        noStroke();\n        circle(keypoint.x, keypoint.y, 10);\n              let personheartX = (poses[i].left_shoulder.x + poses[i].right_shoulder.x)/2;\n    let personheartY = (poses[i].left_shoulder.y + poses[i].right_shoulder.y)/2;\n    \n    ellipse(personheartX, personheartY, 20);\n    \n      }\n    }\n  }\n}\n\n// Callback function for when bodyPose outputs data\nfunction gotPoses(results) {\n  \n  // console.log('results: ', results)\n  // Save the output to the poses variable\n  poses = results;\n  \n}\n\n\n\n// a data smoothing function \n\n// function getSmoothCoord(coord, frameArray) {\n//     // the first time this runs we add the current x to the array n       number of times\n//     if (frameArray.length < 1) {\n//       for (let i = 0; i < this.smoothAmt; i++) {\n//         frameArray.push(coord);\n//       }\n//       // every other time it runs we update only the most recent value in the array\n//     } else {\n//       frameArray.shift(); // removes first item from array\n//       frameArray.push(coord); // adds new x to end of array\n//     }\n//     // add all the x values\n//     let sum = 0;\n//     for (let i = 0; i < frameArray.length; i++) {\n//       sum += frameArray[i];\n//     }\n//     // return the average\n//     return sum / frameArray.length;\n//   }\n// }",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67c9452100a0dd07ac461d59",
        "createdAt": "2025-03-07T05:13:50.720Z",
        "updatedAt": "2025-03-07T05:13:50.720Z",
        "id": "67c9452100a0dd07ac461d59"
      }
    ],
    "createdAt": "2025-03-06T06:48:01.068Z",
    "updatedAt": "2025-03-07T05:13:50.720Z",
    "id": "QjRgJv6vb"
  },
  {
    "_id": "IVdei8VYg",
    "name": "Languid quail",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "677b659b16965cbb5ec005c1",
          "677b5df9c777c236b8df31aa",
          "677b5df9c777c236b8df31a9",
          "677b5df9c777c236b8df31ab"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "677b5df9c777c236b8df31ac",
        "createdAt": "2025-01-06T06:06:37.643Z",
        "updatedAt": "2025-01-06T06:06:37.643Z",
        "id": "677b5df9c777c236b8df31ac"
      },
      {
        "name": "sketch.js",
        "content": "let sigma = 10;\nlet rho = 28;\nlet beta = 8 / 3;\nlet dt = 0.01;\nlet maxPoints = 100;\nlet attractors = [];\nlet num = 20;\n\nfunction setup() {\n  createCanvas(400, 400, WEBGL);\n  for (let i = 0; i < num; i++) {\n    let initCond = i * 0.05;\n    attractors[i] = new Attractor(initCond, initCond, initCond);\n  }\n}\n\nfunction draw() {\n  background(220);\n  orbitControl();\n  scale(5);\n\n  for (let i = 0; i < num; i++) {\n    attractors[i].update();\n    attractors[i].display();\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "677b5df9c777c236b8df31a9",
        "createdAt": "2025-01-06T06:06:37.643Z",
        "updatedAt": "2025-01-06T06:06:37.643Z",
        "id": "677b5df9c777c236b8df31a9"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n    <script src=\"attractor.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "677b5df9c777c236b8df31aa",
        "createdAt": "2025-01-06T06:06:37.643Z",
        "updatedAt": "2025-01-06T06:06:37.643Z",
        "id": "677b5df9c777c236b8df31aa"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "677b5df9c777c236b8df31ab",
        "createdAt": "2025-01-06T06:06:37.643Z",
        "updatedAt": "2025-01-06T06:06:37.643Z",
        "id": "677b5df9c777c236b8df31ab"
      },
      {
        "name": "attractor.js",
        "content": "class Attractor {\n  constructor(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.points = [];\n  }\n\n  update() {\n    let dx = sigma * (this.y - this.x) * dt;\n    let dy = (this.x * (rho - this.z) - this.y) * dt;\n    let dz = (this.x * this.y - beta * this.z) * dt;\n\n    this.x += dx;\n    this.y += dy;\n    this.z += dz;\n\n    let p = createVector(this.x, this.y, this.z);\n    this.points.push(p);\n\n    if (this.points.length > maxPoints) {\n      this.points.shift();\n    }\n  }\n\n  display() {\n    strokeWeight(1);\n    for (let i = 1; i < this.points.length; i++) {\n      let a = map(i, 0, this.points.length, 0, 255);\n      stroke(0, a);\n      let prev = this.points[i - 1];\n      let curr = this.points[i];\n      line(prev.x, prev.y, prev.z, curr.x, curr.y, curr.z);\n      // point(points[i].x, points[i].y, points[i].z);\n    }\n\n    let endpoint = this.points[this.points.length - 1];\n    strokeWeight(6);\n    point(endpoint.x, endpoint.y, endpoint.z);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "677b659b16965cbb5ec005c1",
        "createdAt": "2025-01-06T06:06:37.643Z",
        "updatedAt": "2025-01-06T06:06:37.643Z",
        "id": "677b659b16965cbb5ec005c1"
      }
    ],
    "updatedAt": "2025-01-06T06:06:37.643Z",
    "createdAt": "2025-01-06T04:58:48.191Z",
    "id": "IVdei8VYg"
  },
  {
    "_id": "EqKx-Z_jv",
    "name": "Metaballs shader copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67b67951efc88f2f0a1559de",
          "67b67951efc88f2f0a1559df",
          "67b67951efc88f2f0a1559e0",
          "67b67951efc88f2f0a1559e1",
          "67b67951efc88f2f0a1559e2"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67b67951efc88f2f0a1559dd",
        "createdAt": "2025-02-20T00:37:40.800Z",
        "updatedAt": "2025-02-20T00:37:40.800Z",
        "id": "67b67951efc88f2f0a1559dd"
      },
      {
        "name": "sketch.js",
        "content": "const BLOBS = 10;\nconst MIN_VEL = 2;\nconst MAX_VEL = 5;\nconst MIN_RAD = 2000;\nconst MAX_RAD = MIN_RAD;\n\n\nlet theShader;\n\nlet list = [];\n\nlet running = true;\n\nfunction preload(){\n  theShader = loadShader('basic.vert', 'basic.frag');\n}\n\nfunction setup() {\n  pixelDensity(1);\n  const SIZE = floor(min(innerWidth, innerHeight)*0.9);\n  createCanvas(SIZE, SIZE, WEBGL);\n  noStroke();\n    \n  for (let i = 0; i < BLOBS; ++i) list.push(new Blobb(random(width), random(height)));\n  \n  (o=>setInterval(()=>o.html(frameRate().toFixed(2)), 100))(createElement('h3'));\n}\n\nmouseClicked = () => running = !running;\n\nfunction draw() {\n  background(0);\n  \n  theShader.setUniform('u_resolution', [width, height]);  \n  theShader.setUniform('u_blobx', list.map(b=>b.x));  \n  theShader.setUniform('u_bloby', list.map(b=>b.y));  \n  \n  shader(theShader);\n  rect(0,0,width, height);\n    \n  if (running) list.forEach((b) => b.update());\n\n}\n\nclass Blobb {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    \n    const ang = Math.random() * Math.PI * 2;\n    const mag = Math.random() * (MAX_VEL-MIN_VEL) + MIN_VEL;\n    this.vx = mag * Math.cos(ang);\n    this.vy = mag * Math.sin(ang);\n\n  }\n\n  update() {\n    if (this.x + this.vx < 0 || this.x + this.vx >= width) this.vx *= -1;\n    if (this.y + this.vy < 0 || this.y + this.vy >= height) this.vy *= -1;\n    this.x += this.vx;\n    this.y += this.vy;\n  }\n\n  // show() {\n  //   ellipse(this.x-width/2, this.y-width/2, 50, 50);\n  // }\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67b67951efc88f2f0a1559e1",
        "createdAt": "2025-02-20T00:37:40.800Z",
        "updatedAt": "2025-02-20T00:37:40.800Z",
        "id": "67b67951efc88f2f0a1559e1"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b67951efc88f2f0a1559e0",
        "createdAt": "2025-02-20T00:37:40.800Z",
        "updatedAt": "2025-02-20T00:37:40.800Z",
        "id": "67b67951efc88f2f0a1559e0"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\nbody{\n  background-color: #1f1f1f;\n  color: white;\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b67951efc88f2f0a1559e2",
        "createdAt": "2025-02-20T00:37:40.800Z",
        "updatedAt": "2025-02-20T00:37:40.800Z",
        "id": "67b67951efc88f2f0a1559e2"
      },
      {
        "name": "basic.vert",
        "content": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nattribute vec3 aPosition;\n\n// Always include this to get the position of the pixel and map the shader correctly onto the shape\n\nvoid main() {\n\n  // Copy the position data into a vec4, adding 1.0 as the w parameter\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n\n  // Scale to make the output fit the canvas\n  positionVec4.xy = positionVec4.xy * 2.0 - 1.0; \n\n  // Send the vertex information on to the fragment shader\n  gl_Position = positionVec4;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b67951efc88f2f0a1559df",
        "createdAt": "2025-02-20T00:37:40.800Z",
        "updatedAt": "2025-02-20T00:37:40.800Z",
        "id": "67b67951efc88f2f0a1559df"
      },
      {
        "name": "basic.frag",
        "content": "#ifdef GL_ES\nprecision highp float;\n#endif\n\n#define NUM_BLOBS 10\n\nuniform vec2 u_resolution;\nuniform float u_blobx[NUM_BLOBS];\nuniform float u_bloby[NUM_BLOBS];\n\nconst float r = 0.2 / float(NUM_BLOBS);\n\nfloat processBlob(vec2 blob, vec2 uv) {\n  vec2 blob0_uv = blob.xy /  u_resolution.xy;\n  vec2 diff0 = uv.xy - blob0_uv.xy;\n  float d0 = length(diff0);\n  return 1.0 * r / d0;\n}\n\nvoid main() {\n\n  vec2 uv = gl_FragCoord.xy / u_resolution.xy;\n  \n  float sum = 0.0;\n    \n  for (int i=0; i<NUM_BLOBS; i++) {\n    sum += processBlob(vec2(u_blobx[i], u_bloby[i]), uv);\n  }\n  \n  gl_FragColor = vec4(vec3(sum), 1.0);\n  \n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b67951efc88f2f0a1559de",
        "createdAt": "2025-02-20T00:37:40.800Z",
        "updatedAt": "2025-02-20T00:37:40.800Z",
        "id": "67b67951efc88f2f0a1559de"
      }
    ],
    "createdAt": "2025-02-20T00:37:38.683Z",
    "updatedAt": "2025-02-20T00:37:40.800Z",
    "id": "EqKx-Z_jv"
  },
  {
    "_id": "DhFwixZFZ",
    "name": "ML5 project",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6722b33372bc673d0d311efb",
          "6722e96aaceb6e7a712aaaf1",
          "6722eff1aceb6e7a712daf45",
          "672278bb293653f9c4b97e28",
          "672278bb293653f9c4b97e29",
          "6723b793245d9b5663ce3f7a",
          "6723f5561be2af83bb6de9f6",
          "6723b63d9477cd3efc743cae"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "672278bb293653f9c4b97e27",
        "createdAt": "2024-11-01T20:17:33.716Z",
        "updatedAt": "2024-11-01T20:17:33.716Z",
        "id": "672278bb293653f9c4b97e27"
      },
      {
        "name": "index.html",
        "content": "<!--\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\n  Learn more about the ml5.js project: https://ml5js.org/\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\n\n  This example demonstrates hand tracking on live video through ml5.handPose.\n-->\n\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ml5.js handPose Webcam Example</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.js\"></script>\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n    <script src=\"Circle.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672278bb293653f9c4b97e28",
        "createdAt": "2024-11-01T20:17:33.716Z",
        "updatedAt": "2024-11-01T20:17:33.716Z",
        "id": "672278bb293653f9c4b97e28"
      },
      {
        "name": "sketch.js",
        "content": "let handPose;\nlet video;\nlet hands = [];\nlet painting;\nlet px = 0;\nlet py = 0;\nlet nextDrawTime;\nlet circles = [];\nlet womb;\nlet fullscreenStarted = false;\nlet soundFile;\nlet pitchShifter;\n\nfunction preload() {\n  handPose = ml5.handPose();\n  particleImage = loadImage('hand_point.png')\n  loadImage('hand_left.png')\n  womb = loadImage('womb.png')\n  soundFile = loadSound('touch_sound.mp3');\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  // painting = createGraphics(640, 480);\n  // painting.clear();\n\n  video = createCapture(VIDEO);\n  video.hide();\n  handPose.detectStart(video, gotHands);\n  \n  // pitchShifter = new p5.PitchShift(); // Initialize pitch shifter after loading p5\n  // soundFile.disconnect(); // Ensure the sound is disconnected initially\n  // soundFile.connect(pitchShifter); // Connect sound file to pitch shifter\n  \n  nextDrawTime = frameCount + int(random(60, 180));\n}\n\nfunction draw() {\n  video.size(windowWidth, windowHeight);\nresizeCanvas(windowWidth, windowHeight);\n  imageMode(CENTER);\n  background(0);\n  \n  // Draw video to canvas\n  image(video, width / 2, height / 2, windowWidth, windowHeight);\n  // tint(255, 188);\n  // image(womb, width / 2, height / 2, height - 80, height - 80);\n  noStroke();\n\n  for (let i = circles.length - 1; i >= 0; i--) {\n    let obj = circles[i];\n    obj.display();\n    // console.log(obj.x, obj.y);\n      // pitchShifter.shift(pitchValue);\n    \n    if (obj.finished()) {\n      circles.splice(i, 1); // Remove the circle if it has faded out\n      nextDrawTime = frameCount + int(random(60, 180));\n    }\n  }\n\n  if (frameCount === nextDrawTime) {\n    let newObj = new Circle(\n      random(windowWidth / 2 - windowHeight/2 + 120, windowWidth / 2 + windowHeight/2 - 120),\n      random(120, windowHeight - 120),\n      random(20, 30)\n    );\n    circles.push(newObj);\n  }\n\n  if (hands.length > 0) {\n    let hand = hands[0];\n    let index = hand.index_finger_tip; // Get the index finger tip\n    // console.log(index.x, index.y);\n\n    // Scale the coordinates to match canvas dimensions\n\n    for (let i = 0; i < circles.length; i++) {\n      let obj = circles[i];\n\n      if (dist(obj.x, obj.y, index.x, index.y) < 70) {\n        obj.checkOver();\n      }\n    }\n  }\n  filter(BLUR, 3);\n}\n\n// Callback function for when handPose outputs data\nfunction gotHands(results) {\n  hands = results;\n}\n\nfunction keyPressed() {\n  if (!fullscreen()) {\n    fullscreen(true);\n    fullscreenStarted = true; // Track if fullscreen has started\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "672278bb293653f9c4b97e29",
        "createdAt": "2024-11-01T20:17:33.716Z",
        "updatedAt": "2024-11-01T20:17:33.716Z",
        "id": "672278bb293653f9c4b97e29"
      },
      {
        "name": "Circle.js",
        "content": "let pitches = [0.6853, 0.875, 1, 1.125, 1.359];\n\nclass Circle {\n  constructor(x, y, size) {\n    this.x = x;\n    this.y = y;\n    this.baseSize = size;\n    this.size = size;\n    this.color1 = 255; // Base color when hovering\n    this.color2 = 255;\n    this.color3 = 255;\n    this.life = 1; // Start fully opaque\n    this.fading = false;\n  }\n\n  display() {\n    // Manage fading\n    if (this.fading) {\n      this.life -= 10; // Decrease life if fading\n    } else {\n      if (this.life <255){\n      this.life += 3;}\n      if (this.life > 255) this.life = 255; // Cap life to max 255\n    }\n\n    // Pulsating effect for size\n    this.size = this.baseSize + sin(frameCount * 0.1) * 10;\n\n    // Draw outer glow effect\n    for (let i = 5; i > 0; i--) {\n      fill(this.color1, this.color2, this.color3, this.life / (i * 2)); // Adjust opacity for glow\n      noStroke();\n      circle(this.x, this.y, this.size + i * 15); // Increase radius for glow\n    }\n\n    // Draw main circle\n    fill(this.color1, this.color2, this.color3, this.life); // Use life for opacity\n    circle(this.x, this.y, this.size);\n  }\n\n  checkOver() {\n    if (!this.fading) {\n      this.fading = true; // Start fading when hovered over\n      this.color1 = 137;\n      this.color2 = 207;\n      this.color3 = 240;\n\n      let randomPitches = pitches[Math.floor(Math.random() * pitches.length)]; // Choose a new random item each time\n      let pitchValue = randomPitches;\n      soundFile.rate(pitchValue);\n      soundFile.play(); // Play the sound\n    }\n  }\n\n  finished() {\n    return this.life < 0; // Return whether the circle should be removed\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6722b33372bc673d0d311efb",
        "createdAt": "2024-11-01T20:17:33.716Z",
        "updatedAt": "2024-11-01T20:17:33.716Z",
        "id": "6722b33372bc673d0d311efb"
      },
      {
        "name": "hand_left.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/0f240e3d-927b-48af-a000-bd4c9f98bb79.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6722e96aaceb6e7a712aaaf1",
        "createdAt": "2024-11-01T20:17:33.716Z",
        "updatedAt": "2024-11-01T20:17:33.716Z",
        "id": "6722e96aaceb6e7a712aaaf1"
      },
      {
        "name": "hand_point.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/0ab4ba03-be86-43e0-bfb0-884991d26332.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6722eff1aceb6e7a712daf45",
        "createdAt": "2024-11-01T20:17:33.716Z",
        "updatedAt": "2024-11-01T20:17:33.716Z",
        "id": "6722eff1aceb6e7a712daf45"
      },
      {
        "name": "womb.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/bef96a45-120f-4a3e-8762-0c768098ac2e.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6723b63d9477cd3efc743cae",
        "createdAt": "2024-11-01T20:17:33.716Z",
        "updatedAt": "2024-11-01T20:17:33.716Z",
        "id": "6723b63d9477cd3efc743cae"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n  \n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6723b793245d9b5663ce3f7a",
        "createdAt": "2024-11-01T20:17:33.716Z",
        "updatedAt": "2024-11-01T20:17:33.716Z",
        "id": "6723b793245d9b5663ce3f7a"
      },
      {
        "name": "touch_sound.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/10e64eff-cee7-4957-83c3-0237a74072bf.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6723f5561be2af83bb6de9f6",
        "createdAt": "2024-11-01T20:17:33.716Z",
        "updatedAt": "2024-11-01T20:17:33.716Z",
        "id": "6723f5561be2af83bb6de9f6"
      }
    ],
    "createdAt": "2024-10-30T18:19:38.832Z",
    "updatedAt": "2024-11-01T20:17:33.716Z",
    "id": "DhFwixZFZ"
  },
  {
    "_id": "GABa6L4Lw",
    "name": "ML5 project UTD",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67255e5a8abcba37a187f0d7",
          "67255e5a8abcba37a187f0d8",
          "67255e5a8abcba37a187f0d9",
          "67255e5a8abcba37a187f0da",
          "67258adac81ceb7660ecee06",
          "67255e5a8abcba37a187f0db",
          "67255e5a8abcba37a187f0dc",
          "67255e5a8abcba37a187f0dd",
          "67255e5a8abcba37a187f0de"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67255e5a8abcba37a187f0d6",
        "createdAt": "2024-11-02T02:17:58.916Z",
        "updatedAt": "2024-11-02T02:17:58.916Z",
        "id": "67255e5a8abcba37a187f0d6"
      },
      {
        "name": "index.html",
        "content": "<!--\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\n  Learn more about the ml5.js project: https://ml5js.org/\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\n\n  This example demonstrates hand tracking on live video through ml5.handPose.\n-->\n\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ml5.js handPose Webcam Example</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.js\"></script>\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n    <script src=\"Circle.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67255e5a8abcba37a187f0da",
        "createdAt": "2024-11-02T02:17:58.916Z",
        "updatedAt": "2024-11-02T02:17:58.916Z",
        "id": "67255e5a8abcba37a187f0da"
      },
      {
        "name": "sketch.js",
        "content": "let handPose;\nlet video;\nlet hands = [];\nlet painting;\nlet px = 0;\nlet py = 0;\nlet nextDrawTime;\nlet circles = [];\nlet womb;\nlet fullscreenStarted = false;\nlet soundFile;\nlet pitchShifter;\nlet imageOpacity = 50;\n\nfunction preload() {\n  handPose = ml5.handPose();\n  particleImage = loadImage(\"hand_point.png\");\n  loadImage(\"hand_left.png\");\n  womb = loadImage(\"womb.png\");\n  soundFile = loadSound(\"touch_sound.mp3\");\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  // painting = createGraphics(640, 480);\n  // painting.clear();\n\n  video = createCapture(VIDEO);\n  video.hide();\n  handPose.detectStart(video, gotHands);\n\n  // pitchShifter = new p5.PitchShift(); // Initialize pitch shifter after loading p5\n  // soundFile.disconnect(); // Ensure the sound is disconnected initially\n  // soundFile.connect(pitchShifter); // Connect sound file to pitch shifter\n\n  nextDrawTime = frameCount + int(random(60, 180));\n}\n\nfunction draw() {\n  resizeCanvas(windowWidth, windowHeight);\n\n  video.size(width, height);\n  imageMode(CENTER);\n  image(video, width / 2, height / 2, width, height);\n  // background(0);\n  tint(255, imageOpacity);\n  image(womb, width / 2, height / 2, height - 80, height - 80);\n  stroke(8);\n\n  for (let i = circles.length - 1; i >= 0; i--) {\n    let obj = circles[i];\n    obj.display();\n    text(obj.x, width/2, height/2 - 50);\n    text(obj.y, width/2, height/2);\n    \n    if (obj.finished()) {\n      circles.splice(i, 1); // Remove the circle if it has faded out\n      nextDrawTime = frameCount + int(random(60, 180));\n    }\n  }\n  \n    for (let i = 0; i < circles.length - 1; i++) {\n    circles[i].displayLine(circles[i + 1]);\n  }\n\n  if (frameCount === nextDrawTime) {\n    let newObj = new Circle(\n      random(\n        width / 2 - height / 2 + 120,\n        width / 2 + height / 2 - 120\n      ),\n      random(120, height - 120),\n      random(20, 30)\n    );\n    circles.push(newObj);\n  }\n\n  if (hands.length > 0) {\n    let hand = hands[0];\n    let index = hand.index_finger_tip; // Get the index finger tip\n    for (let i = 0; i < circles.length; i++) {\n      let obj = circles[i];\n      text(index.x, width/2 + 200, height/2 - 50);\n       text(index.y, width/2 + 200, height/2);\n      // let ?????\n      // let zDifference = abs(this.z - indexZ);\n      if (dist(obj.x, obj.y, index.x, index.y) < 40) {\n        obj.checkOver();\n      }\n    }\n  }\n  // filter(BLUR, 3);\n}\n\n// Callback function for when handPose outputs data\nfunction gotHands(results) {\n  hands = results;\n}\n\nfunction keyPressed() {\n  if (!fullscreen()) {\n    fullscreen(true);\n    fullscreenStarted = true; // Track if fullscreen has started\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67255e5a8abcba37a187f0db",
        "createdAt": "2024-11-02T02:17:58.916Z",
        "updatedAt": "2024-11-02T02:17:58.916Z",
        "id": "67255e5a8abcba37a187f0db"
      },
      {
        "name": "Circle.js",
        "content": "let pitches = [0.6853, 0.875, 1, 1.125, 1.359];\n\nclass Circle {\n  constructor(x, y, size) {\n    this.x = x;\n    this.y = y;\n    this.baseSize = size;\n    this.size = size;\n    this.color1 = 255; // Base color when hovering\n    this.color2 = 255;\n    this.color3 = 255;\n    this.life = 1; // Start fully opaque\n    this.fading = false;\n  }\n\n  display() {\n    // Manage fading\n    if (this.fading) {\n      this.life -= 10; // Decrease life if fading\n    } else {\n      if (this.life <255){\n      this.life += 3;}\n      if (this.life > 255) this.life = 255; // Cap life to max 255\n    }\n\n    this.size = this.baseSize + sin(frameCount * 0.1) * 10;\n\n    // Draw outer glow effect\n    for (let i = 5; i > 0; i--) {\n      fill(this.color1, this.color2, this.color3, this.life / (i * 2)); // Adjust opacity for glow\n      noStroke();\n      circle(this.x, this.y, this.size + i * 15); // Increase radius for glow\n    }\n\n    // Draw main circle\n    fill(this.color1, this.color2, this.color3, this.life); // Use life for opacity\n    circle(this.x, this.y, this.size);\n  }\n\n    checkOver() {\n    if (!this.fading) {\n      this.fading = true; // Start fading when hovered over\n      this.color1 = 137;\n      this.color2 = 207;\n      this.color3 = 240;\n\n      let randomPitches = pitches[Math.floor(Math.random() * pitches.length)]; // Choose a new random item each time\n      let pitchValue = randomPitches;\n      soundFile.rate(pitchValue);\n      soundFile.play(); // Play the sound\n      \n    }\n  }\n\n  finished() {\n    return this.life < 0; // Return whether the circle should be removed\n  }\n\n displayLine(nextCircle) {\n    stroke(255, 150); // Set line color and transparency\n    line(this.x, this.y, nextCircle.x, nextCircle.y);\n }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67255e5a8abcba37a187f0d7",
        "createdAt": "2024-11-02T02:17:58.916Z",
        "updatedAt": "2024-11-02T02:17:58.916Z",
        "id": "67255e5a8abcba37a187f0d7"
      },
      {
        "name": "hand_left.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/b224fca8-f0d7-404b-bf96-eab4f1d92edb.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67255e5a8abcba37a187f0d8",
        "createdAt": "2024-11-02T02:17:58.916Z",
        "updatedAt": "2024-11-02T02:17:58.916Z",
        "id": "67255e5a8abcba37a187f0d8"
      },
      {
        "name": "hand_point.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/ce28694c-22a1-4b5c-a10e-77a5441aa2e9.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67255e5a8abcba37a187f0d9",
        "createdAt": "2024-11-02T02:17:58.916Z",
        "updatedAt": "2024-11-02T02:17:58.916Z",
        "id": "67255e5a8abcba37a187f0d9"
      },
      {
        "name": "womb.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/f043cf42-2a0a-4700-8c4e-13e7db0d75be.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67255e5a8abcba37a187f0de",
        "createdAt": "2024-11-02T02:17:58.916Z",
        "updatedAt": "2024-11-02T02:17:58.916Z",
        "id": "67255e5a8abcba37a187f0de"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n  \n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67255e5a8abcba37a187f0dc",
        "createdAt": "2024-11-02T02:17:58.916Z",
        "updatedAt": "2024-11-02T02:17:58.916Z",
        "id": "67255e5a8abcba37a187f0dc"
      },
      {
        "name": "touch_sound.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/9a969e96-ca22-4482-921b-a7c20a0c8c44.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67255e5a8abcba37a187f0dd",
        "createdAt": "2024-11-02T02:17:58.916Z",
        "updatedAt": "2024-11-02T02:17:58.916Z",
        "id": "67255e5a8abcba37a187f0dd"
      },
      {
        "name": "laughs",
        "content": "",
        "children": [
          "67258b17c81ceb7660ecf1cf",
          "67258b17c81ceb7660ecf1bf",
          "67258b17625df1ea4d6a22a3",
          "67258b17c226bbb73e2205ce",
          "67258b17c81ceb7660ecf1e0"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67258adac81ceb7660ecee06",
        "createdAt": "2024-11-02T02:17:58.916Z",
        "updatedAt": "2024-11-02T02:17:58.916Z",
        "id": "67258adac81ceb7660ecee06"
      },
      {
        "name": "Laugh_2.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/2dbe6500-5577-48f5-9b5e-2f1cd8e739fa.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67258b17c81ceb7660ecf1bf",
        "createdAt": "2024-11-02T02:17:58.916Z",
        "updatedAt": "2024-11-02T02:17:58.916Z",
        "id": "67258b17c81ceb7660ecf1bf"
      },
      {
        "name": "Laugh_1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/1c085dbd-96c9-4589-bcaa-2737721195ce.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67258b17c81ceb7660ecf1cf",
        "createdAt": "2024-11-02T02:17:58.916Z",
        "updatedAt": "2024-11-02T02:17:58.916Z",
        "id": "67258b17c81ceb7660ecf1cf"
      },
      {
        "name": "Laugh_3.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/4b00d8cc-4bd6-4de2-9e50-1660adf4a928.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67258b17625df1ea4d6a22a3",
        "createdAt": "2024-11-02T02:17:58.916Z",
        "updatedAt": "2024-11-02T02:17:58.916Z",
        "id": "67258b17625df1ea4d6a22a3"
      },
      {
        "name": "Laugh_4.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/a30af5c9-5d64-4a19-a7d6-36987240e370.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67258b17c226bbb73e2205ce",
        "createdAt": "2024-11-02T02:17:58.916Z",
        "updatedAt": "2024-11-02T02:17:58.916Z",
        "id": "67258b17c226bbb73e2205ce"
      },
      {
        "name": "Laugh_5.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/c9d930ed-4ee9-49db-9152-353be31565dc.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67258b17c81ceb7660ecf1e0",
        "createdAt": "2024-11-02T02:17:58.916Z",
        "updatedAt": "2024-11-02T02:17:58.916Z",
        "id": "67258b17c81ceb7660ecf1e0"
      }
    ],
    "createdAt": "2024-11-01T23:03:55.415Z",
    "updatedAt": "2024-11-02T02:17:58.916Z",
    "id": "GABa6L4Lw"
  },
  {
    "_id": "EdARwDfMp",
    "name": "ML5 project UTD UPTD",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67258bd98abcba37a187f0e0",
          "67258bd98abcba37a187f0e1",
          "67258bd98abcba37a187f0e2",
          "67258bd98abcba37a187f0e3",
          "67259506625df1ea4d6c6df6",
          "67259506c226bbb73e24a52e",
          "67259507c81ceb7660ef5523",
          "67259507c81ceb7660ef5534",
          "67259507c81ceb7660ef5546",
          "67258bd98abcba37a187f0ea",
          "67258bd98abcba37a187f0eb",
          "67258bd98abcba37a187f0ec",
          "67258bd98abcba37a187f0ed"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67258bd98abcba37a187f0df",
        "createdAt": "2024-11-04T21:36:31.591Z",
        "updatedAt": "2024-11-04T21:36:31.591Z",
        "id": "67258bd98abcba37a187f0df"
      },
      {
        "name": "index.html",
        "content": "<!--\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\n  Learn more about the ml5.js project: https://ml5js.org/\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\n\n  This example demonstrates hand tracking on live video through ml5.handPose.\n-->\n\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ml5.js handPose Webcam Example</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <script src=\"laughs/extraScript.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.js\"></script>\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n    <script src=\"Circle.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67258bd98abcba37a187f0e3",
        "createdAt": "2024-11-04T21:36:31.591Z",
        "updatedAt": "2024-11-04T21:36:31.591Z",
        "id": "67258bd98abcba37a187f0e3"
      },
      {
        "name": "sketch.js",
        "content": "let handPose;\nlet video;\nlet hands = [];\nlet painting;\nlet px = 0;\nlet py = 0;\nlet nextDrawTime;\nlet circles = [];\nlet womb;\nlet fullscreenStarted = false;\nlet soundFile;\nlet pitchShifter;\nlet imageOpacity = 50;\nlet laugh = [];\nlet playCount = 0;\n\nfunction preload() {\n  handPose = ml5.handPose();\n\n  womb = loadImage(\"womb.png\");\n  soundFile = loadSound(\"touch_sound.mp3\");\n  \n    // Adjust this if you have a different number of files\n    laugh.push(loadSound(\"laugh 1.mp3\"), loadSound(\"laugh 2.mp3\"), loadSound(\"laugh 3.mp3\"), loadSound(\"laugh 4.mp3\"), loadSound(\"laugh 5.mp3\")); // Names should match the files in the folder\n  }\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  // painting = createGraphics(640, 480);\n  // painting.clear();\n\n  video = createCapture(VIDEO);\n  video.hide();\n  handPose.detectStart(video, gotHands);\n\n  // pitchShifter = new p5.PitchShift(); // Initialize pitch shifter after loading p5\n  // soundFile.disconnect(); // Ensure the sound is disconnected initially\n  // soundFile.connect(pitchShifter); // Connect sound file to pitch shifter\n\n  nextDrawTime = frameCount + int(random(60, 180));\n}\n\nfunction draw() {\n  resizeCanvas(windowWidth, windowHeight);\n\n  video.size(width, height);\n  imageMode(CENTER);\n  translate(video.width, 0); // Move to the right edge of the video\n  scale(-1, 1);\n  image(video, width / 2, height / 2, width - 230, height);\n  // background(0);\n  // // tint(255, 10); \n  image(womb, width / 2 - 140 , height / 2, height - 80, height - 80);\n  stroke(8);\n\n  for (let i = circles.length - 1; i >= 0; i--) {\n    let obj = circles[i];\n    obj.display();\n    // text(obj.x, width / 2, height / 2 - 50);\n    // text(obj.y, width / 2, height / 2);\n\n    if (obj.finished()) {\n      circles.splice(i, 1); // Remove the circle if it has faded out\n      nextDrawTime = frameCount + int(random(60, 180));\n    }\n  }\n\n  for (let i = 0; i < circles.length - 1; i++) {\n    circles[i].displayLine(circles[i + 1]);\n  }\n\n  if (frameCount === nextDrawTime) {\n    let newObj = new Circle(\n      random(width / 2 - height / 2 + 120, width / 2 + height / 2 - 120),\n      random(120, height - 120),\n      random(20, 30)\n    );\n    circles.push(newObj);\n  }\n\n  if (hands.length > 0) {\n    let hand = hands[0];\n    let index = hand.index_finger_tip; // Get the index finger tip\n    for (let i = 0; i < circles.length; i++) {\n      let obj = circles[i];\n      // text(index.x, width / 2 + 200, height / 2 - 50);\n      // text(index.y, width / 2 + 200, height / 2);\n      // let ?????\n      // let zDifference = abs(this.z - indexZ);\n      if (dist(obj.x, obj.y, index.x, index.y) < 40) {\n        obj.checkOver1();\n      }\n    }\n  }\n  // filter(BLUR, 3);\n}\n\n// Callback function for when handPose outputs data\nfunction gotHands(results) {\n  hands = results;\n}\n\nfunction keyPressed() {\n  if (!fullscreen()) {\n    fullscreen(true);\n    fullscreenStarted = true; // Track if fullscreen has started\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67258bd98abcba37a187f0ea",
        "createdAt": "2024-11-04T21:36:31.591Z",
        "updatedAt": "2024-11-04T21:36:31.591Z",
        "id": "67258bd98abcba37a187f0ea"
      },
      {
        "name": "Circle.js",
        "content": "let pitches = [0.6853, 0.875, 1, 1.125, 1.359];\n\nclass Circle {\n  constructor(x, y, size) {\n    this.x = x;\n    this.y = y;\n    this.baseSize = size;\n    this.size = size;\n    this.color1 = 255; // Base color when hovering\n    this.color2 = 255;\n    this.color3 = 255;\n    this.life = 1; // Start fully opaque\n    this.fading = false;\n  }\n\n  display() {\n    // Manage fading\n    if (this.fading) {\n      this.life -= 10; // Decrease life if fading\n    } else {\n      if (this.life < 255) {\n        this.life += 3;\n      }\n      if (this.life > 255) this.life = 255; // Cap life to max 255\n    }\n\n    this.size = this.baseSize + sin(frameCount * 0.1) * 10;\n\n    // Draw outer glow effect\n    for (let i = 5; i > 0; i--) {\n      fill(this.color1, this.color2, this.color3, this.life / (i * 2)); // Adjust opacity for glow\n      noStroke();\n      circle(this.x, this.y, this.size + i * 15); // Increase radius for glow\n    }\n\n    // Draw main circle\n    fill(this.color1, this.color2, this.color3, this.life); // Use life for opacity\n    circle(this.x, this.y, this.size);\n  }\n\n  checkOver1() {\n    ///// for regular circles\n    if (!this.fading) {\n      this.fading = true; // Start fading when hovered over\n      this.color1 = 137;\n      this.color2 = 207;\n      this.color3 = 240;\n\n      playCount++;\n        if (playCount % 5 === 0) {\n            // Play the next laugh sound in order, cycling through the array\n            const laughIndex = Math.floor(playCount / 5) % laugh.length; // Get the index based on playCount\n            laugh[laughIndex].play(); // Play the laugh sound\n\n            // Reset playCount after playing the fifth laugh\n            if (laughIndex === laugh.length - 1) {\n                playCount = 0; // Reset the counter after playing the last laugh\n            }\n        } else {\n            // Change pitch for the other times\n            soundFile.rate(pitches[Math.floor(Math.random() * pitches.length)]);\n            soundFile.play();\n        }\n    }\n}\n  finished() {\n    return this.life < 0; // Return whether the circle should be removed\n  }\n\n  displayLine(nextCircle) {\n    stroke(255, 150); // Set line color and transparency\n    line(this.x, this.y, nextCircle.x, nextCircle.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67258bd98abcba37a187f0e0",
        "createdAt": "2024-11-04T21:36:31.591Z",
        "updatedAt": "2024-11-04T21:36:31.591Z",
        "id": "67258bd98abcba37a187f0e0"
      },
      {
        "name": "hand_left.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/d34a2f8e-5ec3-439e-bd1a-a414aac91f50.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67258bd98abcba37a187f0e1",
        "createdAt": "2024-11-04T21:36:31.591Z",
        "updatedAt": "2024-11-04T21:36:31.591Z",
        "id": "67258bd98abcba37a187f0e1"
      },
      {
        "name": "hand_point.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/f32c7ca0-6077-46e3-b9d4-c4dddd179937.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67258bd98abcba37a187f0e2",
        "createdAt": "2024-11-04T21:36:31.591Z",
        "updatedAt": "2024-11-04T21:36:31.591Z",
        "id": "67258bd98abcba37a187f0e2"
      },
      {
        "name": "womb.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/13f6e6cf-f179-437b-a43a-620a39d64c76.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67258bd98abcba37a187f0ed",
        "createdAt": "2024-11-04T21:36:31.591Z",
        "updatedAt": "2024-11-04T21:36:31.591Z",
        "id": "67258bd98abcba37a187f0ed"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n  \n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67258bd98abcba37a187f0eb",
        "createdAt": "2024-11-04T21:36:31.591Z",
        "updatedAt": "2024-11-04T21:36:31.591Z",
        "id": "67258bd98abcba37a187f0eb"
      },
      {
        "name": "touch_sound.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/5c7317ba-e2f1-48af-bfea-11dbf7170cd4.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67258bd98abcba37a187f0ec",
        "createdAt": "2024-11-04T21:36:31.591Z",
        "updatedAt": "2024-11-04T21:36:31.591Z",
        "id": "67258bd98abcba37a187f0ec"
      },
      {
        "name": "laugh 2.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/a4561fe9-23a0-4013-9965-4fb211fa0500.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67259506c226bbb73e24a52e",
        "createdAt": "2024-11-04T21:36:31.591Z",
        "updatedAt": "2024-11-04T21:36:31.591Z",
        "id": "67259506c226bbb73e24a52e"
      },
      {
        "name": "laugh 1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/84771d12-4e0c-4639-a385-669d39620da2.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67259506625df1ea4d6c6df6",
        "createdAt": "2024-11-04T21:36:31.591Z",
        "updatedAt": "2024-11-04T21:36:31.591Z",
        "id": "67259506625df1ea4d6c6df6"
      },
      {
        "name": "laugh 3.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/159d1c35-1190-4fb0-8190-9f7783667d25.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67259507c81ceb7660ef5523",
        "createdAt": "2024-11-04T21:36:31.591Z",
        "updatedAt": "2024-11-04T21:36:31.591Z",
        "id": "67259507c81ceb7660ef5523"
      },
      {
        "name": "laugh 4.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/702bb73f-1b45-48f2-aec5-228a2b3c4a07.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67259507c81ceb7660ef5534",
        "createdAt": "2024-11-04T21:36:31.591Z",
        "updatedAt": "2024-11-04T21:36:31.591Z",
        "id": "67259507c81ceb7660ef5534"
      },
      {
        "name": "laugh 5.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/c96fc9c0-b8d3-4cba-b454-79ae545eaec2.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67259507c81ceb7660ef5546",
        "createdAt": "2024-11-04T21:36:31.591Z",
        "updatedAt": "2024-11-04T21:36:31.591Z",
        "id": "67259507c81ceb7660ef5546"
      }
    ],
    "createdAt": "2024-11-02T02:18:02.265Z",
    "updatedAt": "2024-11-04T21:36:31.591Z",
    "id": "EdARwDfMp"
  },
  {
    "_id": "pVvgHT3Fl",
    "name": "ML5 project UTD UPTD with arduino another version",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67293f8b16237a6128bed52a",
          "67293f8b16237a6128bed52b",
          "67293f8b16237a6128bed52c",
          "67293f8b16237a6128bed52d",
          "67293f8b16237a6128bed52e",
          "67293f8b16237a6128bed52f",
          "67293f8b16237a6128bed530",
          "67293f8b16237a6128bed531",
          "67293f8b16237a6128bed532",
          "67293f8b16237a6128bed533",
          "67293f8b16237a6128bed534",
          "67293f8b16237a6128bed535",
          "67293f8b16237a6128bed536"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67293f8b16237a6128bed529",
        "createdAt": "2024-11-04T22:04:40.291Z",
        "updatedAt": "2024-11-04T22:04:40.291Z",
        "id": "67293f8b16237a6128bed529"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ml5.js handPose Webcam Example</title>\n    \n    <!-- Load p5.js and its sound addon -->\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    \n    <!-- Load ml5.js -->\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    \n    <!-- Your custom scripts -->\n    <script src=\"laughs/extraScript.js\"></script>\n    <script src=\"sketch.js\"></script>\n    <script src=\"Circle.js\"></script>\n    \n    <!-- Optional: Your stylesheet -->\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  </head>\n  <body>\n  </body>\n</html>",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67293f8b16237a6128bed52d",
        "createdAt": "2024-11-04T22:04:40.291Z",
        "updatedAt": "2024-11-04T22:04:40.291Z",
        "id": "67293f8b16237a6128bed52d"
      },
      {
        "name": "sketch.js",
        "content": "let handPose;\nlet video;\nlet hands = [];\nlet painting;\nlet px = 0;\nlet py = 0;\nlet nextDrawTime;\nlet circles = [];\nlet womb;\nlet fullscreenStarted = false;\nlet soundFile;\nlet pitchShifter;\nlet imageOpacity = 50;\nlet laugh = [];\nlet playCount = 0;\nlet targetOpacity = 200; // Target opacity for decrease\nlet opacityIncrement = 200; // Increase opacity on heartbeat\nlet pulsing = 50;\n\n/////////////arduino side/////////////////\nconst askForPort = false; //true first time to pick port, then change to false\nlet serial;\nlet portButton;\nlet inData = [];\nlet outData;\nlet noFinger = true;\n\nlet bpmHistory = [];\nconst bpmWindowSize = 10; // Number of samples to average\nlet minBPM = 60; // Minimum BPM to consider for opacity changes\n\nfunction preload() {\n  handPose = ml5.handPose();\n\n  womb = loadImage(\"womb.png\");\n  soundFile = loadSound(\"touch_sound.mp3\");\n  \n    // Adjust this if you have a different number of files\n    laugh.push(loadSound(\"laugh 1.mp3\"), loadSound(\"laugh 2.mp3\"), loadSound(\"laugh 3.mp3\"), loadSound(\"laugh 4.mp3\"), loadSound(\"laugh 5.mp3\")); // Names should match the files in the folder\n  }\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  // painting = createGraphics(640, 480);\n  // painting.clear();\n\n  video = createCapture(VIDEO);\n  video.hide();\n  handPose.detectStart(video, gotHands);\n  serial = new p5.WebSerial();\n\n  // pitchShifter = new p5.PitchShift(); // Initialize pitch shifter after loading p5\n  // soundFile.disconnect(); // Ensure the sound is disconnected initially\n  // soundFile.connect(pitchShifter); // Connect sound file to pitch shifter\n\n  nextDrawTime = frameCount + int(random(60, 180));\n  \n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported Try Chrome \");\n  }\n  //first time you connect create button to identify port\n  if (askForPort) {\n    makePortButton();\n  } else {\n    serial.getPorts(); //skip the button use port from last time\n  }\n  serial.on(\"portavailable\", openPort);\n  serial.on(\"data\", serialEvent);\n  textSize(32);\n}\n\nfunction draw() {\n  resizeCanvas(windowWidth, windowHeight);\n\n  video.size(width, height);\n  imageMode(CENTER);\n  translate(video.width, 0); // Move to the right edge of the video\n  scale(-1, 1);\n  image(video, width / 2, height / 2, width - 230, height);\n  // background(0);\n  // // tint(255, 10); \n  image(womb, width / 2 - 140 , height / 2, height - 80, height - 80);\n  stroke(8);\n  \n  fill(0, 0, 0, pulsing);\n  square(-width, -height, width * 10);  \n\n  for (let i = circles.length - 1; i >= 0; i--) {\n    let obj = circles[i];\n    obj.display();\n    // text(obj.x, width / 2, height / 2 - 50);\n    // text(obj.y, width / 2, height / 2);\n\n    if (obj.finished()) {\n      circles.splice(i, 1); // Remove the circle if it has faded out\n      nextDrawTime = frameCount + int(random(60, 180));\n    }\n  }\n\n  for (let i = 0; i < circles.length - 1; i++) {\n    circles[i].displayLine(circles[i + 1]);\n  }\n\n  if (frameCount === nextDrawTime) {\n    let newObj = new Circle(\n      random(width / 2 - height / 2 + 120, width / 2 + height / 2 - 120),\n      random(120, height - 120),\n      random(20, 30)\n    );\n    circles.push(newObj);\n  }\n\n  if (hands.length > 0) {\n    let hand = hands[0];\n    let index = hand.index_finger_tip; // Get the index finger tip\n    for (let i = 0; i < circles.length; i++) {\n      let obj = circles[i];\n      if (dist(obj.x, obj.y, index.x, index.y) < 40) {\n        obj.checkOver1();\n      }\n    }\n  }\n\n  }\n  if (inData.length > 0) {\n    console.log(inData);\n    //turn it into JSON\n    let asJSON = {};\n    for (let i = 0; i < inData.length; i++) {\n      let nameValuePair = inData[i].split(\"=\");\n      asJSON[nameValuePair[0].trim()] = int(nameValuePair[1]);\n    }\n    // text(JSON.stringify(asJSON), 0, 100);\n\n    if (asJSON.IR) {\n            // Assuming you have a way to convert IR data to BPM\n      let currentBPM = map(asJSON.IR, 80000, 95000, 60, 120); // Example mapping\n      bpmHistory.push(currentBPM);\n\n      // Keep only the most recent `bpmWindowSize` values\n      if (bpmHistory.length > bpmWindowSize) {\n        bpmHistory.shift();\n      }\n\n      // Calculate average BPM\n      let averageBPM = bpmHistory.reduce((sum, bpm) => sum + bpm, 0) / bpmHistory.length;\n\n      // Map the average BPM to pulsing opacity\n      let opacityFromBPM = map(averageBPM, minBPM, 120, 50, 255); // Map BPM to opacity range\n      pulsing = constrain(opacityFromBPM, 50, 255); // Set pulsing to the new opacity\n\n      // Gradually decrease opacity over time\n      pulsing = lerp(pulsing, targetOpacity, 0.05);\n    }\n  }\n}\n\nfunction gotHands(results) {\n  hands = results;\n}\n\nfunction keyPressed() {\n  if (!fullscreen()) {\n    fullscreen(true);\n    fullscreenStarted = true; // Track if fullscreen has started\n    resizeCanvas(windowWidth, windowHeight);\n  }\n}\n//////////////////////////////////////////////\nfunction serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  if (inString) {\n    noFinger = inString.includes(\"No finger\");\n    if (!noFinger) {\n      // console.log(inString);\n      inData = split(inString, \",\");\n    }\n  }\n}\n\nfunction openPort() {\n  serial.open();\n  if (portButton) portButton.hide();\n}\n\n// This is a convenience for picking from available serial ports:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(() => serial.requestPort());\n}\n\n// Callback function for when handPose outputs data\nfunction gotHands(results) {\n  hands = results;\n}\n\nfunction keyPressed() {\n  if (!fullscreen()) {\n    fullscreen(true);\n    fullscreenStarted = true; // Track if fullscreen has started\n  }\n}\n\n\nfunction serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  if (inString) {\n    noFinger = inString.includes(\"No finger\");\n    if (!noFinger) {\n      // console.log(inString);\n      inData = split(inString, \",\");\n    }\n  }\n}\n\nfunction openPort() {\n  serial.open();\n  if (portButton) { // Only hide if portButton is defined\n    portButton.hide();\n  }\n}\n\n// This is a convenience for picking from available serial ports:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(() => serial.requestPort());\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67293f8b16237a6128bed533",
        "createdAt": "2024-11-04T22:04:40.291Z",
        "updatedAt": "2024-11-04T22:04:40.291Z",
        "id": "67293f8b16237a6128bed533"
      },
      {
        "name": "Circle.js",
        "content": "let pitches = [0.6853, 0.875, 1, 1.125, 1.359];\n\nclass Circle {\n  constructor(x, y, size) {\n    this.x = x;\n    this.y = y;\n    this.baseSize = size;\n    this.size = size;\n    this.color1 = 255; // Base color when hovering\n    this.color2 = 255;\n    this.color3 = 255;\n    this.life = 1; // Start fully opaque\n    this.fading = false;\n  }\n\n  display() {\n    // Manage fading\n    if (this.fading) {\n      this.life -= 10; // Decrease life if fading\n    } else {\n      if (this.life < 255) {\n        this.life += 3;\n      }\n      if (this.life > 255) this.life = 255; // Cap life to max 255\n    }\n\n    this.size = this.baseSize + sin(frameCount * 0.1) * 10;\n\n    // Draw outer glow effect\n    for (let i = 5; i > 0; i--) {\n      fill(this.color1, this.color2, this.color3, this.life / (i * 2)); // Adjust opacity for glow\n      noStroke();\n      circle(this.x, this.y, this.size + i * 15); // Increase radius for glow\n    }\n\n    // Draw main circle\n    fill(this.color1, this.color2, this.color3, this.life); // Use life for opacity\n    circle(this.x, this.y, this.size);\n  }\n\n  checkOver1() {\n    ///// for regular circles\n    if (!this.fading) {\n      this.fading = true; // Start fading when hovered over\n      this.color1 = 137;\n      this.color2 = 207;\n      this.color3 = 240;\n\n      playCount++;\n        if (playCount % 5 === 0) {\n            // Play the next laugh sound in order, cycling through the array\n            const laughIndex = Math.floor(playCount / 5) % laugh.length; // Get the index based on playCount\n            laugh[laughIndex].play(); // Play the laugh sound\n\n            // Reset playCount after playing the fifth laugh\n            if (laughIndex === laugh.length - 1) {\n                playCount = 0; // Reset the counter after playing the last laugh\n            }\n        } else {\n            // Change pitch for the other times\n            soundFile.rate(pitches[Math.floor(Math.random() * pitches.length)]);\n            soundFile.play();\n        }\n    }\n}\n  finished() {\n    return this.life < 0; // Return whether the circle should be removed\n  }\n\n  displayLine(nextCircle) {\n    stroke(255, 150); // Set line color and transparency\n    line(this.x, this.y, nextCircle.x, nextCircle.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67293f8b16237a6128bed52a",
        "createdAt": "2024-11-04T22:04:40.291Z",
        "updatedAt": "2024-11-04T22:04:40.291Z",
        "id": "67293f8b16237a6128bed52a"
      },
      {
        "name": "hand_left.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/65bd518b-ee22-41ea-9e1d-db072d6c0080.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67293f8b16237a6128bed52b",
        "createdAt": "2024-11-04T22:04:40.291Z",
        "updatedAt": "2024-11-04T22:04:40.291Z",
        "id": "67293f8b16237a6128bed52b"
      },
      {
        "name": "hand_point.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/40137763-a319-44c2-a286-3f86e7429dec.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67293f8b16237a6128bed52c",
        "createdAt": "2024-11-04T22:04:40.291Z",
        "updatedAt": "2024-11-04T22:04:40.291Z",
        "id": "67293f8b16237a6128bed52c"
      },
      {
        "name": "womb.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/cca9e038-da25-4b87-b6f9-e77619c6087a.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67293f8b16237a6128bed536",
        "createdAt": "2024-11-04T22:04:40.291Z",
        "updatedAt": "2024-11-04T22:04:40.291Z",
        "id": "67293f8b16237a6128bed536"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n  \n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67293f8b16237a6128bed534",
        "createdAt": "2024-11-04T22:04:40.291Z",
        "updatedAt": "2024-11-04T22:04:40.291Z",
        "id": "67293f8b16237a6128bed534"
      },
      {
        "name": "touch_sound.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/9b1ddd6c-6fb4-46ff-82ef-60935c80aff6.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67293f8b16237a6128bed535",
        "createdAt": "2024-11-04T22:04:40.291Z",
        "updatedAt": "2024-11-04T22:04:40.291Z",
        "id": "67293f8b16237a6128bed535"
      },
      {
        "name": "laugh 2.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/518002ff-e5e9-4a6d-b2d3-504d7bab5819.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67293f8b16237a6128bed52f",
        "createdAt": "2024-11-04T22:04:40.291Z",
        "updatedAt": "2024-11-04T22:04:40.291Z",
        "id": "67293f8b16237a6128bed52f"
      },
      {
        "name": "laugh 1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/c06f02ec-fc9a-4732-b3da-3a8b65fcf533.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67293f8b16237a6128bed52e",
        "createdAt": "2024-11-04T22:04:40.291Z",
        "updatedAt": "2024-11-04T22:04:40.291Z",
        "id": "67293f8b16237a6128bed52e"
      },
      {
        "name": "laugh 3.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/ac02e695-03cf-4076-afea-9a83961d8c4c.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67293f8b16237a6128bed530",
        "createdAt": "2024-11-04T22:04:40.291Z",
        "updatedAt": "2024-11-04T22:04:40.291Z",
        "id": "67293f8b16237a6128bed530"
      },
      {
        "name": "laugh 4.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/e425cf68-c426-4e91-8fa2-f40a90c7a49b.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67293f8b16237a6128bed531",
        "createdAt": "2024-11-04T22:04:40.291Z",
        "updatedAt": "2024-11-04T22:04:40.291Z",
        "id": "67293f8b16237a6128bed531"
      },
      {
        "name": "laugh 5.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/12890638-61b9-469f-8d3a-c6cf25d8003d.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67293f8b16237a6128bed532",
        "createdAt": "2024-11-04T22:04:40.291Z",
        "updatedAt": "2024-11-04T22:04:40.291Z",
        "id": "67293f8b16237a6128bed532"
      }
    ],
    "createdAt": "2024-11-04T21:41:32.364Z",
    "updatedAt": "2024-11-04T22:04:40.291Z",
    "id": "pVvgHT3Fl"
  },
  {
    "_id": "HenBcuUz4",
    "name": "ML5 project UTD UPTD with arduino another version copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "672945a8ce006fddb1afca4a",
          "672945a8ce006fddb1afca4b",
          "672945a8ce006fddb1afca4c",
          "672945a8ce006fddb1afca4d",
          "672945a8ce006fddb1afca4e",
          "672945a8ce006fddb1afca4f",
          "672945a8ce006fddb1afca50",
          "672945a8ce006fddb1afca51",
          "672945a8ce006fddb1afca52",
          "672945a8ce006fddb1afca53",
          "672945a8ce006fddb1afca54",
          "672945a8ce006fddb1afca55",
          "672945a8ce006fddb1afca56"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "672945a8ce006fddb1afca49",
        "createdAt": "2024-11-05T00:38:10.864Z",
        "updatedAt": "2024-11-05T00:38:10.864Z",
        "id": "672945a8ce006fddb1afca49"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ml5.js handPose Webcam Example</title>\n    \n    <!-- Load p5.js and its sound addon -->\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    \n    <!-- Load ml5.js -->\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    \n    <!-- Your custom scripts -->\n    <script src=\"laughs/extraScript.js\"></script>\n    <script src=\"sketch.js\"></script>\n    <script src=\"Circle.js\"></script>\n    \n    <!-- Optional: Your stylesheet -->\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  </head>\n  <body>\n  </body>\n</html>",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672945a8ce006fddb1afca4d",
        "createdAt": "2024-11-05T00:38:10.864Z",
        "updatedAt": "2024-11-05T00:38:10.864Z",
        "id": "672945a8ce006fddb1afca4d"
      },
      {
        "name": "sketch.js",
        "content": "let handPose;\nlet video;\nlet hands = [];\nlet painting;\nlet px = 0;\nlet py = 0;\nlet nextDrawTime;\nlet circles = [];\nlet womb;\nlet fullscreenStarted = false;\nlet soundFile;\nlet pitchShifter;\nlet imageOpacity = 50;\nlet laugh = [];\nlet playCount = 0;\nlet targetOpacity = 200; // Target opacity for decrease\nlet opacityIncrement = 200; // Increase opacity on heartbeat\nlet pulsing = 50;\n\n/////////////arduino side/////////////////\nconst askForPort = false; //true first time to pick port, then change to false\nlet serial;\nlet portButton;\nlet inData = [];\nlet outData;\nlet noFinger = true;\n\nlet bpmHistory = [];\nconst bpmWindowSize = 10; // Number of samples to average\nlet minBPM = 60; // Minimum BPM to consider for opacity changes\n\nfunction preload() {\n  handPose = ml5.handPose();\n\n  womb = loadImage(\"womb.png\");\n  soundFile = loadSound(\"touch_sound.mp3\");\n  \n    // Adjust this if you have a different number of files\n    laugh.push(loadSound(\"laugh 1.mp3\"), loadSound(\"laugh 2.mp3\"), loadSound(\"laugh 3.mp3\"), loadSound(\"laugh 4.mp3\"), loadSound(\"laugh 5.mp3\")); // Names should match the files in the folder\n  }\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  // painting = createGraphics(640, 480);\n\n  // painting.clear();\n\n  video = createCapture(VIDEO);\n  video.hide();\n  handPose.detectStart(video, gotHands);\n  serial = new p5.WebSerial();\n\n  // pitchShifter = new p5.PitchShift(); // Initialize pitch shifter after loading p5\n  // soundFile.disconnect(); // Ensure the sound is disconnected initially\n  // soundFile.connect(pitchShifter); // Connect sound file to pitch shifter\n\n  nextDrawTime = frameCount + int(random(60, 180));\n  \n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported Try Chrome \");\n  }\n  //first time you connect create button to identify port\n  if (askForPort) {\n    makePortButton();\n  } else {\n    serial.getPorts(); //skip the button use port from last time\n  }\n  serial.on(\"portavailable\", openPort);\n  serial.on(\"data\", serialEvent);\n  textSize(32);\n}\n\nfunction draw() {\n  resizeCanvas(windowWidth, windowHeight);\n\n  video.size(width, height);\n  imageMode(CENTER);\n  translate(video.width, 0); // Move to the right edge of the video\n  scale(-1, 1);\n  image(video, width / 2, height / 2, width - 230, height);\n  background(0);\n  // // tint(255, 10); \n  image(womb, width / 2 - 140 , height / 2, height, height);\n  stroke(8);\n  \n  fill(0, 0, 0, pulsing);\n  square(-width, -height, width * 10);  \n\n  for (let i = circles.length - 1; i >= 0; i--) {\n    let obj = circles[i];\n    obj.display();\n    // text(obj.x, width / 2, height / 2 - 50);\n    // text(obj.y, width / 2, height / 2);\n\n    if (obj.finished()) {\n      circles.splice(i, 1); // Remove the circle if it has faded out\n      nextDrawTime = frameCount + int(random(60, 180));\n    }\n  }\n\n  for (let i = 0; i < circles.length - 1; i++) {\n    circles[i].displayLine(circles[i + 1]);\n  }\n\n  if (frameCount === nextDrawTime) {\n    let newObj = new Circle(\n      random(width / 2 - height / 2 + 150, width / 2 + height / 2 - 150),\n      random(150, height - 150),\n      random(20, 30)\n    );\n    circles.push(newObj);\n  }\n\n  if (hands.length > 0) {\n    let hand = hands[0];\n    let index = hand.index_finger_tip; // Get the index finger tip\n    for (let i = 0; i < circles.length; i++) {\n      let obj = circles[i];\n      if (dist(obj.x, obj.y, index.x, index.y) < 40) {\n        obj.checkOver1();\n      }\n    }\n  }\n\n  if (inData.length > 0) {\n    //turn it into JSON\n    let asJSON = {};\n    for (let i = 0; i < inData.length; i++) {\n      let nameValuePair = inData[i].split(\"=\");\n      asJSON[nameValuePair[0].trim()] = int(nameValuePair[1]);\n    }\n    // text(JSON.stringify(asJSON), 0, 100);\n\n    if (asJSON.IR) {\n            // Assuming you have a way to convert IR data to BPM\n      let currentBPM = map(asJSON.IR, 80000, 95000, 60, 120); // Example mapping\n      bpmHistory.push(currentBPM);\n\n      // Keep only the most recent `bpmWindowSize` values\n      if (bpmHistory.length > bpmWindowSize) {\n        bpmHistory.shift();\n      }\n\n      // Calculate average BPM\n      let averageBPM = bpmHistory.reduce((sum, bpm) => sum + bpm, 0) / bpmHistory.length;\n\n      // Map the average BPM to pulsing opacity\n      let opacityFromBPM = map(averageBPM, minBPM, 120, 50, 255); // Map BPM to opacity range\n      pulsing = constrain(opacityFromBPM, 50, 255); // Set pulsing to the new opacity\n\n      // Gradually decrease opacity over time\n      pulsing = lerp(pulsing, targetOpacity, 0.05);\n    }\n  }\n}\n\nfunction gotHands(results) {\n  hands = results;\n}\n\nfunction keyPressed() {\n  if (!fullscreen()) {\n    fullscreen(true);\n    fullscreenStarted = true; // Track if fullscreen has started\n    resizeCanvas(windowWidth, windowHeight);\n  }\n}\n//////////////////////////////////////////////\nfunction serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  if (inString) {\n    noFinger = inString.includes(\"No finger\");\n    if (!noFinger) {\n      // console.log(inString);\n      inData = split(inString, \",\");\n    }\n  }\n}\n\nfunction openPort() {\n  serial.open();\n  if (portButton) portButton.hide();\n}\n\n// This is a convenience for picking from available serial ports:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(() => serial.requestPort());\n}\n\n// Callback function for when handPose outputs data\nfunction gotHands(results) {\n  hands = results;\n}\n\nfunction keyPressed() {\n  if (!fullscreen()) {\n    fullscreen(true);\n    fullscreenStarted = true; // Track if fullscreen has started\n  }\n}\n\n\nfunction serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  if (inString) {\n    noFinger = inString.includes(\"No finger\");\n    if (!noFinger) {\n      // console.log(inString);\n      inData = split(inString, \",\");\n    }\n  }\n}\n\nfunction openPort() {\n  serial.open();\n  if (portButton) { // Only hide if portButton is defined\n    portButton.hide();\n  }\n}\n\n// This is a convenience for picking from available serial ports:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(() => serial.requestPort());\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "672945a8ce006fddb1afca53",
        "createdAt": "2024-11-05T00:38:10.864Z",
        "updatedAt": "2024-11-05T00:38:10.864Z",
        "id": "672945a8ce006fddb1afca53"
      },
      {
        "name": "Circle.js",
        "content": "let pitches = [0.6853, 0.875, 1, 1.125, 1.359];\n\nclass Circle {\n  constructor(x, y, size) {\n    this.x = x;\n    this.y = y;\n    this.baseSize = size;\n    this.size = size;\n    this.color1 = 255; // Base color when hovering\n    this.color2 = 255;\n    this.color3 = 255;\n    this.life = 1; // Start fully opaque\n    this.fading = false;\n  }\n\n  display() {\n    // Manage fading\n    if (this.fading) {\n      this.life -= 10; // Decrease life if fading\n    } else {\n      if (this.life < 255) {\n        this.life += 3;\n      }\n      if (this.life > 255) this.life = 255; // Cap life to max 255\n    }\n\n    this.size = this.baseSize + sin(frameCount * 0.1) * 10;\n\n    // Draw outer glow effect\n    for (let i = 5; i > 0; i--) {\n      fill(this.color1, this.color2, this.color3, this.life / (i * 2)); // Adjust opacity for glow\n      noStroke();\n      circle(this.x, this.y, this.size + i * 15); // Increase radius for glow\n    }\n\n    // Draw main circle\n    fill(this.color1, this.color2, this.color3, this.life); // Use life for opacity\n    circle(this.x, this.y, this.size);\n  }\n\n  checkOver1() {\n    ///// for regular circles\n    if (!this.fading) {\n      this.fading = true; // Start fading when hovered over\n      this.color1 = 137;\n      this.color2 = 207;\n      this.color3 = 240;\n\n      playCount++;\n        if (playCount % 5 === 0) {\n            // Play the next laugh sound in order, cycling through the array\n            const laughIndex = Math.floor(playCount / 5) % laugh.length; // Get the index based on playCount\n            laugh[laughIndex].play(); // Play the laugh sound\n\n            // Reset playCount after playing the fifth laugh\n            if (laughIndex === laugh.length - 1) {\n                playCount = 0; // Reset the counter after playing the last laugh\n            }\n        } else {\n            // Change pitch for the other times\n            soundFile.rate(pitches[Math.floor(Math.random() * pitches.length)]);\n            soundFile.play();\n        }\n    }\n}\n  finished() {\n    return this.life < 0; // Return whether the circle should be removed\n  }\n\n  displayLine(nextCircle) {\n    stroke(255, 150); // Set line color and transparency\n    line(this.x, this.y, nextCircle.x, nextCircle.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672945a8ce006fddb1afca4a",
        "createdAt": "2024-11-05T00:38:10.864Z",
        "updatedAt": "2024-11-05T00:38:10.864Z",
        "id": "672945a8ce006fddb1afca4a"
      },
      {
        "name": "hand_left.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/051cb2f1-e7e8-442a-ab9b-64660facb237.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672945a8ce006fddb1afca4b",
        "createdAt": "2024-11-05T00:38:10.864Z",
        "updatedAt": "2024-11-05T00:38:10.864Z",
        "id": "672945a8ce006fddb1afca4b"
      },
      {
        "name": "hand_point.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/ab15061d-0a53-485f-8970-e82187fa7f62.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672945a8ce006fddb1afca4c",
        "createdAt": "2024-11-05T00:38:10.864Z",
        "updatedAt": "2024-11-05T00:38:10.864Z",
        "id": "672945a8ce006fddb1afca4c"
      },
      {
        "name": "womb.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/ecd439b1-d52b-46a8-92e0-a988d70d7047.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672945a8ce006fddb1afca56",
        "createdAt": "2024-11-05T00:38:10.864Z",
        "updatedAt": "2024-11-05T00:38:10.864Z",
        "id": "672945a8ce006fddb1afca56"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n  \n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672945a8ce006fddb1afca54",
        "createdAt": "2024-11-05T00:38:10.864Z",
        "updatedAt": "2024-11-05T00:38:10.864Z",
        "id": "672945a8ce006fddb1afca54"
      },
      {
        "name": "touch_sound.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/6b39d0ee-5051-450c-961e-7e68c812047e.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672945a8ce006fddb1afca55",
        "createdAt": "2024-11-05T00:38:10.864Z",
        "updatedAt": "2024-11-05T00:38:10.864Z",
        "id": "672945a8ce006fddb1afca55"
      },
      {
        "name": "laugh 2.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/17599e4e-2ca6-4858-a75e-5746cdfbedf1.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672945a8ce006fddb1afca4f",
        "createdAt": "2024-11-05T00:38:10.864Z",
        "updatedAt": "2024-11-05T00:38:10.864Z",
        "id": "672945a8ce006fddb1afca4f"
      },
      {
        "name": "laugh 1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/8432165a-07e3-40c3-b74f-31d0c05ec592.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672945a8ce006fddb1afca4e",
        "createdAt": "2024-11-05T00:38:10.864Z",
        "updatedAt": "2024-11-05T00:38:10.864Z",
        "id": "672945a8ce006fddb1afca4e"
      },
      {
        "name": "laugh 3.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/fd6c75be-d467-43f2-860e-e0265c1dd6cc.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672945a8ce006fddb1afca50",
        "createdAt": "2024-11-05T00:38:10.864Z",
        "updatedAt": "2024-11-05T00:38:10.864Z",
        "id": "672945a8ce006fddb1afca50"
      },
      {
        "name": "laugh 4.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/b460c388-7b38-4ad6-b4ed-0a7c392a02a5.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672945a8ce006fddb1afca51",
        "createdAt": "2024-11-05T00:38:10.864Z",
        "updatedAt": "2024-11-05T00:38:10.864Z",
        "id": "672945a8ce006fddb1afca51"
      },
      {
        "name": "laugh 5.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/600a6cbe-b1c3-4db1-b0f0-9971c8f31fe8.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672945a8ce006fddb1afca52",
        "createdAt": "2024-11-05T00:38:10.864Z",
        "updatedAt": "2024-11-05T00:38:10.864Z",
        "id": "672945a8ce006fddb1afca52"
      }
    ],
    "createdAt": "2024-11-04T22:07:37.704Z",
    "updatedAt": "2024-11-05T00:38:10.864Z",
    "id": "HenBcuUz4"
  },
  {
    "_id": "IYz4VaLHO",
    "name": "ML5 project UTD UPTD with arduino test",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6728648f2346c9efae4631c8",
          "6728648f2346c9efae4631cb",
          "6728648f2346c9efae4631cc",
          "6728648f2346c9efae4631cd",
          "6728648f2346c9efae4631ce",
          "6728648f2346c9efae4631cf",
          "6728648f2346c9efae4631d0",
          "6728648f2346c9efae4631d1",
          "6728648f2346c9efae4631d2",
          "6728648f2346c9efae4631d3",
          "6728648f2346c9efae4631d4"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6728648f2346c9efae4631c7",
        "createdAt": "2024-11-04T21:07:08.683Z",
        "updatedAt": "2024-11-04T21:07:08.683Z",
        "id": "6728648f2346c9efae4631c7"
      },
      {
        "name": "index.html",
        "content": "<!--\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\n  Learn more about the ml5.js project: https://ml5js.org/\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\n\n  This example demonstrates hand tracking on live video through ml5.handPose.\n-->\n\n\n<!DOCTYPE html>\n<html lang=\"en\">\n  \n  <head>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    \n    \n    <meta charset=\"utf-8\" />\n    <title>ml5.js handPose Webcam Example</title>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    <script src=\"laughs/extraScript.js\"></script>\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  \n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n    <script src=\"Circle.js\"></script>\n  </body>\n</html>\n\n\n\n<!-- <!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ml5.js handPose Webcam Example</title>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n\n\n    <script src=\"laughs/extraScript.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n    <script src=\"Circle.js\"></script>\n  </body>\n</html>\n -->",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6728648f2346c9efae4631cb",
        "createdAt": "2024-11-04T21:07:08.683Z",
        "updatedAt": "2024-11-04T21:07:08.683Z",
        "id": "6728648f2346c9efae4631cb"
      },
      {
        "name": "sketch.js",
        "content": "let handPose;\nlet video;\nlet hands = [];\nlet painting;\nlet px = 0;\nlet py = 0;\nlet nextDrawTime;\nlet circles = [];\nlet womb;\nlet fullscreenStarted = false;\nlet soundFile;\nlet pitchShifter;\nlet pulsing = 50;\nlet laugh = [];\nlet playCount = 0;\nlet targetOpacity = 200; // Target opacity for decrease\nlet opacityIncrement = 200; // Increase opacity on heartbeat\n\n/////////////arduino side/////////////////\nconst askForPort = true; //true first time to pick port, then change to false\nconst serial = new p5.WebSerial();\nlet portButton;\nlet inData = [];\nlet outData;\nlet noFinger = true;\n\nlet bpmHistory = [];\nconst bpmWindowSize = 10; // Number of samples to average\nlet minBPM = 60; // Minimum BPM to consider for opacity changes\n\nfunction preload() {\n  handPose = ml5.handPose();\n  womb = loadImage(\"womb.png\");\n  soundFile = loadSound(\"touch_sound.mp3\");\n  laugh.push(\n    loadSound(\"laugh 1.mp3\"),\n    loadSound(\"laugh 2.mp3\"),\n    loadSound(\"laugh 3.mp3\"),\n    loadSound(\"laugh 4.mp3\"),\n    loadSound(\"laugh 5.mp3\")\n  ); // Names should match the files in the folder\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  video = createCapture(VIDEO);\n  video.hide();\n  handPose.detectStart(video, gotHands);\n  nextDrawTime = frameCount + int(random(60, 180));\n\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported Try Chrome \");\n  }\n  //first time you connect create button to identify port\n  if (askForPort) {\n    makePortButton();\n  } else {\n    serial.getPorts(); //skip the button use port from last time\n  }\n  serial.on(\"portavailable\", openPort);\n  serial.on(\"data\", serialEvent);\n  textSize(32);\n}\n\nfunction draw() {\n  resizeCanvas(windowWidth, windowHeight);\n  video.size(width, height);\n  imageMode(CENTER);\n  translate(video.width, 0); // Move to the right edge of the video\n  scale(-1, 1);\n  image(video, width / 2, height / 2, width - 230, height);\n  background(0);\n\n  \n  image(womb, - width / 2 - 140, height / 2, height - 80, height - 80);\n  \n  fill(0, 0, 0, pulsing);\n  square(-width, -height, width * 10);  \n  stroke(8);\n\n  for (let i = circles.length - 1; i >= 0; i--) {\n    let obj = circles[i];\n    obj.display();\n    // text(obj.x, width / 2, height / 2 - 50);\n    // text(obj.y, width / 2, height / 2);\n\n    if (obj.finished()) {\n      circles.splice(i, 1); // Remove the circle if it has faded out\n      nextDrawTime = frameCount + int(random(60, 180));\n    }\n  }\n\n  for (let i = 0; i < circles.length - 1; i++) {\n    circles[i].displayLine(circles[i + 1]);\n  }\n\n  if (frameCount === nextDrawTime) {\n    let newObj = new Circle(\n      random(width / 2 - height / 2 + 120, width / 2 + height / 2 - 120),\n      random(120, height - 120),\n      random(20, 30)\n    );\n    circles.push(newObj);\n  }\n\n  if (hands.length > 0) {\n    let hand = hands[0];\n    let index = hand.index_finger_tip; // Get the index finger tip\n    for (let i = 0; i < circles.length; i++) {\n      let obj = circles[i];\n      if (dist(obj.x, obj.y, index.x, index.y) < 40) {\n        obj.checkOver1();\n      }\n    }\n  }\n  if (noFinger) {\n    text(\"NO FINGER\", 10, 32);\n    return;\n  }\n  if (inData.length > 0) {\n    console.log(inData);\n    //turn it into JSON\n    let asJSON = {};\n    for (let i = 0; i < inData.length; i++) {\n      let nameValuePair = inData[i].split(\"=\");\n      asJSON[nameValuePair[0].trim()] = int(nameValuePair[1]);\n    }\n    text(JSON.stringify(asJSON), 0, 100);\n\n    if (asJSON.IR) {\n            // Assuming you have a way to convert IR data to BPM\n      let currentBPM = map(asJSON.IR, 80000, 95000, 60, 120); // Example mapping\n      bpmHistory.push(currentBPM);\n\n      // Keep only the most recent `bpmWindowSize` values\n      if (bpmHistory.length > bpmWindowSize) {\n        bpmHistory.shift();\n      }\n\n      // Calculate average BPM\n      let averageBPM = bpmHistory.reduce((sum, bpm) => sum + bpm, 0) / bpmHistory.length;\n\n      // Map the average BPM to pulsing opacity\n      let opacityFromBPM = map(averageBPM, minBPM, 120, 50, 255); // Map BPM to opacity range\n      pulsing = constrain(opacityFromBPM, 50, 255); // Set pulsing to the new opacity\n\n      // Gradually decrease opacity over time\n      pulsing = lerp(pulsing, targetOpacity, 0.05);\n    }\n  }\n}\n\nfunction gotHands(results) {\n  hands = results;\n}\n\nfunction keyPressed() {\n  if (!fullscreen()) {\n    fullscreen(true);\n    fullscreenStarted = true; // Track if fullscreen has started\n    resizeCanvas(windowWidth, windowHeight);\n  }\n}\n//////////////////////////////////////////////\nfunction serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  if (inString) {\n    noFinger = inString.includes(\"No finger\");\n    if (!noFinger) {\n      // console.log(inString);\n      inData = split(inString, \",\");\n    }\n  }\n}\n\nfunction openPort() {\n  serial.open();\n  if (portButton) portButton.hide();\n}\n\n// This is a convenience for picking from available serial ports:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(() => serial.requestPort());\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6728648f2346c9efae4631d1",
        "createdAt": "2024-11-04T21:07:08.683Z",
        "updatedAt": "2024-11-04T21:07:08.683Z",
        "id": "6728648f2346c9efae4631d1"
      },
      {
        "name": "Circle.js",
        "content": "let pitches = [0.6853, 0.875, 1, 1.125, 1.359];\n\nclass Circle {\n  constructor(x, y, size) {\n    this.x = x;\n    this.y = y;\n    this.baseSize = size;\n    this.size = size;\n    this.color1 = 255; // Base color when hovering\n    this.color2 = 255;\n    this.color3 = 255;\n    this.life = 1; // Start fully opaque\n    this.fading = false;\n  }\n\n  display() {\n    // Manage fading\n    if (this.fading) {\n      this.life -= 10; // Decrease life if fading\n    } else {\n      if (this.life < 255) {\n        this.life += 3;\n      }\n      if (this.life > 255) this.life = 255; // Cap life to max 255\n    }\n\n    this.size = this.baseSize + sin(frameCount * 0.1) * 10;\n\n    // Draw outer glow effect\n    for (let i = 5; i > 0; i--) {\n      fill(this.color1, this.color2, this.color3, this.life / (i * 2)); // Adjust opacity for glow\n      noStroke();\n      circle(this.x, this.y, this.size + i * 15); // Increase radius for glow\n    }\n\n    // Draw main circle\n    fill(this.color1, this.color2, this.color3, this.life); // Use life for opacity\n    circle(this.x, this.y, this.size);\n  }\n\n  checkOver1() {\n    ///// for regular circles\n    if (!this.fading) {\n      this.fading = true; // Start fading when hovered over\n      this.color1 = 137;\n      this.color2 = 207;\n      this.color3 = 240;\n\n      playCount++;\n        if (playCount % 5 === 0) {\n            // Play the next laugh sound in order, cycling through the array\n            const laughIndex = Math.floor(playCount / 5) % laugh.length; // Get the index based on playCount\n            laugh[laughIndex].play(); // Play the laugh sound\n\n            // Reset playCount after playing the fifth laugh\n            if (laughIndex === laugh.length - 1) {\n                playCount = 0; // Reset the counter after playing the last laugh\n            }\n        } else {\n            // Change pitch for the other times\n            soundFile.rate(pitches[Math.floor(Math.random() * pitches.length)]);\n            soundFile.play();\n        }\n    }\n}\n  finished() {\n    return this.life < 0; // Return whether the circle should be removed\n  }\n\n  displayLine(nextCircle) {\n    stroke(255, 150); // Set line color and transparency\n    line(this.x, this.y, nextCircle.x, nextCircle.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6728648f2346c9efae4631c8",
        "createdAt": "2024-11-04T21:07:08.683Z",
        "updatedAt": "2024-11-04T21:07:08.683Z",
        "id": "6728648f2346c9efae4631c8"
      },
      {
        "name": "womb.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/8595c36f-e4b4-4d6c-94c7-4a3b50fddec6.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6728648f2346c9efae4631d4",
        "createdAt": "2024-11-04T21:07:08.683Z",
        "updatedAt": "2024-11-04T21:07:08.683Z",
        "id": "6728648f2346c9efae4631d4"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n  \n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6728648f2346c9efae4631d2",
        "createdAt": "2024-11-04T21:07:08.683Z",
        "updatedAt": "2024-11-04T21:07:08.683Z",
        "id": "6728648f2346c9efae4631d2"
      },
      {
        "name": "touch_sound.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/3309429b-24fc-4131-b0bb-cec83248bba0.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6728648f2346c9efae4631d3",
        "createdAt": "2024-11-04T21:07:08.683Z",
        "updatedAt": "2024-11-04T21:07:08.683Z",
        "id": "6728648f2346c9efae4631d3"
      },
      {
        "name": "laugh 2.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/caa5eee7-2d47-4b82-96f0-49cc5637939a.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6728648f2346c9efae4631cd",
        "createdAt": "2024-11-04T21:07:08.683Z",
        "updatedAt": "2024-11-04T21:07:08.683Z",
        "id": "6728648f2346c9efae4631cd"
      },
      {
        "name": "laugh 1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/08c152e9-4575-47cf-95a4-96676edd2a0f.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6728648f2346c9efae4631cc",
        "createdAt": "2024-11-04T21:07:08.683Z",
        "updatedAt": "2024-11-04T21:07:08.683Z",
        "id": "6728648f2346c9efae4631cc"
      },
      {
        "name": "laugh 3.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/b3bdc0e8-056a-4d18-a848-adcaba3c34b2.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6728648f2346c9efae4631ce",
        "createdAt": "2024-11-04T21:07:08.683Z",
        "updatedAt": "2024-11-04T21:07:08.683Z",
        "id": "6728648f2346c9efae4631ce"
      },
      {
        "name": "laugh 4.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/b44bba49-1489-4669-8782-ace2e7e005ad.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6728648f2346c9efae4631cf",
        "createdAt": "2024-11-04T21:07:08.683Z",
        "updatedAt": "2024-11-04T21:07:08.683Z",
        "id": "6728648f2346c9efae4631cf"
      },
      {
        "name": "laugh 5.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/bc83f414-b95e-4f77-91e1-25f149c354fa.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6728648f2346c9efae4631d0",
        "createdAt": "2024-11-04T21:07:08.683Z",
        "updatedAt": "2024-11-04T21:07:08.683Z",
        "id": "6728648f2346c9efae4631d0"
      }
    ],
    "createdAt": "2024-11-04T06:07:10.674Z",
    "updatedAt": "2024-11-04T21:07:08.683Z",
    "id": "IYz4VaLHO"
  },
  {
    "_id": "j9xy1kQcw",
    "name": "ML5 project UTD UPTD with arduino test copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67292405adf4f26b0b5d936c",
          "67292405adf4f26b0b5d936d",
          "67292405adf4f26b0b5d936e",
          "67292405adf4f26b0b5d936f",
          "67292405adf4f26b0b5d9370",
          "67292405adf4f26b0b5d9371",
          "67292405adf4f26b0b5d9372",
          "67292405adf4f26b0b5d9373",
          "67292405adf4f26b0b5d9374",
          "67292405adf4f26b0b5d9375",
          "67292405adf4f26b0b5d9376"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67292405adf4f26b0b5d936b",
        "createdAt": "2024-11-04T19:37:45.767Z",
        "updatedAt": "2024-11-04T19:37:45.767Z",
        "id": "67292405adf4f26b0b5d936b"
      },
      {
        "name": "index.html",
        "content": "<!--\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\n  Learn more about the ml5.js project: https://ml5js.org/\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\n\n  This example demonstrates hand tracking on live video through ml5.handPose.\n-->\n\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ml5.js handPose Webcam Example</title>\n    <script src=\"https://unpkg.com/p5.webserial\"></script>\n        <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <script src=\"laughs/extraScript.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.js\"></script>\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n    <script src=\"Circle.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67292405adf4f26b0b5d936d",
        "createdAt": "2024-11-04T19:37:45.767Z",
        "updatedAt": "2024-11-04T19:37:45.767Z",
        "id": "67292405adf4f26b0b5d936d"
      },
      {
        "name": "sketch.js",
        "content": "let handPose;\nlet video;\nlet hands = [];\nlet painting;\nlet px = 0;\nlet py = 0;\nlet nextDrawTime;\nlet circles = [];\nlet womb;\nlet fullscreenStarted = false;\nlet soundFile;\nlet pitchShifter;\nlet imageOpacity = 50;\nlet laugh = [];\nlet playCount = 0;\n\n/////////////arduino side/////////////////\nconst askForPort = false; //true first time to pick port, then change to false\nconst serial = new p5.WebSerial();\nlet portButton;\nlet inData = []; \nlet outData  ;\nlet noFinger = true; \n\n\nfunction preload() {\n  handPose = ml5.handPose();\n  particleImage = loadImage(\"hand_point.png\");\n  loadImage(\"hand_left.png\");\n  womb = loadImage(\"womb.png\");\n  soundFile = loadSound(\"touch_sound.mp3\");\n\n  laugh.push(\n    loadSound(\"laugh 1.mp3\"),\n    loadSound(\"laugh 2.mp3\"),\n    loadSound(\"laugh 3.mp3\"),\n    loadSound(\"laugh 4.mp3\"),\n    loadSound(\"laugh 5.mp3\")\n  ); // Names should match the files in the folder\n}\n\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported Try Chrome \");\n  }\n  //first time you connect create button to identify port\n  if (askForPort) {\n    makePortButton();\n  } else {\n    serial.getPorts(); //skip the button use port from last time\n  }\n  serial.on(\"portavailable\", openPort);\n  serial.on(\"data\", serialEvent);\n  textSize(32);\n  \n  \n  video = createCapture(VIDEO);\n  video.hide();\n  handPose.detectStart(video, gotHands);\n  nextDrawTime = frameCount + int(random(60, 180));\n}\n\nfunction draw() {\n  resizeCanvas(windowWidth, windowHeight);\n\n  video.size(width, height);\n  imageMode(CENTER);\n  translate(video.width, 0); // Move to the right edge of the video\n  scale(-1, 1);\n  image(video, width / 2, height / 2, width - 230, height);\n  background(0);\n\n  //////////////////arduino controlling opacity//////////////\n  ///////////////////////////////////////////////////////////\n  if (noFinger) {\n    console.log(\"NO FINGER\");\n    return;\n  }\n  if (inData.length > 0) {\n    //turn it into JSON\n    let asJSON = {};\n    for (let i = 0; i < inData.length; i++) {\n      let nameValuePair = inData[i].split(\"=\");\n      asJSON[nameValuePair[0].trim()] = int(nameValuePair[1]);\n    }\n    // text(JSON.stringify(asJSON), 0,100);\n    if (asJSON.IR) {\n      let prepulsing = (asJSON.IR - 80000) / 7;\n      pulsing = map(prepulsing, 85000, 100000, 50, 255);\n      pulsing = constrain(pulsing, 50, 255);\n    }\n  }\n\n  // let pulsingheart = map(pulsing, 0, )\n  /////////////////////////end of arduino///////////////////////////\n  tint(255, pulsing);\n  image(womb, width / 2 - 140, height / 2, height - 80, height - 80);\n  stroke(8);\n\n  for (let i = circles.length - 1; i >= 0; i--) {\n    let obj = circles[i];\n    obj.display();\n    // text(obj.x, width / 2, height / 2 - 50);\n    // text(obj.y, width / 2, height / 2);\n\n    if (obj.finished()) {\n      circles.splice(i, 1); // Remove the circle if it has faded out\n      nextDrawTime = frameCount + int(random(60, 180));\n    }\n  }\n\n  for (let i = 0; i < circles.length - 1; i++) {\n    circles[i].displayLine(circles[i + 1]);\n  }\n\n  if (frameCount === nextDrawTime) {\n    let newObj = new Circle(\n      random(width / 2 - height / 2 + 120, width / 2 + height / 2 - 120),\n      random(120, height - 120),\n      random(20, 30)\n    );\n    circles.push(newObj);\n  }\n\n  if (hands.length > 0) {\n    let hand = hands[0];\n    let index = hand.index_finger_tip; // Get the index finger tip\n    for (let i = 0; i < circles.length; i++) {\n      let obj = circles[i];\n      // text(index.x, width / 2 + 200, height / 2 - 50);\n      // text(index.y, width / 2 + 200, height / 2);\n      // let ?????\n      // let zDifference = abs(this.z - indexZ);\n      if (dist(obj.x, obj.y, index.x, index.y) < 40) {\n        obj.checkOver1();\n      }\n    }\n  }\n  // filter(BLUR, 3);\n}\n\n// Callback function for when handPose outputs data\nfunction gotHands(results) {\n  hands = results;\n}\n\nfunction keyPressed() {\n  if (!fullscreen()) {\n    fullscreen(true);\n    fullscreenStarted = true; // Track if fullscreen has started\n  }\n}\n\n//////////////////////////////////////////////\nfunction serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  if (inString) {\n    noFinger = inString.includes(\"No finger\");\n    if (!noFinger) {\n      //console.log(inString);\n      inData = split(inString, \",\");\n    }\n  }\n}\n\nfunction openPort() {\n  serial.open();\n  if (portButton) portButton.hide();\n}\n\n// This is a convenience for picking from available serial ports:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(() => serial.requestPort());\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67292405adf4f26b0b5d9373",
        "createdAt": "2024-11-04T19:37:45.767Z",
        "updatedAt": "2024-11-04T19:37:45.767Z",
        "id": "67292405adf4f26b0b5d9373"
      },
      {
        "name": "Circle.js",
        "content": "let pitches = [0.6853, 0.875, 1, 1.125, 1.359];\n\nclass Circle {\n  constructor(x, y, size) {\n    this.x = x;\n    this.y = y;\n    this.baseSize = size;\n    this.size = size;\n    this.color1 = 255; // Base color when hovering\n    this.color2 = 255;\n    this.color3 = 255;\n    this.life = 1; // Start fully opaque\n    this.fading = false;\n  }\n\n  display() {\n    // Manage fading\n    if (this.fading) {\n      this.life -= 10; // Decrease life if fading\n    } else {\n      if (this.life < 255) {\n        this.life += 3;\n      }\n      if (this.life > 255) this.life = 255; // Cap life to max 255\n    }\n\n    this.size = this.baseSize + sin(frameCount * 0.1) * 10;\n\n    // Draw outer glow effect\n    for (let i = 5; i > 0; i--) {\n      fill(this.color1, this.color2, this.color3, this.life / (i * 2)); // Adjust opacity for glow\n      noStroke();\n      circle(this.x, this.y, this.size + i * 15); // Increase radius for glow\n    }\n\n    // Draw main circle\n    fill(this.color1, this.color2, this.color3, this.life); // Use life for opacity\n    circle(this.x, this.y, this.size);\n  }\n\n  checkOver1() {\n    ///// for regular circles\n    if (!this.fading) {\n      this.fading = true; // Start fading when hovered over\n      this.color1 = 137;\n      this.color2 = 207;\n      this.color3 = 240;\n\n      playCount++;\n        if (playCount % 5 === 0) {\n            // Play the next laugh sound in order, cycling through the array\n            const laughIndex = Math.floor(playCount / 5) % laugh.length; // Get the index based on playCount\n            laugh[laughIndex].play(); // Play the laugh sound\n\n            // Reset playCount after playing the fifth laugh\n            if (laughIndex === laugh.length - 1) {\n                playCount = 0; // Reset the counter after playing the last laugh\n            }\n        } else {\n            // Change pitch for the other times\n            soundFile.rate(pitches[Math.floor(Math.random() * pitches.length)]);\n            soundFile.play();\n        }\n    }\n}\n  finished() {\n    return this.life < 0; // Return whether the circle should be removed\n  }\n\n  displayLine(nextCircle) {\n    stroke(255, 150); // Set line color and transparency\n    line(this.x, this.y, nextCircle.x, nextCircle.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67292405adf4f26b0b5d936c",
        "createdAt": "2024-11-04T19:37:45.767Z",
        "updatedAt": "2024-11-04T19:37:45.767Z",
        "id": "67292405adf4f26b0b5d936c"
      },
      {
        "name": "womb.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/b8228fef-2fda-44b0-97d3-038d6bc17700.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67292405adf4f26b0b5d9376",
        "createdAt": "2024-11-04T19:37:45.767Z",
        "updatedAt": "2024-11-04T19:37:45.767Z",
        "id": "67292405adf4f26b0b5d9376"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n  \n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67292405adf4f26b0b5d9374",
        "createdAt": "2024-11-04T19:37:45.767Z",
        "updatedAt": "2024-11-04T19:37:45.767Z",
        "id": "67292405adf4f26b0b5d9374"
      },
      {
        "name": "touch_sound.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/d625542a-ee25-4b4d-9104-ab8b68f0549f.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67292405adf4f26b0b5d9375",
        "createdAt": "2024-11-04T19:37:45.767Z",
        "updatedAt": "2024-11-04T19:37:45.767Z",
        "id": "67292405adf4f26b0b5d9375"
      },
      {
        "name": "laugh 2.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/b26939d8-801d-4f9b-87ca-d5dccd7551b1.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67292405adf4f26b0b5d936f",
        "createdAt": "2024-11-04T19:37:45.767Z",
        "updatedAt": "2024-11-04T19:37:45.767Z",
        "id": "67292405adf4f26b0b5d936f"
      },
      {
        "name": "laugh 1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/5fee420c-bed7-4337-b07c-a92bee441c2b.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67292405adf4f26b0b5d936e",
        "createdAt": "2024-11-04T19:37:45.767Z",
        "updatedAt": "2024-11-04T19:37:45.767Z",
        "id": "67292405adf4f26b0b5d936e"
      },
      {
        "name": "laugh 3.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/40d9a5eb-b40b-4ef8-b453-58042c060b20.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67292405adf4f26b0b5d9370",
        "createdAt": "2024-11-04T19:37:45.767Z",
        "updatedAt": "2024-11-04T19:37:45.767Z",
        "id": "67292405adf4f26b0b5d9370"
      },
      {
        "name": "laugh 4.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/87b64fd6-303a-4da1-bb21-c0f4a2f9114f.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67292405adf4f26b0b5d9371",
        "createdAt": "2024-11-04T19:37:45.767Z",
        "updatedAt": "2024-11-04T19:37:45.767Z",
        "id": "67292405adf4f26b0b5d9371"
      },
      {
        "name": "laugh 5.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/eb809ec3-da49-45b9-97db-75f863725240.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67292405adf4f26b0b5d9372",
        "createdAt": "2024-11-04T19:37:45.767Z",
        "updatedAt": "2024-11-04T19:37:45.767Z",
        "id": "67292405adf4f26b0b5d9372"
      }
    ],
    "createdAt": "2024-11-04T19:44:07.470Z",
    "updatedAt": "2024-11-04T19:44:07.470Z",
    "id": "j9xy1kQcw"
  },
  {
    "_id": "dppywR62P",
    "name": "ML5 project UTD UPTD with arduino test hopefully final",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6729377fcfb9b0823d9ec48a",
          "6729377fcfb9b0823d9ec48b",
          "6729377fcfb9b0823d9ec48c",
          "6729377fcfb9b0823d9ec48d",
          "6729377fcfb9b0823d9ec48e",
          "6729377fcfb9b0823d9ec48f",
          "6729377fcfb9b0823d9ec490",
          "6729377fcfb9b0823d9ec491",
          "6729377fcfb9b0823d9ec492",
          "6729377fcfb9b0823d9ec493",
          "6729377fcfb9b0823d9ec494"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6729377fcfb9b0823d9ec489",
        "createdAt": "2024-11-04T21:15:54.465Z",
        "updatedAt": "2024-11-04T21:15:54.465Z",
        "id": "6729377fcfb9b0823d9ec489"
      },
      {
        "name": "index.html",
        "content": "<!--\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\n  Learn more about the ml5.js project: https://ml5js.org/\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\n\n  This example demonstrates hand tracking on live video through ml5.handPose.\n-->\n\n\n<!DOCTYPE html>\n<html lang=\"en\">\n  \n  <head>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    \n    \n    <meta charset=\"utf-8\" />\n    <title>ml5.js handPose Webcam Example</title>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    <script src=\"laughs/extraScript.js\"></script>\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  \n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n    <script src=\"Circle.js\"></script>\n  </body>\n</html>\n\n\n\n<!-- <!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ml5.js handPose Webcam Example</title>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n\n\n    <script src=\"laughs/extraScript.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n    <script src=\"Circle.js\"></script>\n  </body>\n</html>\n -->",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6729377fcfb9b0823d9ec48b",
        "createdAt": "2024-11-04T21:15:54.465Z",
        "updatedAt": "2024-11-04T21:15:54.465Z",
        "id": "6729377fcfb9b0823d9ec48b"
      },
      {
        "name": "sketch.js",
        "content": "let handPose;\nlet video;\nlet hands = [];\nlet painting;\nlet px = 0;\nlet py = 0;\nlet nextDrawTime;\nlet circles = [];\nlet womb;\nlet fullscreenStarted = false;\nlet soundFile;\nlet pitchShifter;\nlet pulsing = 50;\nlet laugh = [];\nlet playCount = 0;\nlet targetOpacity = 200; // Target opacity for decrease\nlet opacityIncrement = 200; // Increase opacity on heartbeat\n\n/////////////arduino side/////////////////\nconst askForPort = true; //true first time to pick port, then change to false\nconst serial = new p5.WebSerial();\nlet portButton;\nlet inData = [];\nlet outData;\nlet noFinger = true;\n\nlet bpmHistory = [];\nconst bpmWindowSize = 10; // Number of samples to average\nlet minBPM = 60; // Minimum BPM to consider for opacity changes\n\nfunction preload() {\n  handPose = ml5.handPose();\n  womb = loadImage(\"womb.png\");\n  soundFile = loadSound(\"touch_sound.mp3\");\n  laugh.push(\n    loadSound(\"laugh 1.mp3\"),\n    loadSound(\"laugh 2.mp3\"),\n    loadSound(\"laugh 3.mp3\"),\n    loadSound(\"laugh 4.mp3\"),\n    loadSound(\"laugh 5.mp3\")\n  ); // Names should match the files in the folder\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  video = createCapture(VIDEO);\n  video.hide();\n  handPose.detectStart(video, gotHands);\n  nextDrawTime = frameCount + int(random(60, 180));\n\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported Try Chrome \");\n  }\n  //first time you connect create button to identify port\n  if (askForPort) {\n    makePortButton();\n  } else {\n    serial.getPorts(); //skip the button use port from last time\n  }\n  serial.on(\"portavailable\", openPort);\n  serial.on(\"data\", serialEvent);\n  textSize(32);\n}\n\nfunction draw() {\n  resizeCanvas(windowWidth, windowHeight);\n  video.size(width, height);\n  imageMode(CENTER);\n  // translate(video.width, 0); // Move to the right edge of the video\n  scale(-1, 1);\n  image(video, width / 2, height / 2, width - 230, height);\n  // background(0);\n\n  \n  image(womb, - width / 2 - 140, height / 2, height - 80, height - 80);\n  \n  fill(0, 0, 0, pulsing);\n  square(-width, -height, width * 10);  \n  stroke(8);\n\n  for (let i = circles.length - 1; i >= 0; i--) {\n    let obj = circles[i];\n    obj.display();\n    // text(obj.x, width / 2, height / 2 - 50);\n    // text(obj.y, width / 2, height / 2);\n\n    if (obj.finished()) {\n      circles.splice(i, 1); // Remove the circle if it has faded out\n      nextDrawTime = frameCount + int(random(60, 180));\n    }\n  }\n\n  for (let i = 0; i < circles.length - 1; i++) {\n    circles[i].displayLine(circles[i + 1]);\n  }\n\n  if (frameCount === nextDrawTime) {\n    let newObj = new Circle(\n      random(- width / 2 - height / 2 + 120, - width / 2 + height / 2 - 120),\n      random(120, height - 120),\n      random(20, 30)\n    );\n    circles.push(newObj);\n  }\n\n  if (hands.length > 0) {\n    let hand = hands[0];\n    let index = hand.index_finger_tip; // Get the index finger tip\n    for (let i = 0; i < circles.length; i++) {\n      let obj = circles[i];\n      if (dist(obj.x, obj.y, index.x, index.y) < 40) {\n        obj.checkOver1();\n      }\n    }\n  }\n  if (noFinger) {\n    text(\"NO FINGER\", 10, 32);\n    return;\n  }\n  if (inData.length > 0) {\n    console.log(inData);\n    //turn it into JSON\n    let asJSON = {};\n    for (let i = 0; i < inData.length; i++) {\n      let nameValuePair = inData[i].split(\"=\");\n      asJSON[nameValuePair[0].trim()] = int(nameValuePair[1]);\n    }\n    text(JSON.stringify(asJSON), 0, 100);\n\n    if (asJSON.IR) {\n            // Assuming you have a way to convert IR data to BPM\n      let currentBPM = map(asJSON.IR, 80000, 95000, 60, 120); // Example mapping\n      bpmHistory.push(currentBPM);\n\n      // Keep only the most recent `bpmWindowSize` values\n      if (bpmHistory.length > bpmWindowSize) {\n        bpmHistory.shift();\n      }\n\n      // Calculate average BPM\n      let averageBPM = bpmHistory.reduce((sum, bpm) => sum + bpm, 0) / bpmHistory.length;\n\n      // Map the average BPM to pulsing opacity\n      let opacityFromBPM = map(averageBPM, minBPM, 120, 50, 255); // Map BPM to opacity range\n      pulsing = constrain(opacityFromBPM, 50, 255); // Set pulsing to the new opacity\n\n      // Gradually decrease opacity over time\n      pulsing = lerp(pulsing, targetOpacity, 0.05);\n    }\n  }\n}\n\nfunction gotHands(results) {\n  hands = results;\n}\n\nfunction keyPressed() {\n  if (!fullscreen()) {\n    fullscreen(true);\n    fullscreenStarted = true; // Track if fullscreen has started\n    resizeCanvas(windowWidth, windowHeight);\n  }\n}\n//////////////////////////////////////////////\nfunction serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  if (inString) {\n    noFinger = inString.includes(\"No finger\");\n    if (!noFinger) {\n      // console.log(inString);\n      inData = split(inString, \",\");\n    }\n  }\n}\n\nfunction openPort() {\n  serial.open();\n  if (portButton) portButton.hide();\n}\n\n// This is a convenience for picking from available serial ports:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(() => serial.requestPort());\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6729377fcfb9b0823d9ec491",
        "createdAt": "2024-11-04T21:15:54.465Z",
        "updatedAt": "2024-11-04T21:15:54.465Z",
        "id": "6729377fcfb9b0823d9ec491"
      },
      {
        "name": "Circle.js",
        "content": "let pitches = [0.6853, 0.875, 1, 1.125, 1.359];\n\nclass Circle {\n  constructor(x, y, size) {\n    this.x = x;\n    this.y = y;\n    this.baseSize = size;\n    this.size = size;\n    this.color1 = 255; // Base color when hovering\n    this.color2 = 255;\n    this.color3 = 255;\n    this.life = 1; // Start fully opaque\n    this.fading = false;\n  }\n\n  display() {\n    // Manage fading\n    if (this.fading) {\n      this.life -= 10; // Decrease life if fading\n    } else {\n      if (this.life < 255) {\n        this.life += 3;\n      }\n      if (this.life > 255) this.life = 255; // Cap life to max 255\n    }\n\n    this.size = this.baseSize + sin(frameCount * 0.1) * 10;\n\n    // Draw outer glow effect\n    for (let i = 5; i > 0; i--) {\n      fill(this.color1, this.color2, this.color3, this.life / (i * 2)); // Adjust opacity for glow\n      noStroke();\n      circle(this.x, this.y, this.size + i * 15); // Increase radius for glow\n    }\n\n    // Draw main circle\n    fill(this.color1, this.color2, this.color3, this.life); // Use life for opacity\n    circle(this.x, this.y, this.size);\n  }\n\n  checkOver1() {\n    ///// for regular circles\n    if (!this.fading) {\n      this.fading = true; // Start fading when hovered over\n      this.color1 = 137;\n      this.color2 = 207;\n      this.color3 = 240;\n\n      playCount++;\n        if (playCount % 5 === 0) {\n            // Play the next laugh sound in order, cycling through the array\n            const laughIndex = Math.floor(playCount / 5) % laugh.length; // Get the index based on playCount\n            laugh[laughIndex].play(); // Play the laugh sound\n\n            // Reset playCount after playing the fifth laugh\n            if (laughIndex === laugh.length - 1) {\n                playCount = 0; // Reset the counter after playing the last laugh\n            }\n        } else {\n            // Change pitch for the other times\n            soundFile.rate(pitches[Math.floor(Math.random() * pitches.length)]);\n            soundFile.play();\n        }\n    }\n}\n  finished() {\n    return this.life < 0; // Return whether the circle should be removed\n  }\n\n  displayLine(nextCircle) {\n    stroke(255, 150); // Set line color and transparency\n    line(this.x, this.y, nextCircle.x, nextCircle.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6729377fcfb9b0823d9ec48a",
        "createdAt": "2024-11-04T21:15:54.465Z",
        "updatedAt": "2024-11-04T21:15:54.465Z",
        "id": "6729377fcfb9b0823d9ec48a"
      },
      {
        "name": "womb.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/1889cfc8-4375-4b3a-9f35-c56ca92ede67.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6729377fcfb9b0823d9ec494",
        "createdAt": "2024-11-04T21:15:54.465Z",
        "updatedAt": "2024-11-04T21:15:54.465Z",
        "id": "6729377fcfb9b0823d9ec494"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n  \n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6729377fcfb9b0823d9ec492",
        "createdAt": "2024-11-04T21:15:54.465Z",
        "updatedAt": "2024-11-04T21:15:54.465Z",
        "id": "6729377fcfb9b0823d9ec492"
      },
      {
        "name": "touch_sound.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/9c2d5007-f4af-4a45-aee9-5a5fd01f120e.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6729377fcfb9b0823d9ec493",
        "createdAt": "2024-11-04T21:15:54.465Z",
        "updatedAt": "2024-11-04T21:15:54.465Z",
        "id": "6729377fcfb9b0823d9ec493"
      },
      {
        "name": "laugh 2.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/96ea610d-b5f8-4aea-bfcb-250c6439a3d4.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6729377fcfb9b0823d9ec48d",
        "createdAt": "2024-11-04T21:15:54.465Z",
        "updatedAt": "2024-11-04T21:15:54.465Z",
        "id": "6729377fcfb9b0823d9ec48d"
      },
      {
        "name": "laugh 1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/57fbd85a-b83b-47e4-a2f6-37f082668e20.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6729377fcfb9b0823d9ec48c",
        "createdAt": "2024-11-04T21:15:54.465Z",
        "updatedAt": "2024-11-04T21:15:54.465Z",
        "id": "6729377fcfb9b0823d9ec48c"
      },
      {
        "name": "laugh 3.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/67fa7ba3-c9b7-41c6-9ab9-b5ab86317cbe.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6729377fcfb9b0823d9ec48e",
        "createdAt": "2024-11-04T21:15:54.465Z",
        "updatedAt": "2024-11-04T21:15:54.465Z",
        "id": "6729377fcfb9b0823d9ec48e"
      },
      {
        "name": "laugh 4.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/b2e94a59-ea6e-441d-81c6-ef8d58c14345.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6729377fcfb9b0823d9ec48f",
        "createdAt": "2024-11-04T21:15:54.465Z",
        "updatedAt": "2024-11-04T21:15:54.465Z",
        "id": "6729377fcfb9b0823d9ec48f"
      },
      {
        "name": "laugh 5.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/e2b9086b-a269-453a-9c10-7cacc644a29a.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6729377fcfb9b0823d9ec490",
        "createdAt": "2024-11-04T21:15:54.465Z",
        "updatedAt": "2024-11-04T21:15:54.465Z",
        "id": "6729377fcfb9b0823d9ec490"
      }
    ],
    "createdAt": "2024-11-04T21:07:12.243Z",
    "updatedAt": "2024-11-04T21:15:54.465Z",
    "id": "dppywR62P"
  },
  {
    "_id": "SqbkpDNCu",
    "name": "Notch weaver",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67527c30256cd78ffe432f37",
          "67527c30256cd78ffe432f36",
          "67527c30256cd78ffe432f38"
        ],
        "fileType": "folder",
        "_id": "67527c30256cd78ffe432f39",
        "createdAt": "2024-12-06T04:23:18.656Z",
        "updatedAt": "2024-12-06T04:23:18.656Z",
        "id": "67527c30256cd78ffe432f39"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67527c30256cd78ffe432f36",
        "createdAt": "2024-12-06T04:23:18.656Z",
        "updatedAt": "2024-12-06T04:23:18.656Z",
        "id": "67527c30256cd78ffe432f36"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "67527c30256cd78ffe432f37",
        "createdAt": "2024-12-06T04:23:18.656Z",
        "updatedAt": "2024-12-06T04:23:18.656Z",
        "id": "67527c30256cd78ffe432f37"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "67527c30256cd78ffe432f38",
        "createdAt": "2024-12-06T04:23:18.656Z",
        "updatedAt": "2024-12-06T04:23:18.656Z",
        "id": "67527c30256cd78ffe432f38"
      }
    ],
    "updatedAt": "2024-12-06T04:23:18.656Z",
    "createdAt": "2024-12-06T04:23:16.661Z",
    "id": "SqbkpDNCu"
  },
  {
    "_id": "arjTesvCi",
    "name": "OFFICIAL CODE FOR GROUP PROJECT",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "671d4ba264671631bf33cf81",
          "671d4ba264671631bf33cf82"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "671d4ba264671631bf33cf80",
        "createdAt": "2024-10-28T04:25:12.752Z",
        "updatedAt": "2024-10-28T04:25:12.752Z",
        "id": "671d4ba264671631bf33cf80"
      },
      {
        "name": "sketch.js",
        "content": "\n\n// How much wiggle-room is allowed when matching the color?\nlet tolerance = 5;\nlet numCircles = 500;\nlet fullscreenStarted = false;\nlet colorToMatch;\nlet video;\nlet showVideo = true;\nlet videoX = 640/5;\nlet videoY = 480/5;\n\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n\n  // An initial color to look for\n  colorToMatch = color(255,150,0);\n\n  // Webcam capture\n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n}\n\n\nfunction draw() { \n  resizeCanvas(windowWidth, windowHeight);\n  noCanvasScroll();\n  image(video, 0, 0, videoX, videoY); // Draw the video\n  video.hide();\n  push();\n  background(0, 80);\n\n  // Get the first matching pixel in the image\n  let firstPx = findColor(video, colorToMatch, tolerance);\n  \n  // Ff we got a result (is not undefined) then draw a circle in that location\n  if (firstPx !== undefined) {\n    fill(255, 90);\n    noStroke();\n    for (let i = 0; i < numCircles; i++) {\n      // Calculate angle for current circle\n      let angle = map(i, 0, numCircles, 0, TWO_PI); // map to a full circle\n      let circleRadius = random(5, 13);\n      let distanceFromCenter = random(80, 100);\n\n      let x = firstPx.x + cos(angle) * distanceFromCenter * 1.5;\n      let y = height / 2 + sin(angle) * distanceFromCenter * 3.3;\n      x = map(x, 0, 640, 0, windowWidth);\n      circle(x, y, circleRadius);\n    }\n    // drawingContext.shadowBlur = 30; // Adjust the blur intensity\n    // drawingContext.shadowColor = color(255,10); // White glow effect\n  }\n}\n\n// Use the mouse to select a color to track\nfunction mousePressed() {\n  loadPixels();\n  colorToMatch = get(mouseX, mouseY);\n\n  // Note we use get() here, which is probably ok since it's one pixel – could def do this with pixels[index] too\n}\n\n\n// Find the first instance of a color in an image and return the location\nfunction findColor(input, c, tolerance) {\n  \n  // If we don't have video yet (ie the sketch just started), then return undefined\n  if (input.width === 0 || input.height === 0) {\n    return undefined;\n  }\n\n  // Grab rgb from color to match\n  let matchR = c[0];\n  let matchG = c[1];\n  let matchB = c[2];\n\n  // Look for the color! In this case, we look across each row working our way down the image – depending on your project, you might want to scan across instead\n  input.loadPixels();\n  for (let y=0; y<input.height; y++) {\n    for (let x=0; x<input.width; x++) {\n \n      // Current pixel color\n      let index = (y * video.width + x) * 4;\n      let r = video.pixels[index];\n      let g = video.pixels[index+1];\n      let b = video.pixels[index+2];\n\n      // If our color detection has no wiggle-room (either the color matches perfectly or isn't seen at all) then it won't work very well in real-world conditions to overcome this, we check if the rgb values are within a certain range – if they are, we consider it a match\n      if (r >= matchR-tolerance && r <= matchR+tolerance &&\n          g >= matchG-tolerance && g <= matchG+tolerance &&\n          b >= matchB-tolerance && b <= matchB+tolerance) {\n\n          // Send back the x/y location immediately (faster, since we stop the loop)\n          return createVector(x, y);\n      }\n    }\n  }\n\n  // If no match was found, return 'undefined'\n  return undefined;\n}\n\n\nfunction noCanvasScroll() {\n  document.body.style.overflow = 'hidden';\n}\n\nfunction keyPressed() {\n  if (!fullscreen()) {\n    fullscreen(true);\n    fullscreenStarted = true; // Track if fullscreen has started\n    videoX = 1;\n    videoY = 1;\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "671d4ba264671631bf33cf82",
        "createdAt": "2024-10-28T04:25:12.752Z",
        "updatedAt": "2024-10-28T04:25:12.752Z",
        "id": "671d4ba264671631bf33cf82"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n        <style>\n            body {\n                padding:    0;\n                margin:     0;\n                text-align: center;\n            }\n        </style>\n\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n        <script src=\"sketch.js\"></script>\n    </head>\n\n    <body>\n    </body>\n\n</html>\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671d4ba264671631bf33cf81",
        "createdAt": "2024-10-28T04:25:12.752Z",
        "updatedAt": "2024-10-28T04:25:12.752Z",
        "id": "671d4ba264671631bf33cf81"
      }
    ],
    "createdAt": "2024-10-26T20:05:55.630Z",
    "updatedAt": "2024-10-28T04:25:12.752Z",
    "id": "arjTesvCi"
  },
  {
    "_id": "iR913PN1K",
    "name": "OFFICIAL CODE FOR GROUP PROJECT with design",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "671f185bc8e948ec6646b6f7",
          "671f185690f3ae8d9ed5439f",
          "671f1858b707009ccd8c1f17",
          "671f178c3cb4b75f82d30a17",
          "671f178c3cb4b75f82d30a18"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "671f178c3cb4b75f82d30a16",
        "createdAt": "2024-10-28T05:04:52.627Z",
        "updatedAt": "2024-10-28T05:04:52.627Z",
        "id": "671f178c3cb4b75f82d30a16"
      },
      {
        "name": "sketch.js",
        "content": "// How much wiggle-room is allowed when matching the color?\nlet tolerance = 5;\nlet numCircles = 500;\nlet fullscreenStarted = false;\nlet colorToMatch;\nlet video;\nlet showVideo = true;\nlet videoX = 640 / 5;\nlet videoY = 480 / 5;\nlet gifs = [];\nlet gifPositions = [];\nlet gifCount = 5; // Starting number of GIFs\nlet gifWidths = [];\nlet gifHeights = [];\nlet opacities = [];\nconst circleRadius = 500; // Radius of the circle\nconst spawnInterval = 1000; // Time in milliseconds between spawns\n\nfunction preload() {\n  gifs[0] = loadImage(\"Demon.gif\", (img) => {\n    gifWidths[0] = img.width;\n    gifHeights[0] = img.height;\n  });\n  gifs[1] = loadImage(\"Ghost.gif\", (img) => {\n    gifWidths[1] = img.width;\n    gifHeights[1] = img.height;\n  });\n  gifs[2] = loadImage(\"Skeleton.gif\", (img) => {\n    gifWidths[2] = img.width;\n    gifHeights[2] = img.height;\n  });\n}\n\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n\n  // An initial color to look for\n  colorToMatch = color(255, 150, 0);\n\n  // Webcam capture\n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n}\n\nfunction spawnGif() {\n  let gifWidth = 100;\n  let gifHeight = (gifWidth / gifWidths[0]) * gifHeights[0]; // Use the first GIF's dimensions for simplicity\n\n  let xgif, ygif;\n  // Generate positions outside of the circle\n  do {\n    xgif = random(0, windowWidth - gifWidth);\n    ygif = random(0, windowHeight - gifHeight);\n  } while (\n    dist(xgif + gifWidth / 2, ygif + gifHeight / 2, width / 2, height / 2) <\n    circleRadius\n  );\n\n  gifPositions.push(createVector(x, y));\n  opacities.push(255); // Start fully opaque\n  for (let i = 0; i < gifCount; i++) {\n    spawnGif();\n  }\n  // Start spawning GIFs every second\n  setInterval(spawnGif, spawnInterval);\n}\n\nfunction draw() {\n  resizeCanvas(windowWidth, windowHeight);\n  noCanvasScroll();\n  image(video, 0, 0, videoX, videoY); // Draw the video\n  video.hide();\n  push();\n  background(0, 80);\n\n  // Get the first matching pixel in the image\n  let firstPx = findColor(video, colorToMatch, tolerance);\n\n  // Ff we got a result (is not undefined) then draw a circle in that location\n  if (firstPx !== undefined) {\n    fill(255, 90);\n    noStroke();\n    for (let i = 0; i < numCircles; i++) {\n      // Calculate angle for current circle\n      let angle = map(i, 0, numCircles, 0, TWO_PI); // map to a full circle\n      let circleRadius = random(5, 13);\n      let distanceFromCenter = random(80, 100);\n\n      let x = firstPx.x + cos(angle) * distanceFromCenter * 1.5;\n      let y = height / 2 + sin(angle) * distanceFromCenter * 3.3;\n      x = map(x, 0, 640, 0, windowWidth);\n      circle(x, y, circleRadius);\n    // drawingContext.shadowBlur = 30; // Adjust the blur intensity\n    // drawingContext.shadowColor = color(255,10); // White glow effect\n\n    //////////////////////////////////////GRAPHIC////////////////////////\n    let centerX = firstPx.x + cos(angle) * distanceFromCenter * 1.5;\n    let centerY = height / 2 + sin(angle) * distanceFromCenter * 3.3;\n\n    // Move and draw GIFs\n    for (let i = 0; i < gifPositions.length; i++) {\n      let pos = gifPositions[i];\n\n      // distance to the center\n      let dx = centerX - (pos.x + 50); // Offset to the center of the GIF\n      let dy = centerY - (pos.y + 50); // Offset to the center of the GIF\n      let distanceToCenter = dist(pos.x + 50, pos.y + 50, centerX, centerY); // Calculate distance\n\n      // Move towards the center\n      pos.x += dx * 0.001; // Adjust the speed (0.05 for faster movement)\n      pos.y += dy * 0.001;\n\n      // Gradually decrease opacity until the GIF disappears at the edge of the circle\n      if (distanceToCenter < circleRadius + 250) {\n        let NdistanceToCenter = distanceToCenter - 250;\n        // 250 represent the radius of the inner circle\n        opacities[i] = map(NdistanceToCenter, distanceToCenter, 0, 255, 0); // Fade out completely when at the edge\n      }\n\n      // Calculate width and height for rendering\n      let gifWidth = 100; // Desired width for resizing\n      let gifHeight =\n        (gifWidth / gifWidths[i % gifWidths.length]) *\n        gifHeights[i % gifHeights.length]; // Maintain aspect ratio\n\n      // Set the fill color with opacity\n      tint(255, max(opacities[i], 0)); // Set the opacity for the GIF, ensuring it doesn't go below 0\n      image(gifs[i % gifs.length], pos.x, pos.y, gifWidth, gifHeight); // Draw the GIF\n\n      // Stop drawing the GIF if it's fully transparent\n      if (opacities[i] <= 0) {\n        opacities[i] = 0;\n      }\n      }\n    }\n  }\n}\n\n// Use the mouse to select a color to track\nfunction mousePressed() {\n  loadPixels();\n  colorToMatch = get(mouseX, mouseY);\n\n  // Note we use get() here, which is probably ok since it's one pixel – could def do this with pixels[index] too\n}\n\n// Find the first instance of a color in an image and return the location\nfunction findColor(input, c, tolerance) {\n  // If we don't have video yet (ie the sketch just started), then return undefined\n  if (input.width === 0 || input.height === 0) {\n    return undefined;\n  }\n\n  // Grab rgb from color to match\n  let matchR = c[0];\n  let matchG = c[1];\n  let matchB = c[2];\n\n  // Look for the color! In this case, we look across each row working our way down the image – depending on your project, you might want to scan across instead\n  input.loadPixels();\n  for (let y = 0; y < input.height; y++) {\n    for (let x = 0; x < input.width; x++) {\n      // Current pixel color\n      let index = (y * video.width + x) * 4;\n      let r = video.pixels[index];\n      let g = video.pixels[index + 1];\n      let b = video.pixels[index + 2];\n\n      // If our color detection has no wiggle-room (either the color matches perfectly or isn't seen at all) then it won't work very well in real-world conditions to overcome this, we check if the rgb values are within a certain range – if they are, we consider it a match\n      if (\n        r >= matchR - tolerance &&\n        r <= matchR + tolerance &&\n        g >= matchG - tolerance &&\n        g <= matchG + tolerance &&\n        b >= matchB - tolerance &&\n        b <= matchB + tolerance\n      ) {\n        // Send back the x/y location immediately (faster, since we stop the loop)\n        return createVector(x, y);\n      }\n    }\n  }\n\n  // If no match was found, return 'undefined'\n  return undefined;\n}\n\nfunction noCanvasScroll() {\n  document.body.style.overflow = \"hidden\";\n}\n\nfunction keyPressed() {\n  if (!fullscreen()) {\n    fullscreen(true);\n    fullscreenStarted = true; // Track if fullscreen has started\n    videoX = 1;\n    videoY = 1;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "671f178c3cb4b75f82d30a18",
        "createdAt": "2024-10-28T05:04:52.627Z",
        "updatedAt": "2024-10-28T05:04:52.627Z",
        "id": "671f178c3cb4b75f82d30a18"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n        <style>\n            body {\n                padding:    0;\n                margin:     0;\n                text-align: center;\n            }\n        </style>\n\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n        <script src=\"sketch.js\"></script>\n    </head>\n\n    <body>\n    </body>\n\n</html>\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671f178c3cb4b75f82d30a17",
        "createdAt": "2024-10-28T05:04:52.627Z",
        "updatedAt": "2024-10-28T05:04:52.627Z",
        "id": "671f178c3cb4b75f82d30a17"
      },
      {
        "name": "Ghost.gif",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/34ffadfa-315b-447f-8d40-79b4f8330562.gif",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671f185690f3ae8d9ed5439f",
        "createdAt": "2024-10-28T05:04:52.627Z",
        "updatedAt": "2024-10-28T05:04:52.627Z",
        "id": "671f185690f3ae8d9ed5439f"
      },
      {
        "name": "Skeleton.gif",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/73caf403-b9d2-49ad-a45c-338efb6b4981.gif",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671f1858b707009ccd8c1f17",
        "createdAt": "2024-10-28T05:04:52.627Z",
        "updatedAt": "2024-10-28T05:04:52.627Z",
        "id": "671f1858b707009ccd8c1f17"
      },
      {
        "name": "Demon.gif",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/6c793f7e-5859-41a8-836f-b4a97ddbf227.gif",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671f185bc8e948ec6646b6f7",
        "createdAt": "2024-10-28T05:04:52.627Z",
        "updatedAt": "2024-10-28T05:04:52.627Z",
        "id": "671f185bc8e948ec6646b6f7"
      }
    ],
    "createdAt": "2024-10-28T04:48:12.352Z",
    "updatedAt": "2024-10-28T05:04:52.627Z",
    "id": "iR913PN1K"
  },
  {
    "_id": "7s3yVnDuv",
    "name": "OpenAI Test copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67527b06fca36b266f1b03ce",
          "67527b06fca36b266f1b03cf",
          "67527b06fca36b266f1b03d0"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67527b06fca36b266f1b03cd",
        "createdAt": "2023-11-15T13:30:04.290Z",
        "updatedAt": "2023-11-15T13:30:04.290Z",
        "id": "67527b06fca36b266f1b03cd"
      },
      {
        "name": "sketch.js",
        "content": "const openAIProxy = \"https://openai-api-proxy.glitch.me\";\n\nlet img;\nlet feedback;\n\nfunction setup() {\n  let input_image_field = createInput(\n    \"A student trying to learn how use a machine learning API\"\n  );\n  input_image_field.size(600);\n  input_image_field.id(\"input_image_prompt\");\n  let button1 = createButton(\"AskPicture\");\n  button1.mousePressed(() => {\n    askForImage(input_image_field.value());\n  });\n  createElement(\"br\");\n  let input_field = createInput(\n    \"Why should learn to use a machine learning API?\"\n  );\n  input_field.id(\"input_prompt\");\n  input_field.size(600);\n  let button2 = createButton(\"AskWords\");\n  button2.mousePressed(() => {\n    askForWords(input_field.value());\n  });\n  createElement(\"br\");\n  feedback = createP(\"\");\n  createElement(\"br\");\n  feedback.position(10,90)\n  let canvas = createCanvas(512, 512);\n  canvas.position(0, 120);\n  setupAudio();\n}\n\nfunction draw() {\n  if (img) image(img, 0, 0);\n}\n\nasync function askForWords(p_prompt) {\n  document.body.style.cursor = \"progress\";\n  feedback.html(\"Waiting for reply from OpenAi...\");\n  const data = {\n    model: \"text-davinci-003\",\n    prompt: p_prompt,\n    temperature: 0,\n    max_tokens: 1000,\n    //  n: 1,\n    //  stop: \"\\n\",\n  };\n  console.log(\"Asking for Words From OpenAI via Proxy\", data);\n  let options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n  const url = openAIProxy + \"/AskOpenAI/\";\n  console.log(\"words url\", url, \"words options\", options);\n  const response = await fetch(url, options);\n  console.log(\"words_response\", response);\n  const openAI_json = await response.json();\n  console.log(\"openAI_json\", openAI_json);\n  if (openAI_json.choices.length == 0) {\n    feedback.html(\"Something went wrong, try it again\");\n  } else {\n    let choicesjoin = \"\";\n    for (let i = 0; i < openAI_json.choices.length; i++) {\n      choicesjoin += openAI_json.choices[i].text;\n    }\n    feedback.html(choicesjoin);\n    //console.log(\"proxy_said\", proxy_said.output.join(\"\"));\n  }\n  document.body.style.cursor = \"auto\";\n}\n\nasync function askForImage(p_prompt) {\n  document.body.style.cursor = \"progress\";\n\n  feedback.html(\"Waiting for reply from OpenAi...\");\n  const data = {\n    prompt: p_prompt,\n    n: 2,\n    response_format: \"b64_json\",\n    size: \"512x512\",\n  };\n  console.log(\"Asking Images From OpenAI via Proxy\", data);\n  let options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n  const url = openAIProxy + \"/AskOpenAIImage/\";\n  console.log(\"words url\", url, \"words options\", options);\n  const response = await fetch(url, options);\n  console.log(\"words_response\", response);\n  const openAI_json = await response.json();\n  console.log(\"openAI_json\", openAI_json.data[0].b64_json);\n  //allow cross origin loading of images\n\n  loadImage(\n    \"data:image/jpeg;base64,\" + openAI_json.data[0].b64_json,\n    function (incomingImage) {\n      img = incomingImage;\n      console.log(\"img\", img);\n    }\n  );\n\n  document.body.style.cursor = \"auto\";\n}\n\nasync function askForAudio(audio) {\n  document.body.style.cursor = \"progress\";\n\n  feedback.html(\"Waiting for reply from OpenAi Audio...\");\n  //read test.m4a file audio file from disk\n  //https://stackoverflow.com/questions/10058814/get-data-from-fs-readfile\n\n  console.log(\"Asking Audio From OpenAI via Proxy\");\n\n  const formData = new FormData();\n  formData.append(\"file\", audio);\n  formData.append(\"model\", \"whisper-1\");\n\n  const url = openAIProxy + \"/askOpenAIAudio/\";\n  console.log(\"audio url\", url);\n\n  const response = await fetch(url, {\n    mode: \"cors\",\n    method: \"POST\",\n    body: formData,\n  });\n\n  const openAI_json = await response.json();\n  console.log(\"audio_response\", openAI_json.transcription);\n  feedback.html(openAI_json.transcription);\n\n  document.body.style.cursor = \"auto\";\n}\n\nfunction setupAudio() {\n  // Set up the audio context and media stream\n  const audioContext = new AudioContext();\n  let mediaStream;\n  let mediaRecorder;\n\n  // Get the start and stop recording buttons\n  const startButton = document.createElement(\"button\");\n  startButton.id = \"start-recording\";\n  startButton.textContent = \"Start Recording\";\n  startButton.style.position = \"absolute\";\n  startButton.style.top = \"50px\";\n  startButton.style.left = \"10px\";\n  document.body.appendChild(startButton);\n\n  const stopButton = document.createElement(\"button\");\n  stopButton.style.position = \"absolute\";\n  stopButton.style.top = \"50px\";\n  stopButton.style.left = \"160px\";\n  stopButton.id = \"stop-recording\";\n  stopButton.textContent = \"Stop Recording\";\n  document.body.appendChild(stopButton);\n\n  // Add a click event listener to the start recording button\n  startButton.addEventListener(\"click\", async function () {\n    // Request access to the user's microphone\n    mediaStream = await navigator.mediaDevices.getUserMedia({ audio: true });\n\n    let mrChunks = [];\n\n    // Create a media recorder and start recording\n    mediaRecorder = new MediaRecorder(mediaStream);\n    mediaRecorder.addEventListener(\"dataavailable\", (event) => {\n      mrChunks.push(event.data);\n    });\n    mediaRecorder.addEventListener(\"stop\", (event) => {\n      const recordedData = new Blob(mrChunks, { type: \"audio/webm\" });\n      console.log(\"Recording stopped\", recordedData);\n\n      let av = document.createElement(\"VIDEO\");\n      var audioURL = window.URL.createObjectURL(recordedData);\n      av.src = audioURL;\n      av.width = 100;\n      av.height = 20;\n      document.body.appendChild(av);\n      av.play();\n      console.log(av);\n\n      askForAudio(recordedData);\n    });\n    mediaRecorder.start();\n\n    console.log(\"Recording started\");\n  });\n\n  // Add a click event listener to the stop recording button\n  stopButton.addEventListener(\"click\", async function () {\n    // Stop the media recorder and get the recorded data\n    mediaRecorder.stop();\n  });\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67527b06fca36b266f1b03cf",
        "createdAt": "2023-11-15T13:30:04.290Z",
        "updatedAt": "2023-11-15T13:30:04.290Z",
        "id": "67527b06fca36b266f1b03cf"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.8.0/p5.js\"></script>\n    </script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67527b06fca36b266f1b03ce",
        "createdAt": "2023-11-15T13:30:04.290Z",
        "updatedAt": "2023-11-15T13:30:04.290Z",
        "id": "67527b06fca36b266f1b03ce"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67527b06fca36b266f1b03d0",
        "createdAt": "2023-11-15T13:30:04.290Z",
        "updatedAt": "2023-11-15T13:30:04.290Z",
        "id": "67527b06fca36b266f1b03d0"
      }
    ],
    "createdAt": "2024-12-06T04:18:14.450Z",
    "updatedAt": "2024-12-06T04:18:14.450Z",
    "id": "7s3yVnDuv"
  },
  {
    "_id": "fBtSZhhLo",
    "name": "p5.mapper template copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d45b9585b31c729971ad28",
          "67d45b9585b31c729971ad30",
          "67d45b9585b31c729971ad31",
          "67d45b9585b31c729971ad33",
          "67d45b9585b31c729971ad34",
          "67d45b9585b31c729971ad35",
          "67d45b9585b31c729971ad36"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d45b9585b31c729971ad27",
        "createdAt": "2025-03-14T16:38:48.424Z",
        "updatedAt": "2025-03-14T16:38:48.424Z",
        "id": "67d45b9585b31c729971ad27"
      },
      {
        "name": "sketch.js",
        "content": "/*\n * p5.mapper\n * https://github.com/jdeboi/p5.mapper\n *\n * Jenna deBoisblanc\n * jdeboi.com\n *\n */\n\nlet pMapper;\nlet quadMap0,\n  quadMap1,\n  quadMap2,\n  quadMap3,\n  quadMap4,\n  quadMap5,\n  quadMap6,\n  quadMap7;\n\nlet img;\n\nfunction preload() {\n  img = loadImage(\"assets/catnap.jpg\");\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight, WEBGL);\n\n  // create mapper object\n  pMapper = createProjectionMapper(this);\n  \n  quadMap0 = pMapper.createQuadMap(400, 400);\n  quadMap1 = pMapper.createQuadMap(400, 400);\n  quadMap2 = pMapper.createQuadMap(400, 400);\n  quadMap3 = pMapper.createQuadMap(400, 400);\n  quadMap4 = pMapper.createQuadMap(400, 400);\n  quadMap5 = pMapper.createQuadMap(400, 400);\n  quadMap6 = pMapper.createQuadMap(400, 400);\n  quadMap7 = pMapper.createQuadMap(400, 400);\n  \n  \n  // loads calibration in the \"maps\" directory\n  pMapper.load(\"maps/map.json\");\n}\n\nfunction draw() {\n  background(0);\n\n  quadMap0.displayTexture(img);\n  quadMap1.displayTexture(img);\n  quadMap2.displayTexture(img);\n    quadMap3.displayTexture(img);\n    quadMap4.displayTexture(img);\n    quadMap5.displayTexture(img);\n    quadMap6.displayTexture(img);\n    quadMap7.displayTexture(img);\n\n\n\n\n\n\n\n}\n\nfunction drawCoords(pg) {\n  pg.clear();\n  pg.push();\n  pg.background(0, 255, 0);\n  pg.pop();\n}\n\nfunction keyPressed() {\n  switch (key) {\n    case \"c\":\n      pMapper.toggleCalibration();\n      break;\n    case \"f\":\n      let fs = fullscreen();\n      fullscreen(!fs);\n      break;\n    case \"l\":\n      pMapper.load(\"maps/map.json\");\n      break;\n\n    case \"s\":\n      pMapper.save(\"map.json\");\n      break;\n  }\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d45b9585b31c729971ad35",
        "createdAt": "2025-03-14T16:38:48.424Z",
        "updatedAt": "2025-03-14T16:38:48.424Z",
        "id": "67d45b9585b31c729971ad35"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n<!--         <script src=\"https://cdn.statically.io/gh/jdeboi/p5.mapper/main/dist/p5.mapper.min.js\"></script> -->\n    <script src=\"p5.mapper.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d45b9585b31c729971ad30",
        "createdAt": "2025-03-14T16:38:48.424Z",
        "updatedAt": "2025-03-14T16:38:48.424Z",
        "id": "67d45b9585b31c729971ad30"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d45b9585b31c729971ad36",
        "createdAt": "2025-03-14T16:38:48.424Z",
        "updatedAt": "2025-03-14T16:38:48.424Z",
        "id": "67d45b9585b31c729971ad36"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "67d45b9585b31c729971ad29",
          "67d45b9585b31c729971ad2a",
          "67d45b9585b31c729971ad2b",
          "67d45b9585b31c729971ad2c",
          "67d45b9585b31c729971ad2d",
          "67d45b9585b31c729971ad2e",
          "67d45b9585b31c729971ad2f"
        ],
        "fileType": "folder",
        "isSelectedFile": true,
        "_id": "67d45b9585b31c729971ad28",
        "createdAt": "2025-03-14T16:38:48.424Z",
        "updatedAt": "2025-03-14T16:38:48.424Z",
        "id": "67d45b9585b31c729971ad28"
      },
      {
        "name": "maps",
        "content": "",
        "children": [
          "67d45b9585b31c729971ad32"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d45b9585b31c729971ad31",
        "createdAt": "2025-03-14T16:38:48.424Z",
        "updatedAt": "2025-03-14T16:38:48.424Z",
        "id": "67d45b9585b31c729971ad31"
      },
      {
        "name": "catnap.jpg",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/00a3ed6a-4171-4bf5-8ceb-422460845150.jpg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d45b9585b31c729971ad2a",
        "createdAt": "2025-03-14T16:38:48.424Z",
        "updatedAt": "2025-03-14T16:38:48.424Z",
        "id": "67d45b9585b31c729971ad2a"
      },
      {
        "name": "Roboto.ttf",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/82780ad2-031f-47f5-a071-259cb1448223.ttf",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d45b9585b31c729971ad29",
        "createdAt": "2025-03-14T16:38:48.424Z",
        "updatedAt": "2025-03-14T16:38:48.424Z",
        "id": "67d45b9585b31c729971ad29"
      },
      {
        "name": "p5.mapper.min.js",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/d65b53df-8a3f-46c5-92c8-242f2be40d29.js",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d45b9585b31c729971ad33",
        "createdAt": "2025-03-14T16:38:48.424Z",
        "updatedAt": "2025-03-14T16:38:48.424Z",
        "id": "67d45b9585b31c729971ad33"
      },
      {
        "name": "map.json",
        "content": "{\n  \"surfaces\": [\n    {\n      \"id\": 0,\n      \"res\": 20,\n      \"x\": 508,\n      \"y\": 201,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": -487,\n          \"y\": -102,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": -273,\n          \"y\": -111,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": -482,\n          \"y\": 130,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": -284,\n          \"y\": 121,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    },\n    {\n      \"id\": 1,\n      \"res\": 20,\n      \"x\": -490,\n      \"y\": -81,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": 0,\n          \"y\": 0,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 199,\n          \"y\": -14,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": 41,\n          \"y\": 222,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 231,\n          \"y\": 211,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    },\n    {\n      \"id\": 2,\n      \"res\": 20,\n      \"x\": -61,\n      \"y\": 2,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": -94,\n          \"y\": -131,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 60,\n          \"y\": -91,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": -70,\n          \"y\": 113,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 72,\n          \"y\": 129,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    },\n    {\n      \"id\": 3,\n      \"res\": 20,\n      \"x\": -271,\n      \"y\": -419,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": -32,\n          \"y\": 2,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 210,\n          \"y\": -18,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": 9,\n          \"y\": 295,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 227,\n          \"y\": 283,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    },\n    {\n      \"id\": 4,\n      \"res\": 20,\n      \"x\": -503,\n      \"y\": 125,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": 247,\n          \"y\": 25,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 380,\n          \"y\": 0,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": 278,\n          \"y\": 209,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 395,\n          \"y\": 216,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    },\n    {\n      \"id\": 5,\n      \"res\": 20,\n      \"x\": -634,\n      \"y\": 143,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": 189,\n          \"y\": 7,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 380,\n          \"y\": 0,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": 231,\n          \"y\": 205,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 405,\n          \"y\": 193,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    },\n    {\n      \"id\": 6,\n      \"res\": 20,\n      \"x\": -366,\n      \"y\": 136,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": 241,\n          \"y\": -11,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 380,\n          \"y\": 0,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": 259,\n          \"y\": 206,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 380,\n          \"y\": 188,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    },\n    {\n      \"id\": 7,\n      \"res\": 20,\n      \"x\": -161,\n      \"y\": 8,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": -121,\n          \"y\": -88,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 6,\n          \"y\": -137,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": -90,\n          \"y\": 130,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 28,\n          \"y\": 106,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    }\n  ],\n  \"lines\": []\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d45b9585b31c729971ad32",
        "createdAt": "2025-03-14T16:38:48.424Z",
        "updatedAt": "2025-03-14T16:38:48.424Z",
        "id": "67d45b9585b31c729971ad32"
      },
      {
        "name": "water.mp4",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/99b54ab5-05b6-4f21-8e74-e880fa29b009.mp4",
        "children": [],
        "fileType": "file",
        "_id": "67d45b9585b31c729971ad2e",
        "createdAt": "2025-03-14T16:38:48.424Z",
        "updatedAt": "2025-03-14T16:38:48.424Z",
        "id": "67d45b9585b31c729971ad2e"
      },
      {
        "name": "water2.mp4",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/3dc30879-9513-4b7f-a303-dbc069dd5192.mp4",
        "children": [],
        "fileType": "file",
        "_id": "67d45b9585b31c729971ad2f",
        "createdAt": "2025-03-14T16:38:48.424Z",
        "updatedAt": "2025-03-14T16:38:48.424Z",
        "id": "67d45b9585b31c729971ad2f"
      },
      {
        "name": "sea1.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/f43588e6-41be-4a32-b93f-51d671279fa7.png",
        "children": [],
        "fileType": "file",
        "_id": "67d45b9585b31c729971ad2b",
        "createdAt": "2025-03-14T16:38:48.424Z",
        "updatedAt": "2025-03-14T16:38:48.424Z",
        "id": "67d45b9585b31c729971ad2b"
      },
      {
        "name": "sea3.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/6b70d069-dc0f-4110-97f1-e79f540784cb.png",
        "children": [],
        "fileType": "file",
        "_id": "67d45b9585b31c729971ad2d",
        "createdAt": "2025-03-14T16:38:48.424Z",
        "updatedAt": "2025-03-14T16:38:48.424Z",
        "id": "67d45b9585b31c729971ad2d"
      },
      {
        "name": "sea2.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/532e0276-0688-4f48-8ffc-bba5fa9aa355.png",
        "children": [],
        "fileType": "file",
        "_id": "67d45b9585b31c729971ad2c",
        "createdAt": "2025-03-14T16:38:48.424Z",
        "updatedAt": "2025-03-14T16:38:48.424Z",
        "id": "67d45b9585b31c729971ad2c"
      },
      {
        "name": "sealeveldata.csv",
        "content": "year,level\r\n1993,0\r\n1994,7.10\r\n1995,12.10\r\n1996,10.10\r\n1997,11.30\r\n1998,17.10\r\n1999,11.80\r\n2000,20.10\r\n2001,21.90\r\n2002,26\r\n2003,31\r\n2004,34.30\r\n2005,36.40\r\n2006,39\r\n2007,40.50\r\n2008,40\r\n2009,43.40\r\n2010,49.50\r\n2011,44.30\r\n2012,52.70\r\n2013,62.30\r\n2014,61.20\r\n2015,66.60\r\n2016,77.10\r\n2017,74.90\r\n2018,80\r\n2019,83.80\r\n2020,86.70\r\n2021,90.60\r\n2022,94.90\r\n2023,98\r\n2024,103",
        "children": [],
        "fileType": "file",
        "_id": "67d45b9585b31c729971ad34",
        "createdAt": "2025-03-14T16:38:48.424Z",
        "updatedAt": "2025-03-14T16:38:48.424Z",
        "id": "67d45b9585b31c729971ad34"
      }
    ],
    "createdAt": "2025-03-14T16:38:46.059Z",
    "updatedAt": "2025-03-14T16:38:48.424Z",
    "id": "fBtSZhhLo"
  },
  {
    "_id": "EhT9uSFug",
    "name": "p5.mapper workshop base code copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d43eb6bf80f41c5e0a55d5",
          "67d43eb6bf80f41c5e0a55d8",
          "67d43eb6bf80f41c5e0a55d9",
          "67d43eb6bf80f41c5e0a55da",
          "67d43eb6bf80f41c5e0a55db",
          "67d43eb6bf80f41c5e0a55dc",
          "67d43eb6bf80f41c5e0a55dd",
          "67d43eb6bf80f41c5e0a55de",
          "67d43eb6bf80f41c5e0a55df",
          "67d43eb6bf80f41c5e0a55e0",
          "67d43eb6bf80f41c5e0a55e1"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d43eb6bf80f41c5e0a55d4",
        "createdAt": "2025-03-14T14:38:38.019Z",
        "updatedAt": "2025-03-14T14:38:38.019Z",
        "id": "67d43eb6bf80f41c5e0a55d4"
      },
      {
        "name": "sketch.js",
        "content": "/*\n * p5.mapper\n * https://github.com/jdeboi/p5.mapper\n *\n * Jenna deBoisblanc\n * jdeboi.com\n *\n */\n\nlet pMapper;\nlet quad0, quad1, quad2, quad3, quad4, quad5, quad6, quad7; // my quad surfaces\nlet myVideo;\nlet videoPlaying = false;\n\nlet myFont;\nlet myImage;\n\n//dataset related variables:\nlet seaData;\nlet seaDataIndex = 100;\nlet prevMillis = 0;\nlet interval = 2000;\nlet currentDataPoint = 60;\n\nfunction preload() { // load images, fonts and videos\n  myImage = loadImage(\"sea1.png\");\n  myFont = loadFont(\"assets/Roboto.ttf\");\n  myVideo = createVideo('water2.mp4'); \n  seaData = loadTable('sealevel.csv', 'csv', 'header');\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight, WEBGL);\n  textFont(myFont);\n\n  // create mapper object\n  pMapper = createProjectionMapper(this);\n\n  quad0 = pMapper.createQuadMap(400, 400);\n  quad1 = pMapper.createQuadMap(400, 400);\n  quad2 = pMapper.createQuadMap(200, 700);\n  quad3 = pMapper.createQuadMap(400, 400);\n  quad4 = pMapper.createQuadMap(400, 400);\n  quad5 = pMapper.createQuadMap(400, 400);\n  quad6 = pMapper.createQuadMap(400, 400);\n\n  // loads calibration in the \"maps\" directory\n  pMapper.load(\"map.json\");\n  myVideo.hide(); // hide the video element\n}\n\nfunction draw() {\n  background(0);\n\n  quad0.displaySketch(playVideo);\n  quad1.displayTexture(myImage);// display a still image\n  quad2.display(color('blue'));\n  quad4.display(color('orange'));\n  \n  quad3.displaySketch(waterLevel);\n  quad5.displaySketch(waterLevel);\n  quad6.display(color('blue'));\n  //quad0.displaySketch(mySketch);\n  //quad0.displayTexture(myImage);\n  //quad0.displaySketch(playVideo);\n}\n\nfunction mySketch(pg){\n  pg.clear();\n  pg.push();\n  // your sketch goes between push and pop. remember to use the 'pg.' prefix for all p5 functions\n  pg.background(color('white'));\n  pg.textFont(myFont);\n  pg.textAlign(CENTER,CENTER);\n  pg.textSize(70);\n  pg.fill(color('black'));\n  pg.text('hello world',200,175);\n  // ends here\n  pg.pop();\n}\n\nfunction playVideo(pg){\n  pg.clear();\n  pg.push();\n  if(videoPlaying == false){\n    pg.background(255);\n    pg.fill(0);\n    pg.textAlign(CENTER,CENTER);\n    pg.textSize(30);\n    pg.text(\"click to start video\",200,200);\n  } else {\n    pg.image(myVideo,0,0,400,400);\n  }\n  pg.pop();\n}\n\nfunction waterLevel(pg){\n  pg.clear();\n  pg.push();\n  // your mini sketch goes here!\n  \n  pg.background(255);\n  \n  if(millis()>(prevMillis+interval)){\n    seaDataIndex++;\n    prevMillis = millis();\n    if(seaDataIndex == seaData.rows.length){\n      seaDataIndex = 0;\n    }\n  }\n  \n  pg.rectMode(CORNERS);\n  \n  currentDataPoint = lerp(currentDataPoint, seaData.rows[seaDataIndex].obj.sealevel, 0.1);\n  \n  \n  let h = map(currentDataPoint,0,12,0,400);\n  pg.fill(0,0,255);\n  pg.rect(0,400,400,(400-h));\n  pg.fill(255);\n  pg.textSize(25);\n  pg.textAlign(CENTER,CENTER);\n  pg.text(currentDataPoint.toFixed(2)+\" inches\",200,(400-h)+25);\n  \n  // and ends here!\n  pg.pop();\n}\n\nfunction waterYear(pg){\n    pg.clear();\n    pg.push();\n      pg.background(0,0,255);\n      pg.textSize(100);\n      pg.fill(255);\n      pg.textFont(myFont);\n      pg.textAlign(CENTER,CENTER);\n      pg.text(seaData.rows[seaDataIndex].obj.Year,200,100);\n    pg.pop();\n}\n\nfunction keyPressed() {\n  switch (key) {\n    case \"c\":\n      pMapper.toggleCalibration();\n      break;\n    case \"f\":\n      let fs = fullscreen();\n      fullscreen(!fs);\n      break;\n    case \"l\":\n      pMapper.load(\"map.json\");\n      break;\n\n    case \"s\":\n      pMapper.save(\"map.json\");\n      break;\n  }\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n\nfunction displayFrameRate() {\n  fill(255);\n  noStroke();\n  text(round(frameRate()), -width / 2 + 15, -height / 2 + 50);\n}\n\nfunction mousePressed(){ // videos need to start on click\n  videoPlaying = true;\n  myVideo.loop();\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67d43eb6bf80f41c5e0a55de",
        "createdAt": "2025-03-14T14:38:38.019Z",
        "updatedAt": "2025-03-14T14:38:38.019Z",
        "id": "67d43eb6bf80f41c5e0a55de"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n<!--     <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script> -->\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://cdn.statically.io/gh/jdeboi/p5.mapper/main/dist/p5.mapper.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43eb6bf80f41c5e0a55d8",
        "createdAt": "2025-03-14T14:38:38.019Z",
        "updatedAt": "2025-03-14T14:38:38.019Z",
        "id": "67d43eb6bf80f41c5e0a55d8"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43eb6bf80f41c5e0a55df",
        "createdAt": "2025-03-14T14:38:38.019Z",
        "updatedAt": "2025-03-14T14:38:38.019Z",
        "id": "67d43eb6bf80f41c5e0a55df"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "67d43eb6bf80f41c5e0a55d6",
          "67d43eb6bf80f41c5e0a55d7"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d43eb6bf80f41c5e0a55d5",
        "createdAt": "2025-03-14T14:38:38.019Z",
        "updatedAt": "2025-03-14T14:38:38.019Z",
        "id": "67d43eb6bf80f41c5e0a55d5"
      },
      {
        "name": "catnap.jpg",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/4ccb0216-a7a0-4e81-b065-1beeaa27676c.jpg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43eb6bf80f41c5e0a55d7",
        "createdAt": "2025-03-14T14:38:38.019Z",
        "updatedAt": "2025-03-14T14:38:38.019Z",
        "id": "67d43eb6bf80f41c5e0a55d7"
      },
      {
        "name": "Roboto.ttf",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/241b86d3-9c73-41fa-a3ff-e029ce2a685b.ttf",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43eb6bf80f41c5e0a55d6",
        "createdAt": "2025-03-14T14:38:38.019Z",
        "updatedAt": "2025-03-14T14:38:38.019Z",
        "id": "67d43eb6bf80f41c5e0a55d6"
      },
      {
        "name": "watercropped.mp4",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/0b923456-6ea7-4452-ad7d-6b2a1f174756.mp4",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43eb6bf80f41c5e0a55e1",
        "createdAt": "2025-03-14T14:38:38.019Z",
        "updatedAt": "2025-03-14T14:38:38.019Z",
        "id": "67d43eb6bf80f41c5e0a55e1"
      },
      {
        "name": "sea2.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/5571506b-a369-490e-bb9e-8dfa2e3e0295.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43eb6bf80f41c5e0a55db",
        "createdAt": "2025-03-14T14:38:38.019Z",
        "updatedAt": "2025-03-14T14:38:38.019Z",
        "id": "67d43eb6bf80f41c5e0a55db"
      },
      {
        "name": "sea1.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/a6b4f7b1-43fc-4819-9e49-c635a9c3f130.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43eb6bf80f41c5e0a55da",
        "createdAt": "2025-03-14T14:38:38.019Z",
        "updatedAt": "2025-03-14T14:38:38.019Z",
        "id": "67d43eb6bf80f41c5e0a55da"
      },
      {
        "name": "sea3.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/932e26e2-1f49-440b-8db9-5550562580f5.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43eb6bf80f41c5e0a55dc",
        "createdAt": "2025-03-14T14:38:38.019Z",
        "updatedAt": "2025-03-14T14:38:38.019Z",
        "id": "67d43eb6bf80f41c5e0a55dc"
      },
      {
        "name": "water2.mp4",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/e25d9a0c-3457-4b26-ad2c-af82301884b0.mp4",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43eb6bf80f41c5e0a55e0",
        "createdAt": "2025-03-14T14:38:38.019Z",
        "updatedAt": "2025-03-14T14:38:38.019Z",
        "id": "67d43eb6bf80f41c5e0a55e0"
      },
      {
        "name": "sealevel.csv",
        "content": "Year,sealevel\r\n1880,0\r\n1881,0.220472441\r\n1882,-0.440944881\r\n1883,-0.232283464\r\n1884,0.59055118\r\n1885,0.531496062\r\n1886,0.437007874\r\n1887,0.216535433\r\n1888,0.299212598\r\n1889,0.362204724\r\n1890,0.440944881\r\n1891,0.374015748\r\n1892,0.499999999\r\n1893,0.685039369\r\n1894,0.303149606\r\n1895,0.767716535\r\n1896,0.468503937\r\n1897,0.673228346\r\n1898,1.043307086\r\n1899,1.338582676\r\n1900,1.125984251\r\n1901,1.110236219\r\n1902,1.291338581\r\n1903,1.606299211\r\n1904,1.2007874\r\n1905,0.984251968\r\n1906,1.251968503\r\n1907,1.196850392\r\n1908,1.098425196\r\n1909,1.27559055\r\n1910,1.271653542\r\n1911,1.598425195\r\n1912,1.476377951\r\n1913,1.547244093\r\n1914,1.795275589\r\n1915,2.10629921\r\n1916,2.031496061\r\n1917,1.854330707\r\n1918,1.791338581\r\n1919,1.854330707\r\n1920,1.905511809\r\n1921,1.988188974\r\n1922,1.952755904\r\n1923,1.999999998\r\n1924,1.712598423\r\n1925,1.791338581\r\n1926,2.047244092\r\n1927,2.003937006\r\n1928,1.850393699\r\n1929,1.905511809\r\n1930,2.062992124\r\n1931,2.047244092\r\n1932,2.271653541\r\n1933,2.440944879\r\n1934,2.228346454\r\n1935,2.448818895\r\n1936,2.295275588\r\n1937,2.519685037\r\n1938,2.622047241\r\n1939,2.826771651\r\n1940,2.618110234\r\n1941,3.098425194\r\n1942,3.098425194\r\n1943,3.098425194\r\n1944,2.84645669\r\n1945,2.95669291\r\n1946,3.251968501\r\n1947,3.374015745\r\n1948,3.562992122\r\n1949,3.51181102\r\n1950,3.598425193\r\n1951,3.972440941\r\n1952,3.870078736\r\n1953,4.043307082\r\n1954,3.929133854\r\n1955,3.964566925\r\n1956,3.763779524\r\n1957,4.291338578\r\n1958,4.346456688\r\n1959,4.358267712\r\n1960,4.503937003\r\n1961,4.748031491\r\n1962,4.543307082\r\n1963,4.480314956\r\n1964,4.169291334\r\n1965,4.610236216\r\n1966,4.397637791\r\n1967,4.452755901\r\n1968,4.484251964\r\n1969,4.751968499\r\n1970,4.67716535\r\n1971,4.881889759\r\n1972,5.240157475\r\n1973,5.003937003\r\n1974,5.472440939\r\n1975,5.409448813\r\n1976,5.370078735\r\n1977,5.303149601\r\n1978,5.555118105\r\n1979,5.362204719\r\n1980,5.598425191\r\n1981,6.086614167\r\n1982,5.858267711\r\n1983,6.188976372\r\n1984,6.153543301\r\n1985,5.74803149\r\n1986,5.771653537\r\n1987,5.795275585\r\n1988,5.980314955\r\n1989,6.157480309\r\n1990,6.24803149\r\n1991,6.346456686\r\n1992,6.374015742\r\n1993,6.306781039\r\n1994,6.438651665\r\n1995,6.57674495\r\n1996,6.723710173\r\n1997,6.779514525\r\n1998,6.770265291\r\n1999,6.840497137\r\n2000,6.919122465\r\n2001,7.116325549\r\n2002,7.258223788\r\n2003,7.410511627\r\n2004,7.465565214\r\n2005,7.566645782\r\n2006,7.678404507\r\n2007,7.674412818\r\n2008,7.828383728\r\n2009,7.973212968\r\n2010,8.03087412\r\n2011,7.966928207\r\n2012,8.362109902\r\n2013,8.453537927\r\n2014,8.579036068\r\n2015,8.92498423\r\n2016,9.048398764\r\n2017,9.11098598\r\n2018,9.234520538\r\n2019,9.480222637\r\n2020,9.592476574\r\n2021,9.797220121",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43eb6bf80f41c5e0a55dd",
        "createdAt": "2025-03-14T14:38:38.019Z",
        "updatedAt": "2025-03-14T14:38:38.019Z",
        "id": "67d43eb6bf80f41c5e0a55dd"
      },
      {
        "name": "map.json",
        "content": "{\n  \"surfaces\": [\n    {\n      \"id\": 0,\n      \"res\": 20,\n      \"x\": -562,\n      \"y\": -33,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": 133,\n          \"y\": 404,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 195,\n          \"y\": 432,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": 148,\n          \"y\": 525,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 205,\n          \"y\": 561,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    },\n    {\n      \"id\": 1,\n      \"res\": 20,\n      \"x\": -547,\n      \"y\": 254,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": 180,\n          \"y\": 145,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 299,\n          \"y\": 129,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": 188,\n          \"y\": 276,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 303,\n          \"y\": 251,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    },\n    {\n      \"id\": 2,\n      \"res\": 20,\n      \"x\": -316,\n      \"y\": 8,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": 52,\n          \"y\": 32,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 180,\n          \"y\": 39,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": 73,\n          \"y\": 498,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 176,\n          \"y\": 522,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    },\n    {\n      \"id\": 3,\n      \"res\": 20,\n      \"x\": -132,\n      \"y\": -196,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": 154,\n          \"y\": 603,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 243,\n          \"y\": 587,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": 142,\n          \"y\": 727,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 227,\n          \"y\": 705,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    },\n    {\n      \"id\": 4,\n      \"res\": 20,\n      \"x\": -306,\n      \"y\": -236,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": 172,\n          \"y\": 284,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 246,\n          \"y\": 291,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": 166,\n          \"y\": 766,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 229,\n          \"y\": 734,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    },\n    {\n      \"id\": 5,\n      \"res\": 20,\n      \"x\": -210,\n      \"y\": 253,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": 140,\n          \"y\": 130,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 231,\n          \"y\": 152,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": 135,\n          \"y\": 245,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 221,\n          \"y\": 277,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    },\n    {\n      \"id\": 6,\n      \"res\": 20,\n      \"x\": -14,\n      \"y\": -19,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": -33,\n          \"y\": 266,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 101,\n          \"y\": 266,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": -33,\n          \"y\": 402,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 95,\n          \"y\": 406,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    }\n  ],\n  \"lines\": []\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43eb6bf80f41c5e0a55d9",
        "createdAt": "2025-03-14T14:38:38.019Z",
        "updatedAt": "2025-03-14T14:38:38.019Z",
        "id": "67d43eb6bf80f41c5e0a55d9"
      }
    ],
    "createdAt": "2025-03-14T14:35:35.862Z",
    "updatedAt": "2025-03-14T14:38:38.019Z",
    "id": "EhT9uSFug"
  },
  {
    "_id": "t92XI22vi",
    "name": "p5.mapper workshop base code copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d43e17bf80f41c5e0a55c7",
          "67d43e17bf80f41c5e0a55ca",
          "67d43e17bf80f41c5e0a55cb",
          "67d43e17bf80f41c5e0a55cc",
          "67d43e17bf80f41c5e0a55cd",
          "67d43e17bf80f41c5e0a55ce",
          "67d43e17bf80f41c5e0a55cf",
          "67d43e17bf80f41c5e0a55d0",
          "67d43e17bf80f41c5e0a55d1",
          "67d43e17bf80f41c5e0a55d2",
          "67d43e17bf80f41c5e0a55d3"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d43e17bf80f41c5e0a55c6",
        "createdAt": "2024-03-15T16:35:25.997Z",
        "updatedAt": "2024-03-15T16:35:25.997Z",
        "id": "67d43e17bf80f41c5e0a55c6"
      },
      {
        "name": "sketch.js",
        "content": "/*\n * p5.mapper\n * https://github.com/jdeboi/p5.mapper\n *\n * Jenna deBoisblanc\n * jdeboi.com\n *\n */\n\nlet pMapper;\nlet quad0, quad1, quad2, quad3, quad4, quad5, quad6, quad7; // my quad surfaces\nlet myVideo;\nlet videoPlaying = false;\n\nlet myFont;\nlet myImage;\n\n//dataset related variables:\nlet seaData;\nlet seaDataIndex = 100;\nlet prevMillis = 0;\nlet interval = 2000;\nlet currentDataPoint = 60;\n\nfunction preload() { // load images, fonts and videos\n  myImage = loadImage(\"sea1.png\");\n  myFont = loadFont(\"assets/Roboto.ttf\");\n  myVideo = createVideo('water2.mp4'); \n  seaData = loadTable('sealevel.csv', 'csv', 'header');\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight, WEBGL);\n  textFont(myFont);\n\n  // create mapper object\n  pMapper = createProjectionMapper(this);\n\n  quad0 = pMapper.createQuadMap(400, 400);\n  quad1 = pMapper.createQuadMap(400, 400);\n  quad2 = pMapper.createQuadMap(200, 700);\n  quad3 = pMapper.createQuadMap(400, 400);\n  quad4 = pMapper.createQuadMap(400, 400);\n  quad5 = pMapper.createQuadMap(400, 400);\n  quad6 = pMapper.createQuadMap(400, 400);\n\n  // loads calibration in the \"maps\" directory\n  pMapper.load(\"map.json\");\n  myVideo.hide(); // hide the video element\n}\n\nfunction draw() {\n  background(0);\n\n  quad0.displaySketch(playVideo);\n  quad1.displayTexture(myImage);// display a still image\n  quad2.display(color('blue'));\n  quad4.display(color('orange'));\n  \n  quad3.displaySketch(waterLevel);\n  quad5.displaySketch(waterLevel);\n  quad6.display(color('blue'));\n  //quad0.displaySketch(mySketch);\n  //quad0.displayTexture(myImage);\n  //quad0.displaySketch(playVideo);\n}\n\nfunction mySketch(pg){\n  pg.clear();\n  pg.push();\n  // your sketch goes between push and pop. remember to use the 'pg.' prefix for all p5 functions\n  pg.background(color('white'));\n  pg.textFont(myFont);\n  pg.textAlign(CENTER,CENTER);\n  pg.textSize(70);\n  pg.fill(color('black'));\n  pg.text('hello world',200,175);\n  // ends here\n  pg.pop();\n}\n\nfunction playVideo(pg){\n  pg.clear();\n  pg.push();\n  if(videoPlaying == false){\n    pg.background(255);\n    pg.fill(0);\n    pg.textAlign(CENTER,CENTER);\n    pg.textSize(30);\n    pg.text(\"click to start video\",200,200);\n  } else {\n    pg.image(myVideo,0,0,400,400);\n  }\n  pg.pop();\n}\n\nfunction waterLevel(pg){\n  pg.clear();\n  pg.push();\n  // your mini sketch goes here!\n  \n  pg.background(255);\n  \n  if(millis()>(prevMillis+interval)){\n    seaDataIndex++;\n    prevMillis = millis();\n    if(seaDataIndex == seaData.rows.length){\n      seaDataIndex = 0;\n    }\n  }\n  \n  pg.rectMode(CORNERS);\n  \n  currentDataPoint = lerp(currentDataPoint, seaData.rows[seaDataIndex].obj.sealevel, 0.1);\n  \n  \n  let h = map(currentDataPoint,0,12,0,400);\n  pg.fill(0,0,255);\n  pg.rect(0,400,400,(400-h));\n  pg.fill(255);\n  pg.textSize(25);\n  pg.textAlign(CENTER,CENTER);\n  pg.text(currentDataPoint.toFixed(2)+\" inches\",200,(400-h)+25);\n  \n  // and ends here!\n  pg.pop();\n}\n\nfunction waterYear(pg){\n    pg.clear();\n    pg.push();\n      pg.background(0,0,255);\n      pg.textSize(100);\n      pg.fill(255);\n      pg.textFont(myFont);\n      pg.textAlign(CENTER,CENTER);\n      pg.text(seaData.rows[seaDataIndex].obj.Year,200,100);\n    pg.pop();\n}\n\nfunction keyPressed() {\n  switch (key) {\n    case \"c\":\n      pMapper.toggleCalibration();\n      break;\n    case \"f\":\n      let fs = fullscreen();\n      fullscreen(!fs);\n      break;\n    case \"l\":\n      pMapper.load(\"map.json\");\n      break;\n\n    case \"s\":\n      pMapper.save(\"map.json\");\n      break;\n  }\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n\nfunction displayFrameRate() {\n  fill(255);\n  noStroke();\n  text(round(frameRate()), -width / 2 + 15, -height / 2 + 50);\n}\n\nfunction mousePressed(){ // videos need to start on click\n  videoPlaying = true;\n  myVideo.loop();\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43e17bf80f41c5e0a55d0",
        "createdAt": "2024-03-15T16:35:25.997Z",
        "updatedAt": "2024-03-15T16:35:25.997Z",
        "id": "67d43e17bf80f41c5e0a55d0"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://cdn.statically.io/gh/jdeboi/p5.mapper/main/dist/p5.mapper.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67d43e17bf80f41c5e0a55ca",
        "createdAt": "2024-03-15T16:35:25.997Z",
        "updatedAt": "2024-03-15T16:35:25.997Z",
        "id": "67d43e17bf80f41c5e0a55ca"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43e17bf80f41c5e0a55d1",
        "createdAt": "2024-03-15T16:35:25.997Z",
        "updatedAt": "2024-03-15T16:35:25.997Z",
        "id": "67d43e17bf80f41c5e0a55d1"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "67d43e17bf80f41c5e0a55c8",
          "67d43e17bf80f41c5e0a55c9"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d43e17bf80f41c5e0a55c7",
        "createdAt": "2024-03-15T16:35:25.997Z",
        "updatedAt": "2024-03-15T16:35:25.997Z",
        "id": "67d43e17bf80f41c5e0a55c7"
      },
      {
        "name": "catnap.jpg",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/423076a5-0840-4e62-b70a-0d09c8cf9ad4.jpg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43e17bf80f41c5e0a55c9",
        "createdAt": "2024-03-15T16:35:25.997Z",
        "updatedAt": "2024-03-15T16:35:25.997Z",
        "id": "67d43e17bf80f41c5e0a55c9"
      },
      {
        "name": "Roboto.ttf",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/fd82f37e-8b92-42f7-9ad4-76a637e6e032.ttf",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43e17bf80f41c5e0a55c8",
        "createdAt": "2024-03-15T16:35:25.997Z",
        "updatedAt": "2024-03-15T16:35:25.997Z",
        "id": "67d43e17bf80f41c5e0a55c8"
      },
      {
        "name": "watercropped.mp4",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/776ff897-ea3e-4607-a387-33aee503ab96.mp4",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43e17bf80f41c5e0a55d3",
        "createdAt": "2024-03-15T16:35:25.997Z",
        "updatedAt": "2024-03-15T16:35:25.997Z",
        "id": "67d43e17bf80f41c5e0a55d3"
      },
      {
        "name": "sea2.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/7bba0b6a-f78c-4e7f-8865-af566fd91030.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43e17bf80f41c5e0a55cd",
        "createdAt": "2024-03-15T16:35:25.997Z",
        "updatedAt": "2024-03-15T16:35:25.997Z",
        "id": "67d43e17bf80f41c5e0a55cd"
      },
      {
        "name": "sea1.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/5085e6f9-169d-4383-a620-587c04f483b8.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43e17bf80f41c5e0a55cc",
        "createdAt": "2024-03-15T16:35:25.997Z",
        "updatedAt": "2024-03-15T16:35:25.997Z",
        "id": "67d43e17bf80f41c5e0a55cc"
      },
      {
        "name": "sea3.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/b0c644cf-3864-46a6-b0af-9ddec8aacfeb.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43e17bf80f41c5e0a55ce",
        "createdAt": "2024-03-15T16:35:25.997Z",
        "updatedAt": "2024-03-15T16:35:25.997Z",
        "id": "67d43e17bf80f41c5e0a55ce"
      },
      {
        "name": "water2.mp4",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/2dda816c-c3f8-4466-b14a-b83dcdf72ada.mp4",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43e17bf80f41c5e0a55d2",
        "createdAt": "2024-03-15T16:35:25.997Z",
        "updatedAt": "2024-03-15T16:35:25.997Z",
        "id": "67d43e17bf80f41c5e0a55d2"
      },
      {
        "name": "sealevel.csv",
        "content": "Year,sealevel\r\n1880,0\r\n1881,0.220472441\r\n1882,-0.440944881\r\n1883,-0.232283464\r\n1884,0.59055118\r\n1885,0.531496062\r\n1886,0.437007874\r\n1887,0.216535433\r\n1888,0.299212598\r\n1889,0.362204724\r\n1890,0.440944881\r\n1891,0.374015748\r\n1892,0.499999999\r\n1893,0.685039369\r\n1894,0.303149606\r\n1895,0.767716535\r\n1896,0.468503937\r\n1897,0.673228346\r\n1898,1.043307086\r\n1899,1.338582676\r\n1900,1.125984251\r\n1901,1.110236219\r\n1902,1.291338581\r\n1903,1.606299211\r\n1904,1.2007874\r\n1905,0.984251968\r\n1906,1.251968503\r\n1907,1.196850392\r\n1908,1.098425196\r\n1909,1.27559055\r\n1910,1.271653542\r\n1911,1.598425195\r\n1912,1.476377951\r\n1913,1.547244093\r\n1914,1.795275589\r\n1915,2.10629921\r\n1916,2.031496061\r\n1917,1.854330707\r\n1918,1.791338581\r\n1919,1.854330707\r\n1920,1.905511809\r\n1921,1.988188974\r\n1922,1.952755904\r\n1923,1.999999998\r\n1924,1.712598423\r\n1925,1.791338581\r\n1926,2.047244092\r\n1927,2.003937006\r\n1928,1.850393699\r\n1929,1.905511809\r\n1930,2.062992124\r\n1931,2.047244092\r\n1932,2.271653541\r\n1933,2.440944879\r\n1934,2.228346454\r\n1935,2.448818895\r\n1936,2.295275588\r\n1937,2.519685037\r\n1938,2.622047241\r\n1939,2.826771651\r\n1940,2.618110234\r\n1941,3.098425194\r\n1942,3.098425194\r\n1943,3.098425194\r\n1944,2.84645669\r\n1945,2.95669291\r\n1946,3.251968501\r\n1947,3.374015745\r\n1948,3.562992122\r\n1949,3.51181102\r\n1950,3.598425193\r\n1951,3.972440941\r\n1952,3.870078736\r\n1953,4.043307082\r\n1954,3.929133854\r\n1955,3.964566925\r\n1956,3.763779524\r\n1957,4.291338578\r\n1958,4.346456688\r\n1959,4.358267712\r\n1960,4.503937003\r\n1961,4.748031491\r\n1962,4.543307082\r\n1963,4.480314956\r\n1964,4.169291334\r\n1965,4.610236216\r\n1966,4.397637791\r\n1967,4.452755901\r\n1968,4.484251964\r\n1969,4.751968499\r\n1970,4.67716535\r\n1971,4.881889759\r\n1972,5.240157475\r\n1973,5.003937003\r\n1974,5.472440939\r\n1975,5.409448813\r\n1976,5.370078735\r\n1977,5.303149601\r\n1978,5.555118105\r\n1979,5.362204719\r\n1980,5.598425191\r\n1981,6.086614167\r\n1982,5.858267711\r\n1983,6.188976372\r\n1984,6.153543301\r\n1985,5.74803149\r\n1986,5.771653537\r\n1987,5.795275585\r\n1988,5.980314955\r\n1989,6.157480309\r\n1990,6.24803149\r\n1991,6.346456686\r\n1992,6.374015742\r\n1993,6.306781039\r\n1994,6.438651665\r\n1995,6.57674495\r\n1996,6.723710173\r\n1997,6.779514525\r\n1998,6.770265291\r\n1999,6.840497137\r\n2000,6.919122465\r\n2001,7.116325549\r\n2002,7.258223788\r\n2003,7.410511627\r\n2004,7.465565214\r\n2005,7.566645782\r\n2006,7.678404507\r\n2007,7.674412818\r\n2008,7.828383728\r\n2009,7.973212968\r\n2010,8.03087412\r\n2011,7.966928207\r\n2012,8.362109902\r\n2013,8.453537927\r\n2014,8.579036068\r\n2015,8.92498423\r\n2016,9.048398764\r\n2017,9.11098598\r\n2018,9.234520538\r\n2019,9.480222637\r\n2020,9.592476574\r\n2021,9.797220121",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43e17bf80f41c5e0a55cf",
        "createdAt": "2024-03-15T16:35:25.997Z",
        "updatedAt": "2024-03-15T16:35:25.997Z",
        "id": "67d43e17bf80f41c5e0a55cf"
      },
      {
        "name": "map.json",
        "content": "{\n  \"surfaces\": [\n    {\n      \"id\": 0,\n      \"res\": 20,\n      \"x\": -562,\n      \"y\": -33,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": 133,\n          \"y\": 404,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 195,\n          \"y\": 432,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": 148,\n          \"y\": 525,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 205,\n          \"y\": 561,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    },\n    {\n      \"id\": 1,\n      \"res\": 20,\n      \"x\": -547,\n      \"y\": 254,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": 180,\n          \"y\": 145,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 299,\n          \"y\": 129,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": 188,\n          \"y\": 276,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 303,\n          \"y\": 251,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    },\n    {\n      \"id\": 2,\n      \"res\": 20,\n      \"x\": -316,\n      \"y\": 8,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": 52,\n          \"y\": 32,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 180,\n          \"y\": 39,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": 73,\n          \"y\": 498,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 176,\n          \"y\": 522,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    },\n    {\n      \"id\": 3,\n      \"res\": 20,\n      \"x\": -132,\n      \"y\": -196,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": 154,\n          \"y\": 603,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 243,\n          \"y\": 587,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": 142,\n          \"y\": 727,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 227,\n          \"y\": 705,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    },\n    {\n      \"id\": 4,\n      \"res\": 20,\n      \"x\": -306,\n      \"y\": -236,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": 172,\n          \"y\": 284,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 246,\n          \"y\": 291,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": 166,\n          \"y\": 766,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 229,\n          \"y\": 734,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    },\n    {\n      \"id\": 5,\n      \"res\": 20,\n      \"x\": -210,\n      \"y\": 253,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": 140,\n          \"y\": 130,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 231,\n          \"y\": 152,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": 135,\n          \"y\": 245,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 221,\n          \"y\": 277,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    },\n    {\n      \"id\": 6,\n      \"res\": 20,\n      \"x\": -14,\n      \"y\": -19,\n      \"type\": \"QUAD\",\n      \"points\": [\n        {\n          \"i\": 0,\n          \"x\": -33,\n          \"y\": 266,\n          \"u\": 0,\n          \"v\": 0\n        },\n        {\n          \"i\": 19,\n          \"x\": 101,\n          \"y\": 266,\n          \"u\": 0.95,\n          \"v\": 0\n        },\n        {\n          \"i\": 380,\n          \"x\": -33,\n          \"y\": 402,\n          \"u\": 0,\n          \"v\": 0.95\n        },\n        {\n          \"i\": 399,\n          \"x\": 95,\n          \"y\": 406,\n          \"u\": 0.95,\n          \"v\": 0.95\n        }\n      ]\n    }\n  ],\n  \"lines\": []\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d43e17bf80f41c5e0a55cb",
        "createdAt": "2024-03-15T16:35:25.997Z",
        "updatedAt": "2024-03-15T16:35:25.997Z",
        "id": "67d43e17bf80f41c5e0a55cb"
      }
    ],
    "createdAt": "2025-03-14T14:32:56.356Z",
    "updatedAt": "2025-03-14T14:32:56.356Z",
    "id": "t92XI22vi"
  },
  {
    "_id": "18DmIjkPC",
    "name": "Particle System Basic shooting out",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66fcb3ed62df0bc1ef495df9",
          "66fcb42bcd0ad41dd30acd32",
          "66fcb3ed62df0bc1ef495dfa",
          "66fcb3ed62df0bc1ef495dfb"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66fcb3ed62df0bc1ef495df8",
        "createdAt": "2024-10-02T03:52:32.666Z",
        "updatedAt": "2024-10-02T03:52:32.666Z",
        "id": "66fcb3ed62df0bc1ef495df8"
      },
      {
        "name": "sketch.js",
        "content": "\nlet particles = [];\n\nfunction setup() {\n  createCanvas(400, 400);\n  p = new Particle(width/2, height/2);\n}\n\nfunction draw() {\n  background(220);\n  \n  particles.push(new Particle(width/2, height/2));\n  \n  for (let i = 0; i<particles.length; i++){\n    particles[i].update();\n    particles[i].display();\n  }\n  \n  print(particles.length);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fcb3ed62df0bc1ef495dfa",
        "createdAt": "2024-10-02T03:52:32.666Z",
        "updatedAt": "2024-10-02T03:52:32.666Z",
        "id": "66fcb3ed62df0bc1ef495dfa"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fcb3ed62df0bc1ef495df9",
        "createdAt": "2024-10-02T03:52:32.666Z",
        "updatedAt": "2024-10-02T03:52:32.666Z",
        "id": "66fcb3ed62df0bc1ef495df9"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fcb3ed62df0bc1ef495dfb",
        "createdAt": "2024-10-02T03:52:32.666Z",
        "updatedAt": "2024-10-02T03:52:32.666Z",
        "id": "66fcb3ed62df0bc1ef495dfb"
      },
      {
        "name": "particle.js",
        "content": "class Particle {\n  constructor(x, y){\n    this.pos = createVector(x, y)\n    this.vel = createVector(0, 0)\n    this.acc = p5.Vector.random2D();\n    this.acc.mult(0.05);\n    this.life = 255;\n  }\n  \n  update(){\n    this.vel.add(this.acc);\n    this.pos.add(this.vel);\n    \n    this.life -= 5;\n    this.done = false;\n  }\n  \n  display(){\n    fill(255, 0, 0, this.life);\n    \n    ellipse(this.pos.x, this.pos.y, 10, 10);\n  }\n\n  finished(){\n      if (this.life < 0){\n       this.done = true;\n      } else {this.done = false}\n  }\n} ",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66fcb42bcd0ad41dd30acd32",
        "createdAt": "2024-10-02T03:52:32.666Z",
        "updatedAt": "2024-10-02T03:52:32.666Z",
        "id": "66fcb42bcd0ad41dd30acd32"
      }
    ],
    "createdAt": "2024-10-02T02:46:05.306Z",
    "updatedAt": "2024-10-02T03:52:32.666Z",
    "id": "18DmIjkPC"
  },
  {
    "_id": "Xb_rfzGG2",
    "name": "Particle System Model",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66fcc2680e0eea00fdb2ea2c",
          "66fcc2680e0eea00fdb2ea2d",
          "66fcc2680e0eea00fdb2ea2e",
          "66fcc2680e0eea00fdb2ea2f",
          "66fcc2680e0eea00fdb2ea30"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66fcc2680e0eea00fdb2ea2b",
        "createdAt": "2024-10-02T03:52:51.274Z",
        "updatedAt": "2024-10-02T03:52:51.274Z",
        "id": "66fcc2680e0eea00fdb2ea2b"
      },
      {
        "name": "sketch.js",
        "content": "let ps = [];\n\nfunction setup() {\n  createCanvas(400, 400);\n  colorMode(HSB, 255);\n}\n\nfunction draw() {\n  background(0,0,0,150);\n  \n  if(random() < 0.3){\n    ps.push(new System(width/2, height/2));\n  }\n  \n  for(let i = ps.length - 1; i >=  0; i--){\n    ps[i].update();\n    ps[i].display();\n    \n    if(ps[i].done){\n      ps.splice(i, 1)\n    }\n  }\n  \n}\n \n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fcc2680e0eea00fdb2ea2e",
        "createdAt": "2024-10-02T03:52:51.274Z",
        "updatedAt": "2024-10-02T03:52:51.274Z",
        "id": "66fcc2680e0eea00fdb2ea2e"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n    <script src=\"system.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fcc2680e0eea00fdb2ea2c",
        "createdAt": "2024-10-02T03:52:51.274Z",
        "updatedAt": "2024-10-02T03:52:51.274Z",
        "id": "66fcc2680e0eea00fdb2ea2c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fcc2680e0eea00fdb2ea2f",
        "createdAt": "2024-10-02T03:52:51.274Z",
        "updatedAt": "2024-10-02T03:52:51.274Z",
        "id": "66fcc2680e0eea00fdb2ea2f"
      },
      {
        "name": "particle.js",
        "content": "class Particle {\n  constructor(x, y){\n    this.pos = createVector(x, y)\n    this.vel = createVector(0, 0)\n    this.acc = p5.Vector.random2D();\n    this.acc.mult(0.02);\n    this.life = 255;\n    this.done = false;\n    this.hueValue = 0;\n  }\n  \n  update(){\n    this.finished();\n    \n    this.vel.add(this.acc);\n    this.pos.add(this.vel);\n    \n    this.life -= 2;\n    \n    if(this.hueValue >250){\n      this.hueValue = 0;\n    }\n    this.hueValue +=1;\n  }\n  \n  display(){\n    noStroke();\n    fill(this.hueValue, 255, this.life);\n    ellipse(this.pos.x, this.pos.y, 2, 2);\n  }\n\n  finished(){\n    if (this.life < 0){\n      this.done = true;\n    } else {\n      this.done = false;\n    }\n  }\n} ",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66fcc2680e0eea00fdb2ea2d",
        "createdAt": "2024-10-02T03:52:51.274Z",
        "updatedAt": "2024-10-02T03:52:51.274Z",
        "id": "66fcc2680e0eea00fdb2ea2d"
      },
      {
        "name": "system.js",
        "content": "class System{\n  constructor(x,y){\n    this.x = x;\n    this.y = y;\n    \n    this.particles = []; \n    this.num = 50;\n    for(let i = 0; i < this.num; i++){\n    this.particles.push(new     Particle(this.x, this.y));\n  }\n    this.done = false;\n}\n\n\nupdate(){\n  this.finished();\n    for (let i = this.particles.length - 1; i >= 0; i--){\n    this.particles[i].update();\n    \n    if (this.particles[i].done){\n      this.particles.splice(i, 1);\n    } \n  }\n}\n\ndisplay(){\n  for(let i = 0; i < this.particles.length; i ++){\n    this.particles[i].display();\n  }\n}\n  \n  finished(){\n    if(this.particles.length == 0){\n      this.done = true;\n    } else {\n    this.done = false;\n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fcc2680e0eea00fdb2ea30",
        "createdAt": "2024-10-02T03:52:51.274Z",
        "updatedAt": "2024-10-02T03:52:51.274Z",
        "id": "66fcc2680e0eea00fdb2ea30"
      }
    ],
    "createdAt": "2024-10-02T03:47:51.649Z",
    "updatedAt": "2024-10-02T03:52:51.274Z",
    "id": "Xb_rfzGG2"
  },
  {
    "_id": "ujU4rYfsJ",
    "name": "Pickled crime",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "679cf82d1c3c46297c1b30dd",
          "679cf82d1c3c46297c1b30dc",
          "679cf82d1c3c46297c1b30de"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "679cf82d1c3c46297c1b30df",
        "createdAt": "2025-01-31T16:44:28.100Z",
        "updatedAt": "2025-01-31T16:44:28.100Z",
        "id": "679cf82d1c3c46297c1b30df"
      },
      {
        "name": "sketch.js",
        "content": "let day1 = [\n  0,\n  2,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  2,\n  2,\n  0,\n  1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  1,\n  1,\n];\n\nlet graphX = 50;\nlet graphY = 200;\nlet graphAmplitude = 10;\nlet graphPeriod = 70;\n//////^^ controls height\n/////////////////////////////////////\nlet circleX = 200;\nlet circleY = 200;\nlet circleRadius = 100;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n  let angle = PI / 12;\n\n  for (i = 0; i < 25; i++) {\n    if (day1[i] == 0) {\n      arc(200, 200, 100, 100, (PI / 12) * i, (PI / 12) * i + PI / 12);\n    } else {\n    }\n\n    noFill();\n    stroke(\"red\");\n\n    beginShape();\n    for (let c = 0; c <= TWO_PI + QUARTER_PI / 12; c += PI/12) {\n      for (let t = PI/24; t <= TWO_PI + PI/24; t+= 0.01) {\n        let x = map(t, 0, 100, graphX, graphX + graphPeriod);\n        let y = graphY - graphAmplitude * sin(t);\n        let distance = dist(circleX, circleY, x, y);\n        // console.log(distance);\n        let pointX = circleX + distance * cos(c);\n        let pointY = circleY - distance * sin(c);\n        vertex(pointX, pointY);\n      }\n    }\n\n    endShape();\n    // beginShape();\n    // for (let t = 0; t <= 50; t++) {\n    //   let x = map(t, 0, 50, graphX, graphX + graphPeriod);\n    //   let y = graphY - graphAmplitude * sin(t);\n    //   vertex(x, y);\n    // }\n    // endShape();\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "679cf82d1c3c46297c1b30dc",
        "createdAt": "2025-01-31T16:44:28.100Z",
        "updatedAt": "2025-01-31T16:44:28.100Z",
        "id": "679cf82d1c3c46297c1b30dc"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679cf82d1c3c46297c1b30dd",
        "createdAt": "2025-01-31T16:44:28.100Z",
        "updatedAt": "2025-01-31T16:44:28.100Z",
        "id": "679cf82d1c3c46297c1b30dd"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679cf82d1c3c46297c1b30de",
        "createdAt": "2025-01-31T16:44:28.100Z",
        "updatedAt": "2025-01-31T16:44:28.100Z",
        "id": "679cf82d1c3c46297c1b30de"
      }
    ],
    "updatedAt": "2025-01-31T16:44:28.100Z",
    "createdAt": "2025-01-31T16:20:01.083Z",
    "id": "ujU4rYfsJ"
  },
  {
    "_id": "PNn4usatr",
    "name": "PoseNet Example 1 copy copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67b678e05f77853185966355",
          "67b678e05f77853185966356",
          "67b678e05f77853185966357"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67b678e05f77853185966354",
        "createdAt": "2025-02-20T00:35:49.383Z",
        "updatedAt": "2025-02-20T00:35:49.383Z",
        "id": "67b678e05f77853185966354"
      },
      {
        "name": "sketch.js",
        "content": "// ml5.js: Pose Estimation with PoseNet\n// The Coding Train / Daniel Shiffman\n// https://thecodingtrain.com/Courses/ml5-beginners-guide/7.1-posenet.html\n// https://youtu.be/OIo-DIOkNVg\n// https://editor.p5js.org/codingtrain/sketches/ULA97pJXR\n\nlet video;\nlet poseNet;\nlet pose;\nlet pose2; \nlet skeleton;\nlet skeleton2;\n\nfunction setup() {\n  createCanvas(640, 480);\n  video = createCapture(VIDEO);\n  video.hide();\n  poseNet = ml5.poseNet(video, modelLoaded);\n  poseNet.on('pose', gotPoses);\n}\n\nfunction gotPoses(poses) {\n  if (poses.length > 0) {\n    // make sure to comment out print statements to improvement performance\n    // print(\"length: \", poses.length)\n    // print(poses)\n    pose = poses[0].pose;\n    skeleton = poses[0].skeleton;\n    if(poses.length > 1) {\n      pose2 = poses[1].pose;\n      skeleton2 = poses[1].skeleton;\n    }\n    else {\n      pose2 = null;\n      skeleton2 = null;\n    }\n  }\n  else {\n    pose = null;\n    skeleton = null; \n  }\n}\n\n\nfunction modelLoaded() {\n  console.log('poseNet ready');\n}\n\nfunction draw() {\n  image(video, 0, 0);\n  \n  // draw person 1 - red \n  if (pose) {\n    fill(255, 0, 0);\n    ellipse(pose.nose.x, pose.nose.y, 50);\n  }\n  // draw person 2 - green \n  if(pose2) {\n    fill(0, 255, 0);\n    ellipse(pose2.nose.x, pose2.nose.y, 50);\n  }\n  \n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67b678e05f77853185966356",
        "createdAt": "2025-02-20T00:35:49.383Z",
        "updatedAt": "2025-02-20T00:35:49.383Z",
        "id": "67b678e05f77853185966356"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n\n<head>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n  <script src=\"https://unpkg.com/ml5@0.5.0/dist/ml5.min.js\"></script>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  <meta charset=\"utf-8\" />\n\n</head>\n\n<body>\n  <script src=\"sketch.js\"></script>\n</body>\n\n</html>",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b678e05f77853185966355",
        "createdAt": "2025-02-20T00:35:49.383Z",
        "updatedAt": "2025-02-20T00:35:49.383Z",
        "id": "67b678e05f77853185966355"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b678e05f77853185966357",
        "createdAt": "2025-02-20T00:35:49.383Z",
        "updatedAt": "2025-02-20T00:35:49.383Z",
        "id": "67b678e05f77853185966357"
      }
    ],
    "createdAt": "2025-02-20T00:35:44.822Z",
    "updatedAt": "2025-02-20T00:35:49.383Z",
    "id": "PNn4usatr"
  },
  {
    "_id": "IioxS2ts9",
    "name": "Quintessential war",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6706d04a676fb440ec165204",
          "6706d6b8aba1620540a6fde9",
          "6706d04a676fb440ec165203",
          "6706d04a676fb440ec165205"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6706d04a676fb440ec165206",
        "createdAt": "2024-10-09T23:42:54.122Z",
        "updatedAt": "2024-10-09T23:42:54.122Z",
        "id": "6706d04a676fb440ec165206"
      },
      {
        "name": "sketch.js",
        "content": "var song;\nvar fft;\n\nfunction preload(){\n  song = loadSound('music.mp3')\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  fft = new p5.FFT();\n  angleMode(DEGREES);\n  song.pause();\n}\n\nfunction draw() {\n  stroke(255);\n  background(0);\n  noFill();\n  translate(width/2, height/2)\n  \n  var wave = fft.waveform();\n  \n  for(var t = -1; t <= 1; t += 2){\n    beginShape();\n    for(var i = 0; i <=180; i ++  ){\n    var index = floor(map(i, 0, 180, 0, wave.length-1));\n    var r = map(wave[index], -1, 1, 250, 360)\n    var x = r * sin(i) * t;\n    var y = r * cos(i);\n    vertex(x,y);\n  }\n  endShape();\n  }\n  \n\n}\n\nfunction mouseClicked(){\n  if(song.isPlaying()) {\n    song.pause()\n      }else {\n       song.play();\n      }\n  }",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6706d04a676fb440ec165203",
        "createdAt": "2024-10-09T23:42:54.122Z",
        "updatedAt": "2024-10-09T23:42:54.122Z",
        "id": "6706d04a676fb440ec165203"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6706d04a676fb440ec165204",
        "createdAt": "2024-10-09T23:42:54.122Z",
        "updatedAt": "2024-10-09T23:42:54.122Z",
        "id": "6706d04a676fb440ec165204"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6706d04a676fb440ec165205",
        "createdAt": "2024-10-09T23:42:54.122Z",
        "updatedAt": "2024-10-09T23:42:54.122Z",
        "id": "6706d04a676fb440ec165205"
      },
      {
        "name": "music.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/7561d06e-668d-4055-ab6c-934633499a2c.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6706d6b8aba1620540a6fde9",
        "createdAt": "2024-10-09T23:42:54.122Z",
        "updatedAt": "2024-10-09T23:42:54.122Z",
        "id": "6706d6b8aba1620540a6fde9"
      }
    ],
    "updatedAt": "2024-10-09T23:42:54.122Z",
    "createdAt": "2024-10-09T19:46:48.576Z",
    "id": "IioxS2ts9"
  },
  {
    "_id": "vOA5hmayN",
    "name": "replicate txt2t jennifer copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "673696bf6f2d5612b5164de7",
          "673696bf6f2d5612b5164de8",
          "673696bf6f2d5612b5164de9"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "673696bf6f2d5612b5164de6",
        "createdAt": "2024-11-15T01:12:53.215Z",
        "updatedAt": "2024-11-15T01:12:53.215Z",
        "id": "673696bf6f2d5612b5164de6"
      },
      {
        "name": "sketch.js",
        "content": "const replicateProxy = \"https://replicate-api-proxy.glitch.me/create_n_get/\";\nlet feedback;\nlet emotionsColor = \"#FFFFFF\"; // Default color for the circle\n\nfunction setup() {\n    createCanvas(600, 1000); // Create a canvas with a width of 600 and height of 1000\n    feedback = createP(\"\");\n    let input_field = createInput(\"A sunny day with friends on the grass\");\n    input_field.id(\"input_prompt\");\n    input_field.size(450);\n    let myButton = createButton(\"AskWords\");\n    myButton.mousePressed(() => {\n        askForWords(input_field.value());\n    });\n}\n\nfunction draw() {\n    background(220);\n    fill(emotionsColor); // Set the circle's fill color to emotionsColor\n    circle(width / 2, height / 2 + 100, 100); // Draw the circle in the center of the canvas\n}\n\nasync function askForWords(p_prompt) {\n    document.body.style.cursor = \"progress\";\n    feedback.html(\"Waiting for reply from API...\");\n\n    const data = {\n        \"version\": \"2d19859030ff705a87c746f7e96eea03aefb71f166725aee39692f1476566d48\",\n        input: {\n            prompt: \"give me hex codes for html colors that reflect the emotions in this prompt: \" + p_prompt + \". Please return the hex codes as json. Please don't add a sentence before and after\"\n        },\n    };\n\n    console.log(\"Asking for Words From Replicate via Proxy\", data);\n\n    let options = {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: 'application/json',\n        },\n        body: JSON.stringify(data),\n    };\n\n    console.log(\"words url\", replicateProxy, \"words options\", options);\n    const words_response = await fetch(replicateProxy, options);\n    const proxy_said = await words_response.text(); // Get the response as text (not JSON)\n    console.log(\"words_text\", proxy_said);\n\n    // Now that we have the raw text, check if it's in the correct format\n    if (typeof proxy_said === \"string\" && proxy_said.trim()) {\n        // Use a regular expression to find hex codes in the response text\n        const hexCodeMatch = proxy_said.match(/#[A-Fa-f0-9]{6}/i); // Regex to find hex codes (case insensitive)\n\n        if (hexCodeMatch && hexCodeMatch.length > 0) {\n            emotionsColor = hexCodeMatch[0]; // Use the first hex code found\n            feedback.html(\"Received color: \" + emotionsColor); // Display the received color\n        } else {\n            feedback.html(\"No valid hex code found in the response.\");\n        }\n    } else {\n        feedback.html(\"The response is not in the expected format.\");\n    }\n\n    document.body.style.cursor = \"auto\";\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "673696bf6f2d5612b5164de8",
        "createdAt": "2024-11-15T01:12:53.215Z",
        "updatedAt": "2024-11-15T01:12:53.215Z",
        "id": "673696bf6f2d5612b5164de8"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.8.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.8.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673696bf6f2d5612b5164de7",
        "createdAt": "2024-11-15T01:12:53.215Z",
        "updatedAt": "2024-11-15T01:12:53.215Z",
        "id": "673696bf6f2d5612b5164de7"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673696bf6f2d5612b5164de9",
        "createdAt": "2024-11-15T01:12:53.215Z",
        "updatedAt": "2024-11-15T01:12:53.215Z",
        "id": "673696bf6f2d5612b5164de9"
      }
    ],
    "createdAt": "2024-11-15T00:33:03.236Z",
    "updatedAt": "2024-11-15T01:12:53.215Z",
    "id": "vOA5hmayN"
  },
  {
    "_id": "fds3R-0ZA",
    "name": "replicate voice transcription copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67537e54468c27b13d1ab59c",
          "67537e54468c27b13d1ab59d",
          "67537e54468c27b13d1ab59e"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67537e54468c27b13d1ab59b",
        "createdAt": "2024-12-09T03:29:08.580Z",
        "updatedAt": "2024-12-09T03:29:08.580Z",
        "id": "67537e54468c27b13d1ab59b"
      },
      {
        "name": "sketch.js",
        "content": "const replicateProxy = \"https://replicate-api-proxy.glitch.me\";\nconst replicateProxy1 = \"https://replicate-api-proxy.glitch.me/create_n_get/\";\nlet img;\nlet feedback;\nlet transcription = \"\"; // Global variable to store transcription\nlet textOpacity = 0;\nlet colorstrue = false;\nlet colors = [\"#FF0000\", \"#00FF00\", \"#0000FF\"];\nlet startTime; // To store the start time\nlet ballsStartMoving = false; // To control when the balls start moving\nlet ballYPositions;\nlet elapsedTime;\nlet rectY;\n\nfunction setup() {\n  createElement(\"br\");\n  feedback = createP(\"\");\n  createElement(\"br\");\n  feedback.position(10, 90);\n  let canvas = createCanvas(512, 512);\n  canvas.position(0, 120);\n  setupParticles(); // Initialize particles array\n  setupAudio();\n  ballYPositions = [height / 2, height / 2, height / 2]; // Initial positions of the balls\n  rectY = height;\n}\n\nfunction draw() {\n  background(0);\n  if (img) image(img, 0, 0);\n\n  textSize(40);\n  textAlign(CENTER);\n  textSize(20);\n  fill(255, textOpacity);\n  textWrap(WORD); // Wrap text at word boundaries\n  text(transcription, width / 2 - 150, height / 2, 300);\n\n  if (colorstrue && transcription) {\n    textOpacity = constrain(textOpacity - 2, 0, 255);\n    if (textOpacity <= 0) {\n      for (let i = 0; i < 3; i++) {\n        fill(colors[i]);\n        circle(width / 2 - 80 + i * 80, ballYPositions[i], 40);\n        \n        setTimeout(() => {\n        ballsStartMoving = true;\n      }, 4000);\n        \n        if (ballsStartMoving) {\n          ballYPositions[i] += 2;\n          fill(40, 233, 211);\n          rectMode(CENTER);\n          \n          if (rectY > 00){ \n          rectY --;\n          }\n          rect(width/2, rectY, 300, 100);\n\n        }\n      }\n    }\n  } else if (transcription) {\n    textOpacity = constrain(textOpacity + 3, 0, 255);\n  }\n\n  if (colorstrue) {\n    // Draw circles with specified colors\n  }\n}\n\n// Function to initialize particles with default colors\nfunction setupParticles() {\n  particles = Array.from({ length: 10 }, () => ({ color: \"#FFFFFF\" }));\n  console.log(\"Particles initialized:\", particles);\n}\n\nasync function askWithAudio(audio) {\n  document.body.style.cursor = \"progress\";\n\n  const b64Audio = await convertBlobToBase64(audio);\n  feedback.html(\"Waiting for reply from Replicate Audio...\");\n  let data = {\n    fieldToConvertBase64ToURL: \"audio\",\n    fileFormat: \"wav\",\n    version: \"4d50797290df275329f202e48c76360b3f22b08d28c196cbc54600319435f8d2\",\n    input: {\n      audio: b64Audio,\n    },\n  };\n\n  const url = replicateProxy + \"/create_n_get/\";\n  let options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  try {\n    const response = await fetch(url, options);\n    const openAI_json = await response.json();\n    transcription = openAI_json.output.transcription; // Store transcription globally\n    console.log(\"Audio Response Transcription:\", transcription);\n    feedback.html(openAI_json.output.transcription);\n    document.body.style.cursor = \"auto\";\n  } catch (error) {\n    console.error(\"Error in askWithAudio:\", error);\n    feedback.html(\"An error occurred while processing the audio.\");\n    document.body.style.cursor = \"auto\";\n  }\n}\n\nasync function convertBlobToBase64(audioBlob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = function () {\n      const base64String = reader.result.split(\",\")[1];\n      resolve(base64String);\n    };\n    reader.onerror = function (error) {\n      reject(error);\n    };\n    reader.readAsDataURL(audioBlob);\n  });\n}\n\nasync function askForWords() {\n  document.body.style.cursor = \"progress\";\n\n  const data = {\n    version: \"2d19859030ff705a87c746f7e96eea03aefb71f166725aee39692f1476566d48\",\n    input: {\n      prompt:\n        \"give me hex codes for html colors that reflect the emotions in this prompt: \" +\n        transcription +\n        \"If the prompt is positive, give me bright and vibrant colors. And, if the prompt is negative or not appropriate, give me cool and dark toned color hex codes instead and do not give me bright or vibrant colors. If the prompt trigger nostalgia, please give the colors associated with the items, such as pink for strawberry ice cream. If the prompt contains emotions such as anger, please give red hex code. Always provide hexcodes in your ouput\",\n    },\n  };\n\n  console.log(\"Prompt Data Sent to API:\", data);\n\n  let options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  const url = replicateProxy + \"/create_n_get/\";\n  console.log(\"words url\", url, \"words options\", options);\n  const words_response = await fetch(url, options);\n  //turn it into json\n  const proxy_said = await words_response.json();\n  console.log(\"words_json\", proxy_said);\n  if (proxy_said.output.length == 0) {\n    feedback.html(\"Something went wrong, try it again\");\n  } else {\n    feedback.html(\"\");\n    console.log(\"proxy_said\", proxy_said.output.join(\"\"));\n    let incomingText = proxy_said.output.join(\"\");\n    const string = incomingText;\n    const hexColors = findHexColor(string);\n    colors = hexColors;\n    colorstrue = true;\n  }\n  document.body.style.cursor = \"auto\";\n}\n\n// Helper function to extract hex colors from a string\nfunction findHexColor(str) {\n  const regex = /#[0-9a-fA-F]{6}/g;\n  const matches = str.match(regex);\n  return matches || [];\n}\n\nfunction setupAudio() {\n  const audioContext = new AudioContext();\n  let mediaStream;\n  let mediaRecorder;\n\n  const startButton = document.createElement(\"button\");\n  startButton.id = \"start-recording\";\n  startButton.textContent = \"Start Recording\";\n  startButton.style.position = \"absolute\";\n  startButton.style.top = \"50px\";\n  startButton.style.left = \"10px\";\n  document.body.appendChild(startButton);\n\n  const stopButton = document.createElement(\"button\");\n  stopButton.style.position = \"absolute\";\n  stopButton.style.top = \"50px\";\n  stopButton.style.left = \"160px\";\n  stopButton.id = \"stop-recording\";\n  stopButton.textContent = \"Stop Recording\";\n  document.body.appendChild(stopButton);\n\n  stopButton.addEventListener(\"click\", function () {\n    mediaRecorder.stop();\n  });\n\n  startButton.addEventListener(\"click\", async function () {\n    mediaStream = await navigator.mediaDevices.getUserMedia({ audio: true });\n\n    let mrChunks = [];\n    mediaRecorder = new MediaRecorder(mediaStream);\n\n    mediaRecorder.addEventListener(\"dataavailable\", (event) => {\n      mrChunks.push(event.data);\n    });\n\n    mediaRecorder.addEventListener(\"stop\", async function () {\n      const recordedData = new Blob(mrChunks, { type: \"audio/webm\" });\n      console.log(\"Recording stopped\", recordedData);\n\n      let av = document.createElement(\"VIDEO\");\n      let audioURL = window.URL.createObjectURL(recordedData);\n      av.src = audioURL;\n      av.width = 100;\n      av.height = 20;\n      document.body.appendChild(av);\n      av.play();\n\n      await askWithAudio(recordedData);\n      askForWords(); // Ensure this is called after transcription\n    });\n\n    mediaRecorder.start();\n    console.log(\"Recording started\");\n  });\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67537e54468c27b13d1ab59d",
        "createdAt": "2024-12-09T03:29:08.580Z",
        "updatedAt": "2024-12-09T03:29:08.580Z",
        "id": "67537e54468c27b13d1ab59d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.8.0/p5.js\"></script>\n    </script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67537e54468c27b13d1ab59c",
        "createdAt": "2024-12-09T03:29:08.580Z",
        "updatedAt": "2024-12-09T03:29:08.580Z",
        "id": "67537e54468c27b13d1ab59c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67537e54468c27b13d1ab59e",
        "createdAt": "2024-12-09T03:29:08.580Z",
        "updatedAt": "2024-12-09T03:29:08.580Z",
        "id": "67537e54468c27b13d1ab59e"
      }
    ],
    "createdAt": "2024-12-06T22:44:36.617Z",
    "updatedAt": "2024-12-09T03:29:08.580Z",
    "id": "fds3R-0ZA"
  },
  {
    "_id": "8p4DWtcfb",
    "name": "Ripple",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66fcc3970e0eea00fdb2ea36",
          "66fcc3970e0eea00fdb2ea37",
          "66fcc3970e0eea00fdb2ea38",
          "66fcc3970e0eea00fdb2ea39",
          "66fcc3970e0eea00fdb2ea3a"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66fcc3970e0eea00fdb2ea35",
        "createdAt": "2024-10-02T04:24:38.757Z",
        "updatedAt": "2024-10-02T04:24:38.757Z",
        "id": "66fcc3970e0eea00fdb2ea35"
      },
      {
        "name": "sketch.js",
        "content": "let ps = [];\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  colorMode(HSB, 255);\n}\n\nfunction draw() {\n  background(0,0,0,150);\n  \n  for(let i = ps.length - 1; i >=  0; i--){\n    ps[i].update();\n    ps[i].display();\n    \n    if(ps[i].done){\n      ps.splice(i, 1)\n    }\n  } \n}\n\nfunction mousePressed(){\n  ps.push(new System(mouseX, mouseY));\n}\n\n \n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fcc3970e0eea00fdb2ea38",
        "createdAt": "2024-10-02T04:24:38.757Z",
        "updatedAt": "2024-10-02T04:24:38.757Z",
        "id": "66fcc3970e0eea00fdb2ea38"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n    <script src=\"system.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fcc3970e0eea00fdb2ea36",
        "createdAt": "2024-10-02T04:24:38.757Z",
        "updatedAt": "2024-10-02T04:24:38.757Z",
        "id": "66fcc3970e0eea00fdb2ea36"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fcc3970e0eea00fdb2ea39",
        "createdAt": "2024-10-02T04:24:38.757Z",
        "updatedAt": "2024-10-02T04:24:38.757Z",
        "id": "66fcc3970e0eea00fdb2ea39"
      },
      {
        "name": "particle.js",
        "content": "class Particle {\n  constructor(x, y){\n    this.pos = createVector(x, y)\n    this.vel = createVector(0, 0)\n    this.acc = p5.Vector.random2D();\n    this.acc.mult(0.02);\n    this.life = 255;\n    this.done = false;\n    this.hueValue = 0;\n  }\n  \n  update(){\n    this.finished();\n    \n    this.vel.add(this.acc);\n    this.pos.add(this.vel);\n    \n    this.life -= 2;\n  }\n  display(){\n    noStroke();\n    fill(170, 170, 160, this.life);\n    ellipse(this.pos.x, this.pos.y, 5, 5);\n  }\n\n  finished(){\n    if (this.life < 0){\n      this.done = true;\n    } else {\n      this.done = false;\n    }\n  }\n} ",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66fcc3970e0eea00fdb2ea37",
        "createdAt": "2024-10-02T04:24:38.757Z",
        "updatedAt": "2024-10-02T04:24:38.757Z",
        "id": "66fcc3970e0eea00fdb2ea37"
      },
      {
        "name": "system.js",
        "content": "class System{\n  constructor(x,y){\n    this.x = x;\n    this.y = y;\n    \n    this.particles = []; \n    this.num = 150;\n    for(let i = 0; i < this.num; i++){\n    this.particles.push(new     Particle(this.x, this.y));\n  }\n    this.done = false;\n}\n\n\nupdate(){\n  this.finished();\n    for (let i = this.particles.length - 1; i >= 0; i--){\n    this.particles[i].update();\n    \n    if (this.particles[i].done){\n      this.particles.splice(i, 1);\n    } \n  }\n}\n\ndisplay(){\n  for(let i = 0; i < this.particles.length; i ++){\n    this.particles[i].display();\n  }\n}\n  \n  finished(){\n    if(this.particles.length == 0){\n      this.done = true;\n    } else {\n    this.done = false;\n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fcc3970e0eea00fdb2ea3a",
        "createdAt": "2024-10-02T04:24:38.757Z",
        "updatedAt": "2024-10-02T04:24:38.757Z",
        "id": "66fcc3970e0eea00fdb2ea3a"
      }
    ],
    "createdAt": "2024-10-02T03:52:54.581Z",
    "updatedAt": "2024-10-02T04:24:38.757Z",
    "id": "8p4DWtcfb"
  },
  {
    "_id": "_d1OIaiH5",
    "name": "Ripple copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66fccb090e0eea00fdb2ea3c",
          "66fccb090e0eea00fdb2ea3d",
          "66fccb090e0eea00fdb2ea3e",
          "66fccb090e0eea00fdb2ea3f",
          "66fccb090e0eea00fdb2ea40"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66fccb090e0eea00fdb2ea3b",
        "createdAt": "2024-10-02T05:23:46.237Z",
        "updatedAt": "2024-10-02T05:23:46.237Z",
        "id": "66fccb090e0eea00fdb2ea3b"
      },
      {
        "name": "sketch.js",
        "content": "let ps = [];\n\nfunction setup() {\n  createCanvas(400, 400);\n  colorMode(HSB, 255);\n}\n\nfunction draw() {\n  background(0,0,0,150);\n  \n  for(let i = ps.length - 1; i >=  0; i--){\n    ps[i].update();\n    ps[i].display();\n    \n    if(ps[i].done){\n      ps.splice(i, 1)\n    }\n  } \n}\n\nfunction mousePressed(){\n    ps.push(new System(mouseX, mouseY));\n  }\n  \n  //for(let i = 0; i < 150; i ++){\n    //particle.color1[i] = random(150, 180);\n    //particle.color2[i] = random(160, 190);\n  //}\n\n\n \n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66fccb090e0eea00fdb2ea3e",
        "createdAt": "2024-10-02T05:23:46.237Z",
        "updatedAt": "2024-10-02T05:23:46.237Z",
        "id": "66fccb090e0eea00fdb2ea3e"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n    <script src=\"system.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fccb090e0eea00fdb2ea3c",
        "createdAt": "2024-10-02T05:23:46.237Z",
        "updatedAt": "2024-10-02T05:23:46.237Z",
        "id": "66fccb090e0eea00fdb2ea3c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fccb090e0eea00fdb2ea3f",
        "createdAt": "2024-10-02T05:23:46.237Z",
        "updatedAt": "2024-10-02T05:23:46.237Z",
        "id": "66fccb090e0eea00fdb2ea3f"
      },
      {
        "name": "particle.js",
        "content": "class Particle {\n  constructor(x, y){\n    this.pos = createVector(x, y)\n    this.vel = createVector(0, 0)\n    this.acc = p5.Vector.random2D();\n    this.acc.mult(0.02);\n    this.life = 255;\n    this.done = false;\n    this.hueValue = 0;\n    this.color1 = 170;\n    this.color2 = 185;\n  }\n  \n  update(){\n    if(this.pos <= 8 || this.pos >= 8){\n      this.acc * -1;\n      this.vel * -1;\n    }\n    \n    this.finished();\n    \n    this.vel.add(this.acc);\n    this.pos.add(this.vel);\n    \n    this.life -= 1.6;\n  }\n  display(){\n    noStroke();\n    fill(this.color1, this.color2, 160, this.life);\n    ellipse(this.pos.x, this.pos.y, 8, 8);\n  }\n\n  finished(){\n    if (this.life < 0){\n      this.done = true;\n    } else {\n      this.done = false;\n    }\n  }\n} ",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fccb090e0eea00fdb2ea3d",
        "createdAt": "2024-10-02T05:23:46.237Z",
        "updatedAt": "2024-10-02T05:23:46.237Z",
        "id": "66fccb090e0eea00fdb2ea3d"
      },
      {
        "name": "system.js",
        "content": "class System{\n  constructor(x,y){\n    this.x = x;\n    this.y = y;\n    \n    this.particles = []; \n    this.num = 150;\n    for(let i = 0; i < this.num; i++){\n    this.particles.push(new Particle(this.x, this.y));\n  }\n    this.done = false;\n}\n\n\nupdate(){\n  this.finished();\n    for (let i = this.particles.length - 1; i >= 0; i--){\n    this.particles[i].update();\n    \n    if (this.particles[i].done){\n      this.particles.splice(i, 1);\n    } \n  }\n}\n\ndisplay(){\n  for(let i = 0; i < this.particles.length; i ++){\n    this.particles[i].display();\n }\n}\n  \n  finished(){\n    if(this.particles.length == 0){\n      this.done = true;\n    } else {\n    this.done = false;\n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fccb090e0eea00fdb2ea40",
        "createdAt": "2024-10-02T05:23:46.237Z",
        "updatedAt": "2024-10-02T05:23:46.237Z",
        "id": "66fccb090e0eea00fdb2ea40"
      }
    ],
    "createdAt": "2024-10-02T04:24:40.566Z",
    "updatedAt": "2024-10-02T05:23:46.237Z",
    "id": "_d1OIaiH5"
  },
  {
    "_id": "U9S1LzQ8w",
    "name": "Ripple copy copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66fd6b90da8f9cbeff8a07bb",
          "66fcd8e80e0eea00fdb2ea46",
          "66fcd8e80e0eea00fdb2ea47",
          "66fcd8e80e0eea00fdb2ea48",
          "66fcd8e80e0eea00fdb2ea49",
          "66fcd8e80e0eea00fdb2ea4a"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66fcd8e80e0eea00fdb2ea45",
        "createdAt": "2024-12-23T08:56:13.656Z",
        "updatedAt": "2024-12-23T08:56:13.656Z",
        "id": "66fcd8e80e0eea00fdb2ea45"
      },
      {
        "name": "sketch.js",
        "content": "let ps = []; // this is for the system\n//let backgrounds = [];\nlet repeatCount = 0;\nlet maxRepeats = 7;\nlet delay = 1000;\nlet ledcount1 = 0;\nlet ledcount2 = 0;\nlet ledcount3 = 0;\nlet ledcount4 = 0;\nlet p = null;\n/////////////////////\nconst askForPort = true; //true first time to pick port, then change to false\nconst serial = new p5.WebSerial();\nlet portButton;\nlet inData;\nlet outData;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  colorMode(HSB, 255);\n\n  if (askForPort) {\n    makePortButton();\n  } else {\n    serial.getPorts(); //skip the button use port from last time\n  }\n  serial.on(\"portavailable\", openPort);\n  serial.on(\"data\", serialEvent);\n}\n\nfunction mousePressed() {\n  let mousePositionX = mouseX;\n  let mousePositionY = mouseY;\n\n  p = new Particle(mousePositionX, mousePositionY);\n\n  ps.push(new System(mousePositionX, mousePositionY));\n  for (let i = 0; i < 6; i++) {\n    setTimeout(\n      () => ps.push(new System(mousePositionX, mousePositionY)),\n      200 + i * 200\n    );\n  }\n}\n\nfunction draw() {\n  background(0, 0, 0, 150);\n  for (let i = ps.length - 1; i >= 0; i--) {\n    ps[i].update();\n    ps[i].display();\n\n    // Check if any particle hits the edge and print \"hello\"\n    for (let j = 0; j < ps[i].particles.length; j++) {\n      let particle = ps[i].particles[j];\n      if (particle.positionX() <= 80 && particle.positionY() <= 125) {\n        serial.write(10); // Communicate with Arduino or serial device\n      } else if (particle.positionY() >= height - 145 && particle.positionX() <= 120) {\n        serial.write(20);\n      } else if (particle.positionY() <= 170 && particle.positionX() >= width - 140){\n        serial.write(30);\n      } else if(particle.positionY() >= height - 150 && particle.positionX() >= width - 140){\n        serial.write(40);\n    }\n  }\n\n    if (ps[i].done) {\n      ps.splice(i, 1);\n    }\n  }\n}\n\nfunction keyPressed() {\n  serial.write(65);\n}\n\nfunction serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  if (inString) {\n    inData = split(inString, \",\");\n  }\n}\n\n/////////////////////////////////////////////\n// UTILITY FUNCTIONS TO MAKE CONNECTIONS  ///\n/////////////////////////////////////////////\n\nfunction openPort() {\n  serial.open();\n  if (portButton) portButton.hide();\n}\n\n// This is a convenience for picking from available serial ports:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(() => serial.requestPort());\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n\n\nclass System{\n  constructor(x,y){\n    this.x = x;\n    this.y = y;\n    \n    this.particles = []; \n    this.num = 150;\n    for(let i = 0; i < this.num; i++){\n    this.particles.push(new Particle(this.x, this.y));\n  }\n    //console.log(\"hello\");\n    this.done = false;\n}\n\n\nupdate(){\n  this.finished();\n    for (let i = this.particles.length - 1; i >= 0; i--){\n    this.particles[i].update();\n    \n    if (this.particles[i].done){\n      this.particles.splice(i, 1);\n    } \n  }\n}\n\ndisplay(){\n  for(let i = 0; i < this.particles.length; i ++){\n    this.particles[i].display();\n }\n}\n  \n  finished(){\n    if(this.particles.length == 0){\n      this.done = true;\n    } else {\n    this.done = false;\n    }\n  }\n}\n\nclass Particle {\n  constructor(x, y){\n    this.pos = createVector(x, y)\n    this.vel = createVector(0, 0)\n    this.acc = p5.Vector.random2D();\n    this.acc.mult(0.03);\n    this.life = 255;\n    this.done = false;\n    this.hueValue = 0;\n    this.color1 = 170;\n    this.color2 = 185;\n  }\n  \n  update(){\n    if(this.pos.x <= 0 || this.pos.x >= width){\n      //this.acc.x = this.acc.x * -1;\n      this.vel.x = this.vel.x * -1;\n    }\n    \n    if(this.pos.y <= 0 || this.pos.y >= height){\n      //this.acc.y = this.acc * -1;\n      this.vel.y = this.vel.y * -1;\n    }\n    \n    \n    this.finished();\n    \n    this.vel.add(this.acc);\n    this.pos.add(this.vel);\n    \n    this.life -= 1.6;\n  }\n  display(){\n    noStroke();\n    fill(this.color1, this.color2, 160, this.life);\n    ellipse(this.pos.x, this.pos.y, 8, 8);\n  }\n\n  finished(){\n    if (this.life < 0){\n      this.done = true;\n    } else {\n      this.done = false;\n    }\n  }\n  \n  positionX(){\n   return this.pos.x;\n  } \n  \n  positionY(){\n   return this.pos.y;\n  } \n  \n} \n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66fcd8e80e0eea00fdb2ea48",
        "createdAt": "2024-12-23T08:56:13.656Z",
        "updatedAt": "2024-12-23T08:56:13.656Z",
        "id": "66fcd8e80e0eea00fdb2ea48"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n     <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n    <script src=\"system.js\"></script>\n    <script src=\"backgrounds\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fcd8e80e0eea00fdb2ea46",
        "createdAt": "2024-12-23T08:56:13.656Z",
        "updatedAt": "2024-12-23T08:56:13.656Z",
        "id": "66fcd8e80e0eea00fdb2ea46"
      },
      {
        "name": "style.css",
        "content": "body, html {\n  margin: 0;\n  padding: 0;\n  overflow: hidden; /* Disable scroll bars */\n  }\ncanvas {\n  display: block; /* Remove the default inline canvas margin */\n  }\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fcd8e80e0eea00fdb2ea49",
        "createdAt": "2024-12-23T08:56:13.656Z",
        "updatedAt": "2024-12-23T08:56:13.656Z",
        "id": "66fcd8e80e0eea00fdb2ea49"
      },
      {
        "name": "particle.js",
        "content": "",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fcd8e80e0eea00fdb2ea47",
        "createdAt": "2024-12-23T08:56:13.656Z",
        "updatedAt": "2024-12-23T08:56:13.656Z",
        "id": "66fcd8e80e0eea00fdb2ea47"
      },
      {
        "name": "system.js",
        "content": "",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fcd8e80e0eea00fdb2ea4a",
        "createdAt": "2024-12-23T08:56:13.656Z",
        "updatedAt": "2024-12-23T08:56:13.656Z",
        "id": "66fcd8e80e0eea00fdb2ea4a"
      },
      {
        "name": "backgrounds.js",
        "content": "class Background {\n  constructor(x, y){\n    this.radius = createVector(x, y)\n    this.size = createVector(1, 1)\n    this.life = 255;\n    this.done = false; \n  }\n  \n  update(){\n    if(this.radius <= 50 || this.radius >= 50){\n      this.size * -1;\n    }\n    \n    this.finished();\n    this.radius.add(this.size);\n    this.life -= 1.6;\n  }\n  display(){   \n    noStroke();\n    fill(random(160, 180), random(160,180), 160, this.life);\n    circle(random(0, width), random(0, height), this.radius);\n  }\n\n  finished(){\n    if (this.life < 0){\n      this.done = true;\n    } else {\n      this.done = false;\n    }\n  }\n} ",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fd6b90da8f9cbeff8a07bb",
        "createdAt": "2024-12-23T08:56:13.656Z",
        "updatedAt": "2024-12-23T08:56:13.656Z",
        "id": "66fd6b90da8f9cbeff8a07bb"
      }
    ],
    "createdAt": "2024-10-02T05:23:51.719Z",
    "updatedAt": "2024-12-23T08:56:13.656Z",
    "id": "U9S1LzQ8w"
  },
  {
    "_id": "KiTl6Cajy",
    "name": "Ripple effect",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66fcbabc0e0eea00fdb2ea22",
          "66fcbabc0e0eea00fdb2ea23",
          "66fcbabc0e0eea00fdb2ea24",
          "66fcbabc0e0eea00fdb2ea25"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66fcbabc0e0eea00fdb2ea21",
        "createdAt": "2024-10-02T03:20:35.482Z",
        "updatedAt": "2024-10-02T03:20:35.482Z",
        "id": "66fcbabc0e0eea00fdb2ea21"
      },
      {
        "name": "sketch.js",
        "content": "\nlet particles = []; let num = 50;\n\nfunction setup() {\n  createCanvas(400, 400);\n  p = new Particle(width/2, height/2);\n}\n\nfunction draw() {\n  background(0,0,0,150);\n  \n  //particles.push(new Particle(width/2, height/2));\n  \n  for (let i = particles.length - 1; i >= 0; i--){\n    particles[i].update();\n    particles[i].display();\n    \n    if (particles[i].done){\n      particles.splice(i, 1);\n    } \n  }\n  \n}\n\nfunction mouseClicked(){\n  for(let i = 0; i < num; i++){\n    particles.push(new Particle(mouseX, mouseY));\n  }\n}\n    \n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fcbabc0e0eea00fdb2ea24",
        "createdAt": "2024-10-02T03:20:35.482Z",
        "updatedAt": "2024-10-02T03:20:35.482Z",
        "id": "66fcbabc0e0eea00fdb2ea24"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fcbabc0e0eea00fdb2ea22",
        "createdAt": "2024-10-02T03:20:35.482Z",
        "updatedAt": "2024-10-02T03:20:35.482Z",
        "id": "66fcbabc0e0eea00fdb2ea22"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fcbabc0e0eea00fdb2ea25",
        "createdAt": "2024-10-02T03:20:35.482Z",
        "updatedAt": "2024-10-02T03:20:35.482Z",
        "id": "66fcbabc0e0eea00fdb2ea25"
      },
      {
        "name": "particle.js",
        "content": "class Particle {\n  constructor(x, y){\n    this.pos = createVector(x, y)\n    this.vel = createVector(0, 0)\n    this.acc = p5.Vector.random2D();\n    this.acc.mult(0.02);\n    this.life = 255;\n    this.done = false;\n  }\n  \n  update(){\n    this.finished();\n    \n    this.vel.add(this.acc);\n    this.pos.add(this.vel);\n    \n    this.life -= 1;\n    \n    if(this.pos.x >= width - 10 || this.pos.x <= 10){\n      this.acc *= -1;\n    }\n  }\n  \n  display(){\n    noStroke();\n    fill(255, 0, 0, this.life);\n    ellipse(this.pos.x, this.pos.y, 10, 10);\n  }\n\n  finished(){\n    if (this.life < 0){\n      this.done = true;\n    } else {\n      this.done = false;\n    }\n  }\n} ",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66fcbabc0e0eea00fdb2ea23",
        "createdAt": "2024-10-02T03:20:35.482Z",
        "updatedAt": "2024-10-02T03:20:35.482Z",
        "id": "66fcbabc0e0eea00fdb2ea23"
      }
    ],
    "createdAt": "2024-10-02T03:15:07.811Z",
    "updatedAt": "2024-10-02T03:20:35.482Z",
    "id": "KiTl6Cajy"
  },
  {
    "_id": "6DZZ9mdZO",
    "name": "Ripple effect for group project test",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "671c95326ec18025c5c0f4c5",
          "671c95506ec18025c5c0f4c8",
          "671c95326ec18025c5c0f4c4",
          "671c95326ec18025c5c0f4c6",
          "671c95666ec18025c5c0f4c9"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "671c95326ec18025c5c0f4c7",
        "createdAt": "2024-10-26T07:13:54.380Z",
        "updatedAt": "2024-10-26T07:13:54.380Z",
        "id": "671c95326ec18025c5c0f4c7"
      },
      {
        "name": "sketch.js",
        "content": "\nlet ps = [];\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(0,0,0,150);\n  \n  for(let i = ps.length - 1; i >=  0; i--){\n    ps[i].update();\n    ps[i].display();\n    \n    if(ps[i].done){\n      ps.splice(i, 1)\n    }\n  } \n  ps.push(new System(mouseX, height/2));\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671c95326ec18025c5c0f4c4",
        "createdAt": "2024-10-26T07:13:54.380Z",
        "updatedAt": "2024-10-26T07:13:54.380Z",
        "id": "671c95326ec18025c5c0f4c4"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n    <script src=\"system.js\"></script>\n    <script src=\"particle.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671c95326ec18025c5c0f4c5",
        "createdAt": "2024-10-26T07:13:54.380Z",
        "updatedAt": "2024-10-26T07:13:54.380Z",
        "id": "671c95326ec18025c5c0f4c5"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671c95326ec18025c5c0f4c6",
        "createdAt": "2024-10-26T07:13:54.380Z",
        "updatedAt": "2024-10-26T07:13:54.380Z",
        "id": "671c95326ec18025c5c0f4c6"
      },
      {
        "name": "particle.js",
        "content": "class Particle {\n  constructor(x, y){\n    this.pos = createVector(x, y)\n    this.vel = createVector(0, 0)\n    this.acc = p5.Vector.random2D();\n    this.acc.mult(0.02);\n    this.life = 255;\n    this.done = false;\n    this.hueValue = 0;\n  }\n  \n  update(){\n    this.finished();\n    \n    this.vel.add(this.acc);\n    this.pos.add(this.vel);\n    \n    this.life -= 2;\n  }\n  display(){\n    noStroke();\n    fill(170, 170, 160, this.life);\n    ellipse(this.pos.x, this.pos.y, 5, 5);\n  }\n\n  finished(){\n    if (this.life < 0){\n      this.done = true;\n    } else {\n      this.done = false;\n    }\n  }\n} ",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671c95506ec18025c5c0f4c8",
        "createdAt": "2024-10-26T07:13:54.380Z",
        "updatedAt": "2024-10-26T07:13:54.380Z",
        "id": "671c95506ec18025c5c0f4c8"
      },
      {
        "name": "system.js",
        "content": "class System{\n  constructor(x,y){\n    this.x = x;\n    this.y = y;\n    \n    this.particles = []; \n    this.num = 50;\n    for(let i = 0; i < this.num; i++){\n    this.particles.push(new Particle(this.x, this.y));\n  }\n    this.done = false;\n}\n\n\nupdate(){\n  this.finished();\n    for (let i = this.particles.length - 1; i >= 0; i--){\n    this.particles[i].update();\n    \n    if (this.particles[i].done){\n      this.particles.splice(i, 1);\n    } \n  }\n}\n\ndisplay(){\n  for(let i = 0; i < this.particles.length; i ++){\n    this.particles[i].display();\n  }\n}\n  \n  finished(){\n    if(this.particles.length == 0){\n      this.done = true;\n    } else {\n    this.done = false;\n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "671c95666ec18025c5c0f4c9",
        "createdAt": "2024-10-26T07:13:54.380Z",
        "updatedAt": "2024-10-26T07:13:54.380Z",
        "id": "671c95666ec18025c5c0f4c9"
      }
    ],
    "updatedAt": "2024-10-26T07:13:54.380Z",
    "createdAt": "2024-10-26T07:11:02.348Z",
    "id": "6DZZ9mdZO"
  },
  {
    "_id": "IbfoJhJ3n",
    "name": "Ripple with Bodypose",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67b008acbcb66a391e4b6bb9",
          "67af6b6986ea59ec954b32f3",
          "67af6b6986ea59ec954b32f4",
          "67af6b6986ea59ec954b32f5",
          "67af6b6986ea59ec954b32f6",
          "67af6b6986ea59ec954b32f7",
          "67af6b6986ea59ec954b32f8"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67af6b6986ea59ec954b32f2",
        "createdAt": "2025-03-13T14:31:08.081Z",
        "updatedAt": "2025-03-13T14:31:08.081Z",
        "id": "67af6b6986ea59ec954b32f2"
      },
      {
        "name": "sketch.js",
        "content": "let ps = []; // this is for the system\n//let backgrounds = [];\nlet repeatCount = 0;\nlet maxRepeats = 7;\nlet delay = 1000;\nlet ledcount1 = 0;\nlet ledcount2 = 0;\nlet ledcount3 = 0;\nlet ledcount4 = 0;\nlet p = null;\n/////////////////////\n\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  // colorMode(HSB, 255);\n}\n\nfunction mousePressed() {\n  let mousePositionX = mouseX;\n  let mousePositionY = mouseY;\n\n  p = new Particle(mousePositionX, mousePositionY);\n\n  ps.push(new System(mousePositionX, mousePositionY));\n  for (let i = 0; i < 3; i++) {\n    setTimeout(\n      () => ps.push(new System(mousePositionX, mousePositionY)),\n      200 + i * 200\n    );\n  }\n}\n\nfunction draw() {\n  background(0, 0, 0, 150);\n  for (let i = ps.length - 1; i >= 0; i--) {\n    ps[i].update();\n    ps[i].display();\n\n    if (ps[i].done) {\n      ps.splice(i, 1);\n    }\n  }\n}\n\nfunction keyPressed() {\n   fullscreen(true);\n}\n\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n\n\nclass System{\n  constructor(x,y){\n    this.x = x;\n    this.y = y;\n    \n    this.particles = []; \n    this.num = 150;\n    for(let i = 0; i < this.num; i++){\n    this.particles.push(new Particle(this.x, this.y));\n  }\n    //console.log(\"hello\");\n    this.done = false;\n}\n\n\nupdate(){\n  this.finished();\n    for (let i = this.particles.length - 1; i >= 0; i--){\n    this.particles[i].update();\n    \n    if (this.particles[i].done){\n      this.particles.splice(i, 1);\n    } \n  }\n}\n\ndisplay(){\n  for(let i = 0; i < this.particles.length; i ++){\n    this.particles[i].display();\n }\n}\n  \n  finished(){\n    if(this.particles.length == 0){\n      this.done = true;\n    } else {\n    this.done = false;\n    }\n  }\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67af6b6986ea59ec954b32f6",
        "createdAt": "2025-03-13T14:31:08.081Z",
        "updatedAt": "2025-03-13T14:31:08.081Z",
        "id": "67af6b6986ea59ec954b32f6"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n     <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n    <script src=\"system.js\"></script>\n    <script src=\"backgrounds\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67af6b6986ea59ec954b32f4",
        "createdAt": "2025-03-13T14:31:08.081Z",
        "updatedAt": "2025-03-13T14:31:08.081Z",
        "id": "67af6b6986ea59ec954b32f4"
      },
      {
        "name": "style.css",
        "content": "body, html {\n  margin: 0;\n  padding: 0;\n  overflow: hidden; /* Disable scroll bars */\n  }\ncanvas {\n  display: block; /* Remove the default inline canvas margin */\n  }\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67af6b6986ea59ec954b32f7",
        "createdAt": "2025-03-13T14:31:08.081Z",
        "updatedAt": "2025-03-13T14:31:08.081Z",
        "id": "67af6b6986ea59ec954b32f7"
      },
      {
        "name": "particle.js",
        "content": "class Particle {\n  constructor(x, y){\n    this.pos = createVector(x, y)\n    this.vel = createVector(0, 0)\n    this.acc = p5.Vector.random2D();\n    this.acc.mult(0.03);\n    this.life = 255;\n    this.done = false;\n    this.hueValue = 0;\n    this.color1 = 50;\n    this.color2 = 50;\n  }\n  \n  update(){\n    if(this.pos.x <= 0 || this.pos.x >= width){\n      //this.acc.x = this.acc.x * -1;\n      this.vel.x = this.vel.x * -1;\n    }\n    \n    if(this.pos.y <= 0 || this.pos.y >= height){\n      //this.acc.y = this.acc * -1;\n      this.vel.y = this.vel.y * -1;\n    }\n    \n    \n    this.finished();\n    \n    this.vel.add(this.acc);\n    this.pos.add(this.vel);\n    \n    this.life -= 3;\n  }\n  display(){\n    noStroke();\n    //  let oscillation = sin(frameCount * 0.05); // Adjust speed by changing 0.05\n    // let blueShade = map(oscillation, -1, 1, 255, 100); // Dark blue (50) to light blue (200)\n    this.color1 += 1.5;\n    this.color2 += 1.5;\n    \n    fill(this.color1, this.color2, 255, this.life); // RGB (0, 0, blueShade)\n    ellipse(this.pos.x, this.pos.y, 8, 8);\n  }\n\n  finished(){\n    if (this.life < 0){\n      this.done = true;\n    } else {\n      this.done = false;\n    }\n  }\n  \n  positionX(){\n   return this.pos.x;\n  } \n  \n  positionY(){\n   return this.pos.y;\n  } \n  \n} \n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67af6b6986ea59ec954b32f5",
        "createdAt": "2025-03-13T14:31:08.081Z",
        "updatedAt": "2025-03-13T14:31:08.081Z",
        "id": "67af6b6986ea59ec954b32f5"
      },
      {
        "name": "system.js",
        "content": "",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67af6b6986ea59ec954b32f8",
        "createdAt": "2025-03-13T14:31:08.081Z",
        "updatedAt": "2025-03-13T14:31:08.081Z",
        "id": "67af6b6986ea59ec954b32f8"
      },
      {
        "name": "backgrounds.js",
        "content": "class Background {\n  constructor(x, y){\n    this.radius = createVector(x, y)\n    this.size = createVector(1, 1)\n    this.life = 255;\n    this.done = false; \n  }\n  \n  update(){\n    if(this.radius <= 50 || this.radius >= 50){\n      this.size * -1;\n    }\n    \n    this.finished();\n    this.radius.add(this.size);\n    this.life -= 1.6;\n  }\n  display(){   \n    noStroke();\n    fill(random(160, 180), random(160,180), 160, this.life);\n    circle(random(0, width), random(0, height), this.radius);\n  }\n\n  finished(){\n    if (this.life < 0){\n      this.done = true;\n    } else {\n      this.done = false;\n    }\n  }\n} ",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67af6b6986ea59ec954b32f3",
        "createdAt": "2025-03-13T14:31:08.081Z",
        "updatedAt": "2025-03-13T14:31:08.081Z",
        "id": "67af6b6986ea59ec954b32f3"
      },
      {
        "name": "background.mp4",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/fc5226a1-4a32-4c73-93b2-d8413c679f2d.mp4",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b008acbcb66a391e4b6bb9",
        "createdAt": "2025-03-13T14:31:08.081Z",
        "updatedAt": "2025-03-13T14:31:08.081Z",
        "id": "67b008acbcb66a391e4b6bb9"
      }
    ],
    "createdAt": "2025-02-14T16:12:23.664Z",
    "updatedAt": "2025-03-13T14:31:08.081Z",
    "id": "IbfoJhJ3n"
  },
  {
    "_id": "cF1Mu_NG8",
    "name": "SALT",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "671c96f16ec18025c5c0f4cb",
          "671c96f16ec18025c5c0f4ca",
          "671c96f16ec18025c5c0f4cc"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "671c96f16ec18025c5c0f4cd",
        "createdAt": "2024-10-26T19:43:15.945Z",
        "updatedAt": "2024-10-26T19:43:15.945Z",
        "id": "671c96f16ec18025c5c0f4cd"
      },
      {
        "name": "sketch.js",
        "content": "      let numCircles = 120; \n\nfunction setup() {\n    createCanvas(400, 400);\n}\n\nfunction draw() {\n    background(0);\n    fill(255, 50);\n    noStroke(0);\n\n    \n    // Center position\n    let centerX = width / 2;\n    let centerY = height / 2;\n    \n    // Loop to draw circles in a circular pattern\n    for (let i = 0; i < numCircles; i++) {\n        // Calculate angle for current circle\n      let angle = map(i, 0, numCircles, 0, TWO_PI); // map to a full circle\n      let circleRadius = random(5, 13); \n      let distanceFromCenter = random(80, 100); \n\n\n        let x = mouseX + cos(angle) * distanceFromCenter;\n        let y = centerY + sin(angle) * distanceFromCenter;\n        \n        // Draw the smaller circle\n        circle(x, y, circleRadius);\n    }\n      drawingContext.shadowBlur = 30; // Adjust the blur intensity\n    drawingContext.shadowColor = color(255); // White glow effect\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "671c96f16ec18025c5c0f4ca",
        "createdAt": "2024-10-26T19:43:15.945Z",
        "updatedAt": "2024-10-26T19:43:15.945Z",
        "id": "671c96f16ec18025c5c0f4ca"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671c96f16ec18025c5c0f4cb",
        "createdAt": "2024-10-26T19:43:15.945Z",
        "updatedAt": "2024-10-26T19:43:15.945Z",
        "id": "671c96f16ec18025c5c0f4cb"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671c96f16ec18025c5c0f4cc",
        "createdAt": "2024-10-26T19:43:15.945Z",
        "updatedAt": "2024-10-26T19:43:15.945Z",
        "id": "671c96f16ec18025c5c0f4cc"
      }
    ],
    "updatedAt": "2024-10-26T19:43:15.945Z",
    "createdAt": "2024-10-26T07:18:41.546Z",
    "id": "cF1Mu_NG8"
  },
  {
    "_id": "5cwMxyGyC",
    "name": "serial for pulse ox copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "672921b39391e8c786d6794a",
          "67291f293d9ee9820da7a05e",
          "67291f293d9ee9820da7a05f",
          "67291f293d9ee9820da7a060"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67291f293d9ee9820da7a05d",
        "createdAt": "2024-11-04T19:37:59.393Z",
        "updatedAt": "2024-11-04T19:37:59.393Z",
        "id": "67291f293d9ee9820da7a05d"
      },
      {
        "name": "sketch.js",
        "content": "//simplified template. for longer story //https://editor.p5js.org/rios/sketches/wtZvFIkW5\n//\nconst askForPort = false; //true first time to pick port, then change to false\nconst serial = new p5.WebSerial();\nlet portButton;\nlet inData = []; \nlet outData  ;\nlet noFinger = true; \nlet x = 0;\nlet y = 0;\n\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight); // make the canvas\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported Try Chrome \");\n  }\n  //first time you connect create button to identify port\n  if (askForPort ) {\n     makePortButton();\n  } else {\n   serial.getPorts(); //skip the button use port from last time\n  }\n  serial.on(\"portavailable\", openPort);\n  serial.on(\"data\", serialEvent);\n  textSize(32);\n}\n\n////////////\n// DRAW  ///\n////////////\nfunction draw() {\n  background(255);\n  if (noFinger) {\n    text(\"NO FINGER\", 10,32) ;\n    return;\n  }\n  if (inData.length > 0) {\n    console.log(inData);\n    //turn it into JSON\n    let asJSON = {}\n    for(let i = 0; i < inData.length; i++){\n         let nameValuePair = inData[i].split(\"=\");\n          asJSON[nameValuePair[0].trim()] = int(nameValuePair[1]);\n    }\n    text(JSON.stringify(asJSON), 0,100);\n    \n    if (asJSON.IR){\n      y = (asJSON.IR- 80000)/7\n    }\n    console.log(asJSON);\n    ellipse(x,y,100,100);\n    x++;\n    if (x > width) x = 0;\n \n  }\n  //don't just stand there, put these variables to use in your code\n}\n\n/////////////////////////////\n// A CALLBACK FUNCTION CALLED WHEN DATA COMES IN  ///  \n/////////////////////////////\n\nfunction serialEvent() {\n\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  if (inString ) {\n    noFinger = inString.includes(\"No finger\")\n    if (! noFinger){\n    //console.log(inString);\n    inData = split(inString, \",\");\n    }\n  }\n}\n\n/////////////////////////////////////////////\n// UTILITY FUNCTIONS TO MAKE CONNECTIONS  ///\n/////////////////////////////////////////////\n\n\nfunction openPort() {\n  serial.open()\n  if (portButton) portButton.hide();\n}\n\n// This is a convenience for picking from available serial ports:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(() =>serial.requestPort());\n}\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67291f293d9ee9820da7a05f",
        "createdAt": "2024-11-04T19:37:59.393Z",
        "updatedAt": "2024-11-04T19:37:59.393Z",
        "id": "67291f293d9ee9820da7a05f"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  \n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    \n    <meta charset=\"utf-8\" />\n    <title>ml5.js handPose Webcam Example</title>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n  \n  \n  </head>\n \n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67291f293d9ee9820da7a05e",
        "createdAt": "2024-11-04T19:37:59.393Z",
        "updatedAt": "2024-11-04T19:37:59.393Z",
        "id": "67291f293d9ee9820da7a05e"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67291f293d9ee9820da7a060",
        "createdAt": "2024-11-04T19:37:59.393Z",
        "updatedAt": "2024-11-04T19:37:59.393Z",
        "id": "67291f293d9ee9820da7a060"
      },
      {
        "name": "Circle.js",
        "content": "let pitches = [0.6853, 0.875, 1, 1.125, 1.359];\n\nclass Circle {\n  constructor(x, y, size) {\n    this.x = x;\n    this.y = y;\n    this.baseSize = size;\n    this.size = size;\n    this.color1 = 255; // Base color when hovering\n    this.color2 = 255;\n    this.color3 = 255;\n    this.life = 1; // Start fully opaque\n    this.fading = false;\n  }\n\n  display() {\n    // Manage fading\n    if (this.fading) {\n      this.life -= 10; // Decrease life if fading\n    } else {\n      if (this.life < 255) {\n        this.life += 3;\n      }\n      if (this.life > 255) this.life = 255; // Cap life to max 255\n    }\n\n    this.size = this.baseSize + sin(frameCount * 0.1) * 10;\n\n    // Draw outer glow effect\n    for (let i = 5; i > 0; i--) {\n      fill(this.color1, this.color2, this.color3, this.life / (i * 2)); // Adjust opacity for glow\n      noStroke();\n      circle(this.x, this.y, this.size + i * 15); // Increase radius for glow\n    }\n\n    // Draw main circle\n    fill(this.color1, this.color2, this.color3, this.life); // Use life for opacity\n    circle(this.x, this.y, this.size);\n  }\n\n  checkOver1() {\n    ///// for regular circles\n    if (!this.fading) {\n      this.fading = true; // Start fading when hovered over\n      this.color1 = 137;\n      this.color2 = 207;\n      this.color3 = 240;\n\n      playCount++;\n        if (playCount % 5 === 0) {\n            // Play the next laugh sound in order, cycling through the array\n            const laughIndex = Math.floor(playCount / 5) % laugh.length; // Get the index based on playCount\n            laugh[laughIndex].play(); // Play the laugh sound\n\n            // Reset playCount after playing the fifth laugh\n            if (laughIndex === laugh.length - 1) {\n                playCount = 0; // Reset the counter after playing the last laugh\n            }\n        } else {\n            // Change pitch for the other times\n            soundFile.rate(pitches[Math.floor(Math.random() * pitches.length)]);\n            soundFile.play();\n        }\n    }\n}\n  finished() {\n    return this.life < 0; // Return whether the circle should be removed\n  }\n\n  displayLine(nextCircle) {\n    stroke(255, 150); // Set line color and transparency\n    line(this.x, this.y, nextCircle.x, nextCircle.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672921b39391e8c786d6794a",
        "createdAt": "2024-11-04T19:37:59.393Z",
        "updatedAt": "2024-11-04T19:37:59.393Z",
        "id": "672921b39391e8c786d6794a"
      }
    ],
    "createdAt": "2024-11-04T19:23:21.893Z",
    "updatedAt": "2024-11-04T19:37:59.393Z",
    "id": "5cwMxyGyC"
  },
  {
    "_id": "IyA3vI_UL",
    "name": "serial for pulse ox copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6728678cbd85fb70d8e7a5f8",
          "6728678cbd85fb70d8e7a5f9",
          "6728678cbd85fb70d8e7a5fa"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6728678cbd85fb70d8e7a5f7",
        "createdAt": "2024-11-04T06:19:57.353Z",
        "updatedAt": "2024-11-04T06:19:57.353Z",
        "id": "6728678cbd85fb70d8e7a5f7"
      },
      {
        "name": "sketch.js",
        "content": "//simplified template. for longer story //https://editor.p5js.org/rios/sketches/wtZvFIkW5\n//\nconst askForPort = false; //true first time to pick port, then change to false\nconst serial = new p5.WebSerial();\nlet portButton;\nlet inData = []; \nlet outData  ;\nlet noFinger = true; \nlet x = 0;\nlet y = 0;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight); // make the canvas\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported Try Chrome \");\n  }\n  //first time you connect create button to identify port\n  if (askForPort ) {\n     makePortButton();\n  } else {\n   serial.getPorts(); //skip the button use port from last time\n  }\n  serial.on(\"portavailable\", openPort);\n  serial.on(\"data\", serialEvent);\n  textSize(32);\n}\n\n////////////\n// DRAW  ///\n////////////\nfunction draw() {\n  background(255);\n  if (noFinger) {\n    console.log(\"NO FINGER\") ;\n    return;\n  }\n  if (inData.length > 0) {\n    //turn it into JSON\n    let asJSON = {}\n    for(let i = 0; i < inData.length; i++){\n         let nameValuePair = inData[i].split(\"=\");\n          asJSON[nameValuePair[0].trim()] = int(nameValuePair[1]);\n    }\n    text(JSON.stringify(asJSON), 0,100);\n    \n    if (asJSON.IR){\n      y = (asJSON.IR- 101100)/7\n    }\n    ellipse(x,y,100,100);\n    x++;\n    if (x > width) x = 0;\n \n  }\n  //don't just stand there, put these variables to use in your code\n}\n\n/////////////////////////////\n// A CALLBACK FUNCTION CALLED WHEN DATA COMES IN  ///  \n/////////////////////////////\n\nfunction serialEvent() {\n\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  if (inString ) {\n    noFinger = inString.includes(\"No finger\")\n    if (! noFinger){\n    //console.log(inString);\n    inData = split(inString, \",\");\n    }\n  }\n}\n\n/////////////////////////////////////////////\n// UTILITY FUNCTIONS TO MAKE CONNECTIONS  ///\n/////////////////////////////////////////////\n\n\nfunction openPort() {\n  serial.open()\n  if (portButton) portButton.hide();\n}\n\n// This is a convenience for picking from available serial ports:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(() =>serial.requestPort());\n}\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6728678cbd85fb70d8e7a5f9",
        "createdAt": "2024-11-04T06:19:57.353Z",
        "updatedAt": "2024-11-04T06:19:57.353Z",
        "id": "6728678cbd85fb70d8e7a5f9"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  \n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n    \n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n  \n  \n  </head>\n \n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6728678cbd85fb70d8e7a5f8",
        "createdAt": "2024-11-04T06:19:57.353Z",
        "updatedAt": "2024-11-04T06:19:57.353Z",
        "id": "6728678cbd85fb70d8e7a5f8"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6728678cbd85fb70d8e7a5fa",
        "createdAt": "2024-11-04T06:19:57.353Z",
        "updatedAt": "2024-11-04T06:19:57.353Z",
        "id": "6728678cbd85fb70d8e7a5fa"
      }
    ],
    "createdAt": "2024-11-04T06:19:54.938Z",
    "updatedAt": "2024-11-04T06:19:57.353Z",
    "id": "IyA3vI_UL"
  },
  {
    "_id": "Z6o-e84r-",
    "name": "serial for pulse ox copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6725b12dbcb32f4419b03583",
          "6725b12dbcb32f4419b03584",
          "6725b12dbcb32f4419b03585"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6725b12dbcb32f4419b03582",
        "createdAt": "2024-10-21T20:53:17.863Z",
        "updatedAt": "2024-10-21T20:53:17.863Z",
        "id": "6725b12dbcb32f4419b03582"
      },
      {
        "name": "sketch.js",
        "content": "//simplified template. for longer story //https://editor.p5js.org/rios/sketches/wtZvFIkW5\n//\nconst askForPort = false; //true first time to pick port, then change to false\nconst serial = new p5.WebSerial();\nlet portButton;\nlet inData = []; \nlet outData  ;\nlet noFinger = true; \nlet x = 0;\nlet y = 0;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight); // make the canvas\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported Try Chrome \");\n  }\n  //first time you connect create button to identify port\n  if (askForPort ) {\n     makePortButton();\n  } else {\n   serial.getPorts(); //skip the button use port from last time\n  }\n  serial.on(\"portavailable\", openPort);\n  serial.on(\"data\", serialEvent);\n  textSize(32);\n}\n\n////////////\n// DRAW  ///\n////////////\nfunction draw() {\n  background(255);\n  if (noFinger) {\n    text(\"NO FINGER\", 10,32) ;\n    return;\n  }\n  if (inData.length > 0) {\n    //turn it into JSON\n    let asJSON = {}\n    for(let i = 0; i < inData.length; i++){\n         let nameValuePair = inData[i].split(\"=\");\n          asJSON[nameValuePair[0].trim()] = int(nameValuePair[1]);\n    }\n    text(JSON.stringify(asJSON), 0,100);\n    \n    if (asJSON.IR){\n      y = (asJSON.IR- 101100)/7\n    }\n    ellipse(x,y,100,100);\n    x++;\n    if (x > width) x = 0;\n \n  }\n  //don't just stand there, put these variables to use in your code\n}\n\n/////////////////////////////\n// A CALLBACK FUNCTION CALLED WHEN DATA COMES IN  ///  \n/////////////////////////////\n\nfunction serialEvent() {\n\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  if (inString ) {\n    noFinger = inString.includes(\"No finger\")\n    if (! noFinger){\n    //console.log(inString);\n    inData = split(inString, \",\");\n    }\n  }\n}\n\n/////////////////////////////////////////////\n// UTILITY FUNCTIONS TO MAKE CONNECTIONS  ///\n/////////////////////////////////////////////\n\n\nfunction openPort() {\n  serial.open()\n  if (portButton) portButton.hide();\n}\n\n// This is a convenience for picking from available serial ports:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(() =>serial.requestPort());\n}\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6725b12dbcb32f4419b03584",
        "createdAt": "2024-10-21T20:53:17.863Z",
        "updatedAt": "2024-10-21T20:53:17.863Z",
        "id": "6725b12dbcb32f4419b03584"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  \n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n    \n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n  \n  \n  </head>\n \n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6725b12dbcb32f4419b03583",
        "createdAt": "2024-10-21T20:53:17.863Z",
        "updatedAt": "2024-10-21T20:53:17.863Z",
        "id": "6725b12dbcb32f4419b03583"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6725b12dbcb32f4419b03585",
        "createdAt": "2024-10-21T20:53:17.863Z",
        "updatedAt": "2024-10-21T20:53:17.863Z",
        "id": "6725b12dbcb32f4419b03585"
      }
    ],
    "createdAt": "2024-11-02T04:57:17.469Z",
    "updatedAt": "2024-11-02T04:57:17.469Z",
    "id": "Z6o-e84r-"
  },
  {
    "_id": "wnf7jU7SX",
    "name": "Shape project",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "673017958d89fa1186163780",
          "673017945ee01426e3f23eca",
          "6730177f4a384c72e88df7f3",
          "673017958d89fa1186163775",
          "6730177f4a384c72e88df7f4",
          "673171a6f72b8e9909f70ed3",
          "6730179434002b110272ece5"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6730177f4a384c72e88df7f2",
        "createdAt": "2024-11-23T22:50:36.460Z",
        "updatedAt": "2024-11-23T22:50:36.460Z",
        "id": "6730177f4a384c72e88df7f2"
      },
      {
        "name": "index.html",
        "content": "<html>\n\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Webcam Image Classification using a pre-trained customized model and p5.js</title>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\n  <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\" type=\"text/javascript\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n  <script src=\"https://unpkg.com/p5ble@0.0.4/dist/p5.ble.js\" type=\"text/javascript\"></script> \n  <script src=\"p5.serialport.js\"></script>\n  <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n</head>\n\n<body>\n  <script src=\"sketch.js\"></script>\n</body>\n\n</html>",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6730177f4a384c72e88df7f3",
        "createdAt": "2024-11-23T22:50:36.460Z",
        "updatedAt": "2024-11-23T22:50:36.460Z",
        "id": "6730177f4a384c72e88df7f3"
      },
      {
        "name": "sketch.js",
        "content": "\n// Classifier Variable\nlet classifier;\n// Model URL\nlet imageModelURL = \"https://teachablemachine.withgoogle.com/models/TbX6qOHde/\";\n\n// Video\nlet video;\nlet label = \"\";\nlet Circle;\nlet Heart;\nlet Rhombus;\nlet Triangle;\nlet fullscreenStarted = false;\nlet currentVideo = null;\n\n//////////////////////////\n//simplified template. for longer story //https://editor.p5js.org/rios/sketches/wtZvFIkW5\n//\nconst askForPort = true; //true first time to pick port, then change to false\nconst serial = new p5.WebSerial();\nlet portButton;\nlet inData;\nlet outData;\n\n\n// Load the model first\nfunction preload() {\n  classifier = ml5.imageClassifier(imageModelURL + \"model.json\", {\n    flipped: true,\n  });\n  \n  Circle = createVideo(['circle.mp4']);\n  Heart = createVideo(['heart.mp4']);\n  Rhombus = createVideo(['rhombus.mp4']);\n  Triangle = createVideo(['triangle.mp4']);\n  Circle.hide(); \n  Rhombus.hide(); \n  Triangle.hide(); \n  Heart.hide(); \n}\n\nfunction setup() {\n  // setInterval(classifyVideo, 1000);\n  createCanvas(windowWidth, windowHeight);\n  // Create the video\n  video = createCapture(VIDEO, { flipped: true });\n  video.size(320, 240);\n  video.hide();\n  classifier.classifyStart(video, gotResult);\n  \n  Circle.onended(() => currentVideo = null);\n  Heart.onended(() => currentVideo = null);\n  Rhombus.onended(() => currentVideo = null);\n  Triangle.onended(() => currentVideo = null);\n  \n  /////////////////////////////////////\n    if (askForPort) {\n    makePortButton();\n  } else {\n    serial.getPorts(); //skip the button use port from last time\n  }\n  serial.on(\"portavailable\", openPort);\n  serial.on(\"data\", serialEvent);\n}\n\nfunction draw() {\n  resizeCanvas(windowWidth, windowHeight);\n  image(video, width/2, height/2);\n  background(0);\n  imageMode(CENTER);\n  \n  if (currentVideo === null) {\n    if (label === \"rhombus\") {\n      currentVideo = Rhombus;\n      serial.write(\"40\\n\");\n    } else if (label === \"circle\") {\n      currentVideo = Circle;\n      serial.write(\"20\\n\");\n    } else if (label === \"triangle\") {\n      currentVideo = Triangle;\n      serial.write(\"30\\n\");\n    } else if (label === \"heart\") {\n      currentVideo = Heart;\n      serial.write(\"10\\n\");\n    } else if(label === \"nothing\"){\n      currentVideo = Heart;\n      serial.write(\"10\\n\");\n    }\n    \n    \n    \n    // Play the current video if it’s been set and display it on the canvas\n    if (currentVideo) {\n      currentVideo.play();\n    }\n  }\n    if (currentVideo) {\n    image(currentVideo, width / 2, height / 2);\n  }\n}\n\n// Get a prediction for the current video frame\nfunction classifyVideo() {\n  classifier.classify(flippedVideo, gotResult);\n}\n\n// When we get a result\nfunction gotResult(results) {\n  // The results are in an array ordered by confidence.\n  // console.log(results[0]);\n  label = results[0].label;\n}\n\nfunction keyPressed() {\n  if (!fullscreen()) {\n    fullscreen(true);\n    fullscreenStarted = true; // Track if fullscreen has started\n  }\n}\n//////////////////////////\n/////////////////////////////\n// A CALLBACK FUNCTION CALLED WHEN DATA COMES IN  ///  \n/////////////////////////////\n\nfunction serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  if (inString) {\n    inData = split(inString, \",\");\n  }\n}\n\n/////////////////////////////////////////////\n// UTILITY FUNCTIONS TO MAKE CONNECTIONS  ///\n/////////////////////////////////////////////\n\n\nfunction openPort() {\n  serial.open()\n  if (portButton) portButton.hide();\n}\n\n// This is a convenience for picking from available serial ports:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(() =>serial.requestPort());\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6730177f4a384c72e88df7f4",
        "createdAt": "2024-11-23T22:50:36.460Z",
        "updatedAt": "2024-11-23T22:50:36.460Z",
        "id": "6730177f4a384c72e88df7f4"
      },
      {
        "name": "triangle.mp4",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/90745ce3-73b2-4eb7-8855-4b83d7f5d4fb.mp4",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6730179434002b110272ece5",
        "createdAt": "2024-11-23T22:50:36.460Z",
        "updatedAt": "2024-11-23T22:50:36.460Z",
        "id": "6730179434002b110272ece5"
      },
      {
        "name": "heart.mp4",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/96c27f73-3dce-43ef-b5f1-19d587b0be44.mp4",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673017945ee01426e3f23eca",
        "createdAt": "2024-11-23T22:50:36.460Z",
        "updatedAt": "2024-11-23T22:50:36.460Z",
        "id": "673017945ee01426e3f23eca"
      },
      {
        "name": "rhombus.mp4",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/34992ce4-72ed-407a-9e26-8d168a597e25.mp4",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673017958d89fa1186163775",
        "createdAt": "2024-11-23T22:50:36.460Z",
        "updatedAt": "2024-11-23T22:50:36.460Z",
        "id": "673017958d89fa1186163775"
      },
      {
        "name": "circle.mp4",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/2d948a16-b5dd-4e85-af95-2fec3b18706a.mp4",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673017958d89fa1186163780",
        "createdAt": "2024-11-23T22:50:36.460Z",
        "updatedAt": "2024-11-23T22:50:36.460Z",
        "id": "673017958d89fa1186163780"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n  \n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673171a6f72b8e9909f70ed3",
        "createdAt": "2024-11-23T22:50:36.460Z",
        "updatedAt": "2024-11-23T22:50:36.460Z",
        "id": "673171a6f72b8e9909f70ed3"
      }
    ],
    "createdAt": "2024-11-10T02:16:30.590Z",
    "updatedAt": "2024-11-23T22:50:36.460Z",
    "id": "wnf7jU7SX"
  },
  {
    "_id": "XjPmRYgE0",
    "name": "Silvia's complete code",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6719345e4fbb9cc3565029ad",
          "6719345e4fbb9cc3565029ae",
          "6719345e4fbb9cc3565029af",
          "6719345e4fbb9cc3565029b0"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6719345e4fbb9cc3565029ac",
        "createdAt": "2024-10-26T07:05:29.434Z",
        "updatedAt": "2024-10-26T07:05:29.434Z",
        "id": "6719345e4fbb9cc3565029ac"
      },
      {
        "name": "sketch.js",
        "content": "let gravity; \nlet fireworks = [];\nlet colors = [];\nlet trail = [];\nlet music, amplitude;\n\nfunction preload() {\n  // Load your music file here (make sure the file path is correct)\n  music = loadSound('1021.MP3');\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  gravity = createVector(0, 0.1);\n  colors = [\"#ff99c8\", \"#fcf6bd\", \"#d0f4de\", \"#a9def9\", \"#e4c1f9\"];\n  \n  // Start the music and create amplitude analyzer\n  music.play();\n  music.setVolume(0.5);\n  amplitude = new p5.Amplitude();\n}\n\nfunction draw() {\n  background(50); \n  \n  // Get the amplitude level from the music\n  let level = amplitude.getLevel();\n  \n  // Use music amplitude to control fireworks frequency\n  if (level > 0.05 && random(1) < level) {\n    fireworks.push(new Firework(random(width), height));\n  }\n\n  // Update and display fireworks\n  for (let i = fireworks.length - 1; i >= 0; i--) {\n    fireworks[i].update();\n    fireworks[i].display();\n    \n    if (fireworks[i].done) {\n      fireworks.splice(i, 1);\n    }\n  }\n\n  // White ball tracking mouse on X-axis with trailing effect\n  let ball = createVector(mouseX, height / 2);\n  trail.push(ball);\n  \n  // Limit trail length to 50\n  if (trail.length > 50) {\n    trail.splice(0, 1);\n  }\n\n  noFill();\n  for (let i = 0; i < trail.length; i++) {\n    let pos = trail[i];\n    let size = map(i, 0, trail.length, 10, 30);\n    fill(255, 255 - i * 5);\n    ellipse(pos.x, pos.y, size, size);\n  }\n}\n\n// Firework class\nclass Firework {\n  constructor(x, y) {\n    this.pos = createVector(x, y);\n    this.vel = createVector(random(-1, 1), random(-5, -10));\n    this.c = color(random(colors));\n    this.explode = false;\n    this.firework = new Particle(this.pos.x, this.pos.y, this.vel.x, this.vel.y, this.explode, this.c);\n    this.particles = [];\n    this.num = 50;\n    this.done = false;\n  }\n  \n  update() {\n    if (!this.explode) {\n      this.firework.update();\n\n      if (this.firework.vel.y >= 0) {\n        this.exploded();\n      }\n    } else {\n      for (let i = this.particles.length - 1; i >= 0; i--) {\n        this.particles[i].finished();\n        this.particles[i].update();\n\n        if (this.particles[i].done) {\n          this.particles.splice(i, 1);\n        }\n      }\n    }\n  }\n  \n  display() {\n    if (!this.explode) {\n      this.firework.display();\n    } else {\n      for (let i = 0; i < this.particles.length; i++) {\n        this.particles[i].display();\n      }\n    }\n  }\n  \n  exploded() {\n    this.explode = true;\n    for (let i = 0; i < this.num; i++) {\n      this.particles.push(new Particle(this.firework.pos.x, this.firework.pos.y, random(-2, 2), random(-5, 5), true, this.c));\n    }\n  }\n  \n  done() {\n    return this.explode && this.particles.length === 0;\n  }\n}\n\n// Particle class for fireworks\nclass Particle {\n  constructor(x, y, vx, vy, explode, c) {\n    this.pos = createVector(x, y);\n    this.vel = createVector(vx, vy);\n    this.c = c;\n    this.explode = explode;\n    this.size = this.explode ? 2 : 10;\n    this.life = 255;\n    this.done = false;\n  }\n  \n  update() {\n    this.vel.add(gravity);\n    this.pos.add(this.vel);\n    this.life -= 2;\n  }\n  \n  display() {\n    noStroke();\n    fill(this.c, this.life);\n    drawingContext.shadowBlur = 30;\n    drawingContext.shadowColor = color(this.c);\n    ellipse(this.pos.x, this.pos.y, this.size, this.size);\n  }\n  \n  finished() {\n    if (this.life < 0) {\n      this.done = true;\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6719345e4fbb9cc3565029af",
        "createdAt": "2024-10-26T07:05:29.434Z",
        "updatedAt": "2024-10-26T07:05:29.434Z",
        "id": "6719345e4fbb9cc3565029af"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6719345e4fbb9cc3565029ae",
        "createdAt": "2024-10-26T07:05:29.434Z",
        "updatedAt": "2024-10-26T07:05:29.434Z",
        "id": "6719345e4fbb9cc3565029ae"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6719345e4fbb9cc3565029b0",
        "createdAt": "2024-10-26T07:05:29.434Z",
        "updatedAt": "2024-10-26T07:05:29.434Z",
        "id": "6719345e4fbb9cc3565029b0"
      },
      {
        "name": "1021.MP3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/5ed0cf78-a56f-49c5-b529-f8332b6aa833.MP3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6719345e4fbb9cc3565029ad",
        "createdAt": "2024-10-26T07:05:29.434Z",
        "updatedAt": "2024-10-26T07:05:29.434Z",
        "id": "6719345e4fbb9cc3565029ad"
      }
    ],
    "createdAt": "2024-10-23T17:37:34.615Z",
    "updatedAt": "2024-10-26T07:05:29.434Z",
    "id": "XjPmRYgE0"
  },
  {
    "_id": "G4ETDlRMs",
    "name": "Simple trailing ball with mouseX",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "671934634fbb9cc3565029b2",
          "671bf5bd33f9557dae863598",
          "671934634fbb9cc3565029b1",
          "671934634fbb9cc3565029b3",
          "671bf5fa6af6795ba2d48f52"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "671934634fbb9cc3565029b4",
        "createdAt": "2024-10-26T07:06:15.793Z",
        "updatedAt": "2024-10-26T07:06:15.793Z",
        "id": "671934634fbb9cc3565029b4"
      },
      {
        "name": "sketch.js",
        "content": "let trail = [];\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n}\n\nfunction draw() {\n  background(0);\n\n  \n  \n  // Create a vector for the ball at the mouseX position\n  let ball = createVector(mouseX, height / 2);\n  trail.push(ball);\n  noStroke();\n\n  // Limit the trail length to 50\n  if (trail.length > 50) {\n    trail.splice(0, 1);\n  }\n\n  // Set up the glow and blur effect\n  drawingContext.shadowBlur = 30; // Adjust the blur intensity\n  drawingContext.shadowColor = color(255); // White glow effect\n\n  // Draw the trail and the ball\n  noFill();\n  for (let i = 0; i < trail.length; i++) {\n    let pos = trail[i];\n    let size = map(i, 0, trail.length, 10, 30);  // Ball size changes with trail position\n    fill(255, 255 - i * 5);  // Fading trail effect\n    ellipse(pos.x, pos.y, size, size);\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "671934634fbb9cc3565029b1",
        "createdAt": "2024-10-26T07:06:15.793Z",
        "updatedAt": "2024-10-26T07:06:15.793Z",
        "id": "671934634fbb9cc3565029b1"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n    <script src=\"system.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671934634fbb9cc3565029b2",
        "createdAt": "2024-10-26T07:06:15.793Z",
        "updatedAt": "2024-10-26T07:06:15.793Z",
        "id": "671934634fbb9cc3565029b2"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671934634fbb9cc3565029b3",
        "createdAt": "2024-10-26T07:06:15.793Z",
        "updatedAt": "2024-10-26T07:06:15.793Z",
        "id": "671934634fbb9cc3565029b3"
      },
      {
        "name": "particle.js",
        "content": "class Particle {\n  constructor(x, y){\n    this.pos = createVector(x, y)\n    this.vel = createVector(0, 0)\n    this.acc = p5.Vector.random2D();\n    this.acc.mult(0.02);\n    this.life = 255;\n    this.done = false;\n    this.hueValue = 0;\n  }\n  \n  update(){\n    this.finished();\n    \n    this.vel.add(this.acc);\n    this.pos.add(this.vel);\n    \n    this.life -= 2;\n  }\n  display(){\n    noStroke();\n    fill(170, 170, 160, this.life);\n    ellipse(this.pos.x, this.pos.y, 5, 5);\n  }\n\n  finished(){\n    if (this.life < 0){\n      this.done = true;\n    } else {\n      this.done = false;\n    }\n  }\n} ",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671bf5bd33f9557dae863598",
        "createdAt": "2024-10-26T07:06:15.793Z",
        "updatedAt": "2024-10-26T07:06:15.793Z",
        "id": "671bf5bd33f9557dae863598"
      },
      {
        "name": "system.js",
        "content": "",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671bf5fa6af6795ba2d48f52",
        "createdAt": "2024-10-26T07:06:15.793Z",
        "updatedAt": "2024-10-26T07:06:15.793Z",
        "id": "671bf5fa6af6795ba2d48f52"
      }
    ],
    "updatedAt": "2024-10-26T07:06:15.793Z",
    "createdAt": "2024-10-23T17:50:47.906Z",
    "id": "G4ETDlRMs"
  },
  {
    "_id": "qsagDzzJt",
    "name": "simplified serial template copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66fc740fa0a15409b95088e6",
          "66fc740fa0a15409b95088e7",
          "66fc740fa0a15409b95088e8"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66fc740fa0a15409b95088e5",
        "createdAt": "2023-10-19T22:07:42.999Z",
        "updatedAt": "2023-10-19T22:07:42.999Z",
        "id": "66fc740fa0a15409b95088e5"
      },
      {
        "name": "sketch.js",
        "content": "//simplified template. for longer story //https://editor.p5js.org/rios/sketches/wtZvFIkW5\n//\nconst askForPort = true; //true first time to pick port, then change to false\nconst serial = new p5.WebSerial();\nlet portButton;\nlet inData; \nlet outData; \n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight); // make the canvas\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported Try Chrome \");\n  }\n  //first time you connect create button to identify port\n  if (askForPort ) {\n     makePortButton();\n  } else {\n   serial.getPorts(); //skip the button use port from last time\n  }\n  serial.on(\"portavailable\", openPort);\n  serial.on(\"data\", serialEvent);\n  textSize(32);\n}\n\n////////////\n// DRAW  ///\n////////////\nfunction draw() {\n  background(255);\n  if (inData) {\n    let sensor1 = inData[0];\n    let sensor2 = inData[1];\n\n    text(\"Input \" + sensor1 + \", \" + sensor2, 100, 100);\n  }\n  //don't just stand there, put these variables to use in your code\n}\n\n/////////////////////////////\n// A CALLBACK FUNCTION CALLED WHEN DATA COMES IN  ///  \n/////////////////////////////\n\nfunction serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  if (inString) {\n    inData = split(inString, \",\");\n  }\n}\n\n/////////////////////////////////////////////\n// UTILITY FUNCTIONS TO MAKE CONNECTIONS  ///\n/////////////////////////////////////////////\n\n\nfunction openPort() {\n  serial.open()\n  if (portButton) portButton.hide();\n}\n\n// This is a convenience for picking from available serial ports:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(() =>serial.requestPort());\n}\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66fc740fa0a15409b95088e7",
        "createdAt": "2023-10-19T22:07:42.999Z",
        "updatedAt": "2023-10-19T22:07:42.999Z",
        "id": "66fc740fa0a15409b95088e7"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  \n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n    \n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n  \n  \n  </head>\n \n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fc740fa0a15409b95088e6",
        "createdAt": "2023-10-19T22:07:42.999Z",
        "updatedAt": "2023-10-19T22:07:42.999Z",
        "id": "66fc740fa0a15409b95088e6"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fc740fa0a15409b95088e8",
        "createdAt": "2023-10-19T22:07:42.999Z",
        "updatedAt": "2023-10-19T22:07:42.999Z",
        "id": "66fc740fa0a15409b95088e8"
      }
    ],
    "createdAt": "2024-10-01T22:13:35.188Z",
    "updatedAt": "2024-10-01T22:13:35.188Z",
    "id": "qsagDzzJt"
  },
  {
    "_id": "wGX6JfaRO",
    "name": "simplified serial template copy copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66fc7416a0a15409b95088ea",
          "66fc7416a0a15409b95088eb",
          "66fc7416a0a15409b95088ec"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66fc7416a0a15409b95088e9",
        "createdAt": "2024-10-01T22:35:22.903Z",
        "updatedAt": "2024-10-01T22:35:22.903Z",
        "id": "66fc7416a0a15409b95088e9"
      },
      {
        "name": "sketch.js",
        "content": "//simplified template. for longer story //https://editor.p5js.org/rios/sketches/wtZvFIkW5\n//\nconst askForPort = true; //true first time to pick port, then change to false\nconst serial = new p5.WebSerial();\nlet portButton;\nlet inData; \nlet outData; \n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight); // make the canvas\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported Try Chrome \");\n  }\n  //first time you connect create button to identify port\n  if (askForPort ) {\n     makePortButton();\n  } else {\n   serial.getPorts(); //skip the button use port from last time\n  }\n  serial.on(\"portavailable\", openPort);\n  serial.on(\"data\", serialEvent);\n  textSize(32);\n}\n\n////////////\n// DRAW  ///\n////////////\nfunction draw() {\n  background(255);\n  if (inData) {\n    let sensor1 = inData[0];\n    let sensor2 = inData[1];\n\n    text(\"Input \" + sensor1 + \", \" + sensor2, 100, 100);\n  }\n  //don't just stand there, put these variables to use in your code\n}\n\n/////////////////////////////\n// A CALLBACK FUNCTION CALLED WHEN DATA COMES IN  ///  \n/////////////////////////////\n\nfunction serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  if (inString) {\n    inData = split(inString, \",\");\n  }\n}\n\n/////////////////////////////////////////////\n// UTILITY FUNCTIONS TO MAKE CONNECTIONS  ///\n/////////////////////////////////////////////\n\n\nfunction openPort() {\n  serial.open()\n  if (portButton) portButton.hide();\n}\n\n// This is a convenience for picking from available serial ports:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(() =>serial.requestPort());\n}\n\n\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66fc7416a0a15409b95088eb",
        "createdAt": "2024-10-01T22:35:22.903Z",
        "updatedAt": "2024-10-01T22:35:22.903Z",
        "id": "66fc7416a0a15409b95088eb"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  \n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n    \n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n  \n  \n  </head>\n \n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fc7416a0a15409b95088ea",
        "createdAt": "2024-10-01T22:35:22.903Z",
        "updatedAt": "2024-10-01T22:35:22.903Z",
        "id": "66fc7416a0a15409b95088ea"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fc7416a0a15409b95088ec",
        "createdAt": "2024-10-01T22:35:22.903Z",
        "updatedAt": "2024-10-01T22:35:22.903Z",
        "id": "66fc7416a0a15409b95088ec"
      }
    ],
    "createdAt": "2024-10-01T22:13:42.254Z",
    "updatedAt": "2024-10-01T22:35:22.903Z",
    "id": "wGX6JfaRO"
  },
  {
    "_id": "ShDEA6UJe",
    "name": "simplified serial template using Vars and doing Serial Out copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "674fb337e709b979956554a1",
          "674fb337e709b979956554a2",
          "674fb337e709b979956554a3"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "674fb337e709b979956554a0",
        "createdAt": "2024-12-04T01:41:13.292Z",
        "updatedAt": "2024-12-04T01:41:13.292Z",
        "id": "674fb337e709b979956554a0"
      },
      {
        "name": "sketch.js",
        "content": "//simplified template. for longer story //https://editor.p5js.org/rios/sketches/wtZvFIkW5\n//\nconst askForPort = true; //true first time to pick port, then change to false\nconst serial = new p5.WebSerial();\nlet portButton;\nlet inData;\nlet outData;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight); // make the canvas\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported Try Chrome \");\n  }\n  //first time you connect create button to identify port\n  if (askForPort) {\n    makePortButton();\n  } else {\n    serial.getPorts(); //skip the button use port from last time\n  }\n  serial.on(\"portavailable\", openPort);\n  serial.on(\"data\", serialEvent);\n  textSize(32);\n  ellipseMode(CENTER);\n}\n\n////////////\n// DRAW  ///\n////////////\nfunction draw() {\n  background(255);\n  if (inData) {\n    let sensor1 = inData[0];\n    let sensor2 = inData[1];\n    let size = map(sensor1, 0,500,0,width);\n    let alpha = map(sensor2,0,300,255,0);\n    //console.log(alpha);\n    fill(255, 0, 255, alpha );\n    ellipse(width/2, height/2, size, size);\n    fill(0,0,0);\n    text(\"Input \" + sensor1 + \", \" + sensor2, 100, 100);\n  }\n}\n\n/////////////////////////////\n// A CALLBACK FUNCTION CALLED WHEN DATA COMES IN  ///\n/////////////////////////////\n\nfunction serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  if (inString) {\n    inData = split(inString, \",\");\n  }\n}\n\n\nfunction mouseDragged() {\n  //send mouse to arduino\n  //ceil makes it into an integer\n  mpos = ceil(map(mouseX, 0, width, 0, 255));\n  //mpos = constrain(mpos,0,255);\n  serial.write(mpos);\n  console.log(mpos);\n  \n}\n\n\n/////////////////////////////////////////////\n// UTILITY FUNCTIONS TO MAKE CONNECTIONS  ///\n/////////////////////////////////////////////\n\nfunction openPort() {\n  serial.open();\n  if (portButton) portButton.hide();\n}\n\n// This is a convenience for picking from available serial ports:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(() => serial.requestPort());\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "674fb337e709b979956554a2",
        "createdAt": "2024-12-04T01:41:13.292Z",
        "updatedAt": "2024-12-04T01:41:13.292Z",
        "id": "674fb337e709b979956554a2"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  \n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n    \n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n  \n  \n  </head>\n \n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674fb337e709b979956554a1",
        "createdAt": "2024-12-04T01:41:13.292Z",
        "updatedAt": "2024-12-04T01:41:13.292Z",
        "id": "674fb337e709b979956554a1"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674fb337e709b979956554a3",
        "createdAt": "2024-12-04T01:41:13.292Z",
        "updatedAt": "2024-12-04T01:41:13.292Z",
        "id": "674fb337e709b979956554a3"
      }
    ],
    "createdAt": "2024-12-04T01:41:10.635Z",
    "updatedAt": "2024-12-04T01:41:13.292Z",
    "id": "ShDEA6UJe"
  },
  {
    "_id": "Dy0nSeYEL",
    "name": "simplified serial template using Vars and doing Serial Out copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "674c9b40f39fea0b79b61789",
          "674c9b40f39fea0b79b6178a",
          "674c9b40f39fea0b79b6178b"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "674c9b40f39fea0b79b61788",
        "createdAt": "2024-12-01T17:26:03.343Z",
        "updatedAt": "2024-12-01T17:26:03.343Z",
        "id": "674c9b40f39fea0b79b61788"
      },
      {
        "name": "sketch.js",
        "content": "//simplified template. for longer story //https://editor.p5js.org/rios/sketches/wtZvFIkW5\n//\nconst askForPort = true; //true first time to pick port, then change to false\nconst serial = new p5.WebSerial();\nlet portButton;\nlet inData;\nlet outData;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight); // make the canvas\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported Try Chrome \");\n  }\n  //first time you connect create button to identify port\n  if (askForPort) {\n    makePortButton();\n  } else {\n    serial.getPorts(); //skip the button use port from last time\n  }\n  serial.on(\"portavailable\", openPort);\n  serial.on(\"data\", serialEvent);\n  textSize(32);\n  ellipseMode(CENTER);\n}\n\n////////////\n// DRAW  ///\n////////////\nfunction draw() {\n  background(255);\n  if (inData) {\n    let sensor1 = inData[0];\n    let size = map(sensor1, 0, 1024, 0, width);\n    ellipse(width/2, height/2, size, size);\n    fill(0,0,0);\n    text(\"Input \" + sensor1 + \", \" + sensor2, 100, 100);\n  }\n}\n\n/////////////////////////////\n// A CALLBACK FUNCTION CALLED WHEN DATA COMES IN  ///\n/////////////////////////////\n\nfunction serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  if (inString) {\n    inData = split(inString, \",\");\n  }\n}\n\n\nfunction mouseDragged() {\n  //send mouse to arduino\n  //ceil makes it into an integer\n  mpos = ceil(map(mouseX, 0, width, 0, 255));\n  //mpos = constrain(mpos,0,255);\n  serial.write(mpos);\n  console.log(mpos);\n  \n}\n\n\n/////////////////////////////////////////////\n// UTILITY FUNCTIONS TO MAKE CONNECTIONS  ///\n/////////////////////////////////////////////\n\nfunction openPort() {\n  serial.open();\n  if (portButton) portButton.hide();\n}\n\n// This is a convenience for picking from available serial ports:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(() => serial.requestPort());\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "674c9b40f39fea0b79b6178a",
        "createdAt": "2024-12-01T17:26:03.343Z",
        "updatedAt": "2024-12-01T17:26:03.343Z",
        "id": "674c9b40f39fea0b79b6178a"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  \n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n    \n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n  \n  \n  </head>\n \n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674c9b40f39fea0b79b61789",
        "createdAt": "2024-12-01T17:26:03.343Z",
        "updatedAt": "2024-12-01T17:26:03.343Z",
        "id": "674c9b40f39fea0b79b61789"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674c9b40f39fea0b79b6178b",
        "createdAt": "2024-12-01T17:26:03.343Z",
        "updatedAt": "2024-12-01T17:26:03.343Z",
        "id": "674c9b40f39fea0b79b6178b"
      }
    ],
    "createdAt": "2024-12-01T17:22:08.245Z",
    "updatedAt": "2024-12-01T17:26:03.343Z",
    "id": "Dy0nSeYEL"
  },
  {
    "_id": "IvUdV43Qf",
    "name": "Snake Coding Challenge copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "679acbc6cd92c39cdb25b5b7",
          "679acbc6cd92c39cdb25b5b8",
          "679acbc6cd92c39cdb25b5b9",
          "679acbc6cd92c39cdb25b5ba"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "679acbc6cd92c39cdb25b5b6",
        "createdAt": "2019-11-05T14:03:13.980Z",
        "updatedAt": "2019-11-05T14:03:13.980Z",
        "id": "679acbc6cd92c39cdb25b5b6"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@0.4.1/dist/ml5.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"snake.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679acbc6cd92c39cdb25b5b7",
        "createdAt": "2019-11-05T14:03:13.980Z",
        "updatedAt": "2019-11-05T14:03:13.980Z",
        "id": "679acbc6cd92c39cdb25b5b7"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679acbc6cd92c39cdb25b5ba",
        "createdAt": "2019-11-05T14:03:13.980Z",
        "updatedAt": "2019-11-05T14:03:13.980Z",
        "id": "679acbc6cd92c39cdb25b5ba"
      },
      {
        "name": "snake.js",
        "content": "class Snake {\n  \n  constructor() {\n  \tthis.body = [];\n    this.body[0] = createVector(floor(w/2), floor(h/2));\n    this.xdir = 0;\n    this.ydir = 0;\n    this.len = 0;\n  }\n  \n  setDir(x, y) {\n  \tthis.xdir = x;\n    this.ydir = y;\n  }\n  \n  update() {\n  \tlet head = this.body[this.body.length-1].copy();\n    this.body.shift();\n    head.x += this.xdir;\n    head.y += this.ydir;\n    this.body.push(head);\n  }\n  \n  grow() {\n  \tlet head = this.body[this.body.length-1].copy();\n    this.len++;\n    this.body.push(head);\n  }\n  \n  endGame() {\n  \tlet x = this.body[this.body.length-1].x;\n    let y = this.body[this.body.length-1].y;\n    if(x > w-1 || x < 0 || y > h-1 || y < 0) {\n       return true;\n    }\n    for(let i = 0; i < this.body.length-1; i++) {\n    \tlet part = this.body[i];\n      if(part.x == x && part.y == y) {\n      \treturn true;\n      }\n    }\n    return false;\n  }\n  \n  eat(pos) {\n  \tlet x = this.body[this.body.length-1].x;\n    let y = this.body[this.body.length-1].y;\n    if(x == pos.x && y == pos.y) {\n      this.grow();\n      return true;\n    }\n    return false;\n  }\n  \n  show() {\n  \tfor(let i = 0; i < this.body.length; i++) {\n    \tfill(0);\n      noStroke();\n      rect(this.body[i].x, this.body[i].y, 1, 1)\n    }\n  }\n\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679acbc6cd92c39cdb25b5b9",
        "createdAt": "2019-11-05T14:03:13.980Z",
        "updatedAt": "2019-11-05T14:03:13.980Z",
        "id": "679acbc6cd92c39cdb25b5b9"
      },
      {
        "name": "sketch.js",
        "content": "// Daniel Shiffman\n// http://youtube.com/thecodingtrain\n// http://codingtra.in\n\n// Coding Challenge #115: Snake Game Redux\n// https://youtu.be/OMoVcohRgZA\n\nlet snake;\nlet rez = 20;\nlet food;\nlet w;\nlet h;\n\nfunction setup() {\n  createCanvas(400, 400);\n  w = floor(width / rez);\n  h = floor(height / rez);\n  frameRate(5);\n  snake = new Snake();\n  foodLocation();\n}\n\nfunction foodLocation() {\n  let x = floor(random(w));\n  let y = floor(random(h));\n  food = createVector(x, y);\n\n}\n\nfunction keyPressed() {\n  if (keyCode === LEFT_ARROW) {\n    snake.setDir(-1, 0);\n  } else if (keyCode === RIGHT_ARROW) {\n    snake.setDir(1, 0);\n  } else if (keyCode === DOWN_ARROW) {\n    snake.setDir(0, 1);\n  } else if (keyCode === UP_ARROW) {\n    snake.setDir(0, -1);\n  } else if (key == ' ') {\n    snake.grow();\n  }\n\n}\n\nfunction draw() {\n  scale(rez);\n  background(220);\n  if (snake.eat(food)) {\n    foodLocation();\n  }\n  snake.update();\n  snake.show();\n\n\n  if (snake.endGame()) {\n    print(\"END GAME\");\n    background(255, 0, 0);\n    noLoop();\n  }\n\n  noStroke();\n  fill(255, 0, 0);\n  rect(food.x, food.y, 1, 1);\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "679acbc6cd92c39cdb25b5b8",
        "createdAt": "2019-11-05T14:03:13.980Z",
        "updatedAt": "2019-11-05T14:03:13.980Z",
        "id": "679acbc6cd92c39cdb25b5b8"
      }
    ],
    "createdAt": "2025-01-30T00:45:58.617Z",
    "updatedAt": "2025-01-30T00:45:58.617Z",
    "id": "IvUdV43Qf"
  },
  {
    "_id": "tLL1sMwK7",
    "name": "Snake Game Own Version",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6798511ff37d5975bc58f7ff",
          "6798511ff37d5975bc58f800",
          "6798511ff37d5975bc58f801",
          "6798511ff37d5975bc58f802"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6798511ff37d5975bc58f7fe",
        "createdAt": "2025-01-28T04:20:04.218Z",
        "updatedAt": "2025-01-28T04:20:04.218Z",
        "id": "6798511ff37d5975bc58f7fe"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@0.4.1/dist/ml5.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"snake.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6798511ff37d5975bc58f7ff",
        "createdAt": "2025-01-28T04:20:04.218Z",
        "updatedAt": "2025-01-28T04:20:04.218Z",
        "id": "6798511ff37d5975bc58f7ff"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6798511ff37d5975bc58f802",
        "createdAt": "2025-01-28T04:20:04.218Z",
        "updatedAt": "2025-01-28T04:20:04.218Z",
        "id": "6798511ff37d5975bc58f802"
      },
      {
        "name": "snake.js",
        "content": "class Snake {\n  \n  constructor() {\n  \tthis.body = [];\n    this.body[0] = createVector(floor(w/2), floor(h/2));\n    this.body[1] = createVector(floor(w/2), floor(h/2));\n    this.xdir = 0;\n    this.ydir = 0;\n    this.len = 0;\n  }\n  \n  setDir(x, y) {\n  \tthis.xdir = x;\n    this.ydir = y;\n  }\n  \n  update() {\n  \tlet head = this.body[this.body.length-1].copy();\n    this.body.shift();\n    head.x += this.xdir;\n    head.y += this.ydir;\n    this.body.push(head);\n  }\n  \n  grow() {\n  \tlet head = this.body[this.body.length-1].copy();\n    this.len++;\n    this.body.push(head);\n  }\n  \n  endGame() {\n  \tlet x = this.body[this.body.length-1].x;\n    let y = this.body[this.body.length-1].y;\n    if(x > w-1 || x < 0 || y > h-1 || y < 0) {\n       return true;\n    }\n    for(let i = 0; i < this.body.length-1; i++) {\n    \tlet part = this.body[i];\n      if(part.x == x && part.y == y) {\n      \treturn true;\n      }\n    }\n    return false;\n  }\n  \n  eat(pos) {\n  \tlet x = this.body[this.body.length-1].x;\n    let y = this.body[this.body.length-1].y;\n    if(x == pos.x && y == pos.y) {\n      this.grow();\n      return true;\n    }\n    return false;\n  }\n  \n  show() {\n  \tfor(let i = 0; i < this.body.length; i++) {\n    \tfill(0);\n      noStroke();\n      rect(this.body[i].x, this.body[i].y, 1, 1)\n    }\n  }\n\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6798511ff37d5975bc58f801",
        "createdAt": "2025-01-28T04:20:04.218Z",
        "updatedAt": "2025-01-28T04:20:04.218Z",
        "id": "6798511ff37d5975bc58f801"
      },
      {
        "name": "sketch.js",
        "content": "// Daniel Shiffman\n// http://youtube.com/thecodingtrain\n// http://codingtra.in\n\n// Coding Challenge #115: Snake Game Redux\n// https://youtu.be/OMoVcohRgZA\n\nlet snake;\nlet rez = 20;\nlet food;\nlet w;\nlet h;\n\nfunction setup() {\n  createCanvas(400, 400);\n   background(220);\n  w = floor(width / rez);\n  h = floor(height / rez);\n  frameRate(5);\n  snake = new Snake();\n  foodLocation();\n}\n\nfunction foodLocation() {\n  let x = floor(random(w));\n  let y = floor(random(h));\n  food = createVector(x, y);\n\n}\n\nfunction keyPressed() {\n  if (keyCode === LEFT_ARROW) {\n    snake.setDir(-1, 0);\n  } else if (keyCode === RIGHT_ARROW) {\n    snake.setDir(1, 0);\n  } else if (keyCode === DOWN_ARROW) {\n    snake.setDir(0, 1);\n  } else if (keyCode === UP_ARROW) {\n    snake.setDir(0, -1);\n  } else if (key == ' ') {\n    snake.grow();\n  }\n\n}\n\nfunction draw() {\n  scale(rez);\n  \n  if (snake.eat(food)) {\n    foodLocation();\n  }\n  snake.update();\n  snake.show();\n  \n    if (snake.endGame()) {\n    print(\"END GAME\");\n    background(255, 0, 0);\n    noLoop();\n  }\n  \n  \n  noStroke();\n  fill(255, 0, 0);\n  rect(food.x, food.y, 1, 1);\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6798511ff37d5975bc58f800",
        "createdAt": "2025-01-28T04:20:04.218Z",
        "updatedAt": "2025-01-28T04:20:04.218Z",
        "id": "6798511ff37d5975bc58f800"
      }
    ],
    "createdAt": "2025-01-28T03:38:06.668Z",
    "updatedAt": "2025-01-28T04:20:04.218Z",
    "id": "tLL1sMwK7"
  },
  {
    "_id": "9crhRzB1F",
    "name": "Sneaky prosecution",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "671f0bd95849c74b028ecbad",
          "671f0bd15f6bf2667b216af9",
          "671f0bc4df1d805ecf618c42",
          "671f0b82b119961c3db3c39f",
          "671f0b82b119961c3db3c39e",
          "671f0b82b119961c3db3c3a0"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "671f0b82b119961c3db3c3a1",
        "createdAt": "2024-10-28T05:00:30.515Z",
        "updatedAt": "2024-10-28T05:00:30.515Z",
        "id": "671f0b82b119961c3db3c3a1"
      },
      {
        "name": "sketch.js",
        "content": "let gifs = [1];\nlet gifPositions = [];\nlet gifCount = 5; // Starting number of GIFs\nlet gifWidths = [];\nlet gifHeights = [];\nlet opacities = [];\nconst circleRadius = 500; // Radius of the circle\nconst spawnInterval = 1000; // Time in milliseconds between spawns\n\nfunction preload() {\n  gifs[0] = loadImage(\"Demon.gif\", (img) => {\n    gifWidths[0] = img.width;\n    gifHeights[0] = img.height;\n  });\n  gifs[1] = loadImage(\"Ghost.gif\", (img) => {\n    gifWidths[1] = img.width;\n    gifHeights[1] = img.height;\n  });\n  gifs[2] = loadImage(\"Skeleton.gif\", (img) => {\n    gifWidths[2] = img.width;\n    gifHeights[2] = img.height;\n  });\n}\n\nfunction setup() {\n  createCanvas(2000, 2000);\n\n  // Initialize GIFs\n  for (let i = 0; i < gifCount; i++) {\n    spawnGif();\n  }\n  \n  // Start spawning GIFs every second\n  setInterval(spawnGif, spawnInterval);\n}\n\nfunction spawnGif() {\n  let gifWidth = 100;\n  let gifHeight = (gifWidth / gifWidths[0]) * gifHeights[0]; // Use the first GIF's dimensions for simplicity\n\n  let x, y;\n  // Generate positions outside of the circle\n  do {\n    x = random(0, width - gifWidth);\n    y = random(0, height - gifHeight);\n  } while (dist(x + gifWidth / 2, y + gifHeight / 2, width / 2, height / 2) < circleRadius);\n\n  gifPositions.push(createVector(x, y));\n  opacities.push(255); // Start fully opaque\n}\n\nfunction draw() {\n  background(0);\n\n  // The center where gifs will gradually disappear\n  let centerX = width / 2;\n  let centerY = height / 2;\n\n\n  // Move and draw GIFs\n  for (let i = 0; i < gifPositions.length; i++) {\n    let pos = gifPositions[i];\n\n    // distance to the center\n    let dx = centerX - (pos.x + 50); // Offset to the center of the GIF\n    let dy = centerY - (pos.y + 50); // Offset to the center of the GIF\n    let distanceToCenter = dist(pos.x + 50, pos.y + 50, centerX, centerY); // Calculate distance\n\n    // Move towards the center\n    pos.x += dx * 0.001; // Adjust the speed (0.05 for faster movement)\n    pos.y += dy * 0.001;\n\n    // Gradually decrease opacity until the GIF disappears at the edge of the circle\n    if (distanceToCenter < circleRadius + 250) {\n      let NdistanceToCenter = distanceToCenter - 250\n      // 250 represent the radius of the inner circle\n      opacities[i] = map(NdistanceToCenter, distanceToCenter, 0, 255, 0); // Fade out completely when at the edge\n    }\n\n    // Calculate width and height for rendering\n    let gifWidth = 100; // Desired width for resizing\n    let gifHeight = (gifWidth / gifWidths[i % gifWidths.length]) * gifHeights[i % gifHeights.length]; // Maintain aspect ratio\n\n    // Set the fill color with opacity\n    tint(255, max(opacities[i], 0)); // Set the opacity for the GIF, ensuring it doesn't go below 0\n    image(gifs[i % gifs.length], pos.x, pos.y, gifWidth, gifHeight); // Draw the GIF\n\n    // Stop drawing the GIF if it's fully transparent\n    if (opacities[i] <= 0) {\n      opacities[i] = 0; \n    }\n  }\n}\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "671f0b82b119961c3db3c39e",
        "createdAt": "2024-10-28T05:00:30.515Z",
        "updatedAt": "2024-10-28T05:00:30.515Z",
        "id": "671f0b82b119961c3db3c39e"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671f0b82b119961c3db3c39f",
        "createdAt": "2024-10-28T05:00:30.515Z",
        "updatedAt": "2024-10-28T05:00:30.515Z",
        "id": "671f0b82b119961c3db3c39f"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671f0b82b119961c3db3c3a0",
        "createdAt": "2024-10-28T05:00:30.515Z",
        "updatedAt": "2024-10-28T05:00:30.515Z",
        "id": "671f0b82b119961c3db3c3a0"
      },
      {
        "name": "Skeleton.gif",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/e8debcb9-55b7-4423-be3b-a64a331e14a0.gif",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671f0bc4df1d805ecf618c42",
        "createdAt": "2024-10-28T05:00:30.515Z",
        "updatedAt": "2024-10-28T05:00:30.515Z",
        "id": "671f0bc4df1d805ecf618c42"
      },
      {
        "name": "Ghost.gif",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/e28da36c-2c1f-46f1-94a0-89253b7b15e0.gif",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671f0bd15f6bf2667b216af9",
        "createdAt": "2024-10-28T05:00:30.515Z",
        "updatedAt": "2024-10-28T05:00:30.515Z",
        "id": "671f0bd15f6bf2667b216af9"
      },
      {
        "name": "Demon.gif",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/019c53eb-78c7-4bb7-a870-0b8c12638390.gif",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671f0bd95849c74b028ecbad",
        "createdAt": "2024-10-28T05:00:30.515Z",
        "updatedAt": "2024-10-28T05:00:30.515Z",
        "id": "671f0bd95849c74b028ecbad"
      }
    ],
    "updatedAt": "2024-10-28T05:00:30.515Z",
    "createdAt": "2024-10-28T03:56:54.943Z",
    "id": "9crhRzB1F"
  },
  {
    "_id": "m76ttiSF5",
    "name": "Sound Project",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67074dd26f2263274424252c",
          "67071bcf31e96f0ceeb46440",
          "67071bcf31e96f0ceeb46441",
          "67071bcf31e96f0ceeb46442"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67071bcf31e96f0ceeb4643f",
        "createdAt": "2024-10-31T16:59:47.309Z",
        "updatedAt": "2024-10-31T16:59:47.309Z",
        "id": "67071bcf31e96f0ceeb4643f"
      },
      {
        "name": "sketch.js",
        "content": "let osc, fft;\nlet radi = 100;\nlet fullscreenStarted = false;\nlet ba;\nvar myImage;\n\nfunction preload(){\n    myImage = loadImage('Background.jpg');\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  osc = new p5.TriOsc(); // set frequency and type\n  osc.amp(0.5);\n  fft = new p5.FFT();\n  osc.start();\n}\n\nfunction draw() {\n  resizeCanvas(windowWidth, windowHeight);\n  colorMode(HSB, 360, 100, 100, 100);\n  \n  \n  background(0);\n  \n  tint(255, ba);\n  image(myImage, -3, -3, windowWidth,windowHeight);\n\n  // Check if fullscreen has started\n  if (fullscreenStarted) {\n    stroke(207, 7, 99);\n    strokeWeight(4);\n    noFill();\n    \n    drawingContext.shadowBlur = 32;\n    drawingContext.shadowColor = color(207, 7, 99);\n    \n    translate(width / 2, height / 2);\n\n    let wave = fft.waveform();\n\n    // Draw circular waveform visualization\n    for (var t = -1; t <= 1; t += 2) {\n      beginShape();\n      for (var i = 0; i <= 150; i++) {\n        var index = floor(map(i, 0, 150, 0, wave.length - 1));\n        var r = map(wave[index], -1, 1, 300, 500);\n        var x = r * sin(i) * t;\n        var y = r * cos(i);\n        vertex(x, y);\n      }\n      endShape();\n    }\n\n    // Get the distance from the mouse to the center of the screen\n    let distToMouse = dist(mouseX, mouseY, width / 2, height / 2);\n\n    // Check if the mouse is inside the circle with a radius of 480 / 2\n    if (distToMouse <= 500 / 2) {\n      // Calculate the angle theta relative to the center\n      let theta = atan2(mouseY - height / 2, mouseX - width / 2);\n      \n      ba = 0;\n\n      // Adjust theta to range from 0 to TWO_PI\n      if (theta < 0) {\n        theta += TWO_PI;\n      }\n  let frequ;\n    if (theta <= PI){\n    frequ = map(theta, 0, PI, 25, 200); // Frequency mapped to full range\n    } else {frequ = map(theta, PI, TWO_PI, 200, 25)\n           }\n  \n    osc.freq(frequ);\n    \n\n    let amp1;\n    if (theta <= PI){\n    amp1 = map(theta, 0, PI, 0.01, 1); // Frequency mapped to full range\n    } else {amp1 = map(theta, PI, TWO_PI, 1, 0.01);}\n  \n    osc.amp(amp1);\n\n      console.log('Amp:', amp1);\n      console.log('Freq:', frequ);\n    } else (ba = 255);\n  }\n}\n\n// This function is triggered by mouse clicks\nfunction mousePressed() {\n   \n  if (dist(mouseX, mouseY, width / 2, height / 2) <= 500 / 2) {\n     ba = 0 ;\n  }else{\n    ba = 255;\n  } \n     \n  // Enter fullscreen when mouse is pressed\n  if (!fullscreen()) {\n    fullscreen(true);\n    fullscreenStarted = true; \n    \n  }\n}\n\n// Optional: you can also trigger fullscreen using a key press\nfunction keyPressed() {\n  if (!fullscreen()) {\n    fullscreen(true);\n    fullscreenStarted = true; // Track if fullscreen has started\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67071bcf31e96f0ceeb46441",
        "createdAt": "2024-10-31T16:59:47.309Z",
        "updatedAt": "2024-10-31T16:59:47.309Z",
        "id": "67071bcf31e96f0ceeb46441"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67071bcf31e96f0ceeb46440",
        "createdAt": "2024-10-31T16:59:47.309Z",
        "updatedAt": "2024-10-31T16:59:47.309Z",
        "id": "67071bcf31e96f0ceeb46440"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n  \n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67071bcf31e96f0ceeb46442",
        "createdAt": "2024-10-31T16:59:47.309Z",
        "updatedAt": "2024-10-31T16:59:47.309Z",
        "id": "67071bcf31e96f0ceeb46442"
      },
      {
        "name": "Background.jpg",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/9159f9c8-b502-41ef-8807-0c83610be4e8.jpg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67074dd26f2263274424252c",
        "createdAt": "2024-10-31T16:59:47.309Z",
        "updatedAt": "2024-10-31T16:59:47.309Z",
        "id": "67074dd26f2263274424252c"
      }
    ],
    "createdAt": "2024-10-10T00:11:58.151Z",
    "updatedAt": "2024-10-31T16:59:47.309Z",
    "id": "m76ttiSF5"
  },
  {
    "_id": "0T_mQB-Ib",
    "name": "sound project copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "670715004bf266006e3e5606",
          "670715004bf266006e3e5607",
          "670715004bf266006e3e5608",
          "670715004bf266006e3e5609"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "670715004bf266006e3e5605",
        "createdAt": "2024-10-09T23:44:28.036Z",
        "updatedAt": "2024-10-09T23:44:28.036Z",
        "id": "670715004bf266006e3e5605"
      },
      {
        "name": "sketch.js",
        "content": "var song;\nvar fft;\n\nfunction preload(){\n  song = loadSound('music.mp3')\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  fft = new p5.FFT();\n  angleMode(DEGREES);\n  song.pause();\n}\n\nfunction draw() {\n  background(0);\n  stroke(255);\n  strokeWeight(4);\n  noFill();\n  translate(width/2, height/2)\n  \n  var wave = fft.waveform();\n  \n  for(var t = -1; t <= 1; t += 2){\n    beginShape();\n    for(var i = 0; i <=180; i ++  ){\n    var index = floor(map(i, 0, 180, 0, wave.length-1));\n    var r = map(wave[index], -1, 1, 250, 360)\n    var x = r * sin(i) * t;\n    var y = r * cos(i);\n    vertex(x,y);\n  }\n  endShape();\n  }\n  \n\n}\n\nfunction mouseClicked(){\n  if(song.isPlaying()) {\n    song.pause()\n      }else {\n       song.play();\n      }\n  }",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "670715004bf266006e3e5608",
        "createdAt": "2024-10-09T23:44:28.036Z",
        "updatedAt": "2024-10-09T23:44:28.036Z",
        "id": "670715004bf266006e3e5608"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "670715004bf266006e3e5606",
        "createdAt": "2024-10-09T23:44:28.036Z",
        "updatedAt": "2024-10-09T23:44:28.036Z",
        "id": "670715004bf266006e3e5606"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "670715004bf266006e3e5609",
        "createdAt": "2024-10-09T23:44:28.036Z",
        "updatedAt": "2024-10-09T23:44:28.036Z",
        "id": "670715004bf266006e3e5609"
      },
      {
        "name": "music.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/70acd407-be14-4453-bfbe-a6359c1d1d36.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "670715004bf266006e3e5607",
        "createdAt": "2024-10-09T23:44:28.036Z",
        "updatedAt": "2024-10-09T23:44:28.036Z",
        "id": "670715004bf266006e3e5607"
      }
    ],
    "createdAt": "2024-10-09T23:42:56.534Z",
    "updatedAt": "2024-10-09T23:44:28.036Z",
    "id": "0T_mQB-Ib"
  },
  {
    "_id": "EMkmd7oG4",
    "name": "SOUND TESTER",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6706a4b240ba20372cba9c36",
          "6706a4b240ba20372cba9c35",
          "6706a4b240ba20372cba9c37"
        ],
        "fileType": "folder",
        "_id": "6706a4b240ba20372cba9c38",
        "createdAt": "2024-10-09T15:44:34.288Z",
        "updatedAt": "2024-10-09T15:44:34.288Z",
        "id": "6706a4b240ba20372cba9c38"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n}\n\nfunction keyPressed() {\n  serial.write(65);\n}\n\nfunction serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  if (inString) {\n    inData = split(inString, \",\");\n  }\n}\n\n/////////////////////////////////////////////\n// UTILITY FUNCTIONS TO MAKE CONNECTIONS  ///\n/////////////////////////////////////////////\n\nfunction openPort() {\n  serial.open();\n  if (portButton) portButton.hide();\n}\n\n// This is a convenience for picking from available serial ports:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(() => serial.requestPort());\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6706a4b240ba20372cba9c35",
        "createdAt": "2024-10-09T15:44:34.288Z",
        "updatedAt": "2024-10-09T15:44:34.288Z",
        "id": "6706a4b240ba20372cba9c35"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6706a4b240ba20372cba9c36",
        "createdAt": "2024-10-09T15:44:34.288Z",
        "updatedAt": "2024-10-09T15:44:34.288Z",
        "id": "6706a4b240ba20372cba9c36"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6706a4b240ba20372cba9c37",
        "createdAt": "2024-10-09T15:44:34.288Z",
        "updatedAt": "2024-10-09T15:44:34.288Z",
        "id": "6706a4b240ba20372cba9c37"
      }
    ],
    "updatedAt": "2024-10-09T15:44:34.288Z",
    "createdAt": "2024-10-09T15:44:23.833Z",
    "id": "EMkmd7oG4"
  },
  {
    "_id": "T4zyEisD-",
    "name": "Testing Mapping circle",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67072b5a31e96f0ceeb46444",
          "67072b5a31e96f0ceeb46443",
          "67072b5a31e96f0ceeb46445"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67072b5a31e96f0ceeb46446",
        "createdAt": "2024-10-10T03:57:53.541Z",
        "updatedAt": "2024-10-10T03:57:53.541Z",
        "id": "67072b5a31e96f0ceeb46446"
      },
      {
        "name": "sketch.js",
        "content": "let bright;\nlet bright1;\nlet r = 100;\nlet a = 255;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(0);\n  stroke(a);\n  noFill();\n\n  let cx = width / 2;  // Center x\n  let cy = height / 2; // Center y\n  \n  circle(cx, cy, r * 2);\n  \n  let dx = mouseX - cx;\n  let dy = mouseY - cy;\n  let distToMouse = dist(mouseX, mouseY, cx, cy);\n\n  if (distToMouse <= r) {\n    let theta = atan2(dy, dx);  // Angle from the center to the mouse\n    \n    a = 200;\n  \n    let x = r * cos(theta);\n    let y = r * sin(theta);\n  \n    bright = map(abs(theta), 0, PI, 25, 200);\n    bright1 = abs(map(abs(theta), PI, TWO_PI, 0.01, 1));\n    \n    console.log(bright);\n    console.log(bright1);\n  } else {\n    a = 255;\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67072b5a31e96f0ceeb46443",
        "createdAt": "2024-10-10T03:57:53.541Z",
        "updatedAt": "2024-10-10T03:57:53.541Z",
        "id": "67072b5a31e96f0ceeb46443"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67072b5a31e96f0ceeb46444",
        "createdAt": "2024-10-10T03:57:53.541Z",
        "updatedAt": "2024-10-10T03:57:53.541Z",
        "id": "67072b5a31e96f0ceeb46444"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67072b5a31e96f0ceeb46445",
        "createdAt": "2024-10-10T03:57:53.541Z",
        "updatedAt": "2024-10-10T03:57:53.541Z",
        "id": "67072b5a31e96f0ceeb46445"
      }
    ],
    "updatedAt": "2024-10-10T03:57:53.541Z",
    "createdAt": "2024-10-10T01:44:10.737Z",
    "id": "T4zyEisD-"
  },
  {
    "_id": "YsM5w4Rp8",
    "name": "Winter Pattern",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6778459cdda2610731ec7853",
          "6778459cdda2610731ec7852",
          "6778459cdda2610731ec7854"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6778459cdda2610731ec7855",
        "createdAt": "2025-01-28T13:04:17.757Z",
        "updatedAt": "2025-01-28T13:04:17.757Z",
        "id": "6778459cdda2610731ec7855"
      },
      {
        "name": "sketch.js",
        "content": "let num = 30;\nlet size;\nlet margin = 30;\nlet scaleFactor = 3.27;\nlet snowPallete = [\"#FFFFFF\", \"#CCE7FF\", \"#99D0FF\", \"#66B8FF\", \"#339FFF\", \"#0077FF\", \"#0055AA\", \"#003377\"];\nlet band = 100;\n\nlet scaleSlider; \nlet saveButton;\n\n\nfunction setup() {\n  createCanvas(400, 400);\n  size = (width - margin * 2)/num;\n  \n  scaleSlider = createSlider(1.5, 2.5, 2, 0.1);\n  scaleSlider.position(10, height + 10);\n  scaleSlider.size(200);\n  \n  saveButton = createButton('Save Design');\n  saveButton.position(220, height + 10);\n  saveButton.mousePressed(saveDesign);\n}\n\nfunction draw() {\n  background(0);\n  noStroke();\n  scaleFactor = scaleSlider.value();\n  \n  for(i = 0; i < num ; i ++){\n    for(j =0; j < num; j ++){\n      x = margin + size/2 + i * size;\n      y = margin + size/2 + j * size;\n      \n      let distFromCenter = dist(x, y, width/2, height/2);\n      let scaledDist = pow(distFromCenter, scaleFactor);\n      let index = floor(map(scaledDist , 0, band, 0, snowPallete.length));\n      let colorIndex = index % snowPallete.length\n\n    \n      fill(snowPallete[colorIndex]);\n      ellipse(x, y, size, size);\n    }\n  }\n}\n\nfunction saveDesign(){\n  saveCanvas('Snowflake', 'jpg');\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6778459cdda2610731ec7852",
        "createdAt": "2025-01-28T13:04:17.757Z",
        "updatedAt": "2025-01-28T13:04:17.757Z",
        "id": "6778459cdda2610731ec7852"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6778459cdda2610731ec7853",
        "createdAt": "2025-01-28T13:04:17.757Z",
        "updatedAt": "2025-01-28T13:04:17.757Z",
        "id": "6778459cdda2610731ec7853"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6778459cdda2610731ec7854",
        "createdAt": "2025-01-28T13:04:17.757Z",
        "updatedAt": "2025-01-28T13:04:17.757Z",
        "id": "6778459cdda2610731ec7854"
      }
    ],
    "updatedAt": "2025-01-28T13:04:17.757Z",
    "createdAt": "2025-01-03T20:39:33.961Z",
    "id": "YsM5w4Rp8"
  },
  {
    "_id": "x8Zy2iaY2",
    "name": "Working Dino Game V1",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67a6f5878a4145569dda5bef",
          "67a6f6038a4145569dda6538",
          "67a6f6531f41d4093d4dd66c",
          "67a8334b1f41d4093dab1285",
          "67a833505f90195c7bd282dd",
          "67a411f4507c10dd48144292",
          "67a6f70e0e29be2678bb30f9",
          "67a59b69d0b77072d5ba1751",
          "67a411f4507c10dd48144293"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67a411f4507c10dd48144291",
        "createdAt": "2025-02-09T05:16:57.035Z",
        "updatedAt": "2025-02-09T05:16:57.035Z",
        "id": "67a411f4507c10dd48144291"
      },
      {
        "name": "index.html",
        "content": "<!--\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\n  Learn more about the ml5.js project: https://ml5js.org/\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\n\n  This example demonstrates drawing skeletons on poses for the MoveNet model.\n-->\n\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>ml5.js bodyPose Skeleton Example</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n  </head>\n\n  <body>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a411f4507c10dd48144292",
        "createdAt": "2025-02-09T05:16:57.035Z",
        "updatedAt": "2025-02-09T05:16:57.035Z",
        "id": "67a411f4507c10dd48144292"
      },
      {
        "name": "sketch.js",
        "content": "let video;\nlet bodyPose;\nlet poses = [];\nlet connections;\nlet previousY = null;\nlet previousKneeHipDistance = null;\nlet jumpDetected = false;\nlet rectY = 300;\nlet jump = 0;\nlet dodge = false;\nlet rheight;\nlet dodgeHeight = 30;\nlet inMotion = false; // Prevents both actions from happening simultaneously\nlet motionCooldown = 0; // Timer to prevent rapid actions\n\nlet particles = []; // Array to hold all Particle objects\nlet framecount = 0; // Counter to track time (in frames)\nlet gameOver = false; // Flag to track if the game is over\nlet jumpDone = false;\nlet isJumping = false; // Flag to track the entire jump cycle\n\nlet mountain;\n\nlet ground1, ground2;\nlet interval = 500; // Switch every 500ms\nlet lastSwitch = 0;\nlet showFirst = true;\n\nfunction preload() {\n  bodyPose = ml5.bodyPose();\n  mountain = loadImage('/mountain.png');\n  ground1 = loadImage('ground1.png');\n  ground2 = loadImage('ground2.png');\n}\n\nfunction setup() {\n  createCanvas(640, 480);\n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n\n  bodyPose.detectStart(video, gotPoses);\n  connections = bodyPose.getSkeleton();\n}\n\nfunction draw() {\n  if (gameOver) {\n    fill(0);\n    textSize(32);\n    textAlign(CENTER, CENTER);\n    text(\"Game Over\", width / 2, height / 2);\n    return; // Stop the game loop if it's over\n  }\n\n  image(video, 0, 0, width, height);\n  background(123, 184, 255);\n  image(mountain, 0, 0);\n  fill(255);\n  rect(0, 380, width, 180);\n  \n    if (millis() - lastSwitch > interval) {\n    showFirst = !showFirst;\n    lastSwitch = millis();\n  }\n\n  if (showFirst) {\n    image(ground1, 0, 10, width, height);\n  } else {\n    image(ground2, 0, 10, width, height);\n  }\n// Reduce cooldown if active\n  if (motionCooldown > 0) {\n    motionCooldown--;\n  }\n\n  // Handle pose detection for jump and squat\n  for (let i = 0; i < poses.length; i++) {\n    let pose = poses[i];\n\n    if (pose.keypoints) {\n      let hip = pose.keypoints[12]; // Right hip keypoint\n      let knee = pose.keypoints[14]; // Right knee\n\n      if (hip && knee && hip.confidence > 0.1 && knee.confidence > 0.1) {\n        let currentKneeHipDistance = knee.y - hip.y;\n\n        if (previousKneeHipDistance !== null && motionCooldown === 0) {\n          let jumpThreshold = 20;\n          let squatRatioThreshold = 0.905; \n\n          // Jump Detection (Only detect if NOT already jumping)\n          if (previousY - hip.y > jumpThreshold && !isJumping && !dodge) {\n            console.log(\"Jump Detected!\");\n            isJumping = true; // Start full jump cycle\n            inMotion = true;\n            motionCooldown = 120; // 2 seconds cooldown (assuming 60 FPS)\n          }\n\n          // Dodge Detection (Squat)\n          if (currentKneeHipDistance < previousKneeHipDistance * squatRatioThreshold && !dodge && !isJumping) {\n            console.log(\"Dodge Detected!\");\n            dodge = true;\n          } else if (currentKneeHipDistance > previousKneeHipDistance * 1.05 && dodge) {\n            console.log(\"Standing Up!\");\n            dodge = false;\n            inMotion = false;\n          }\n        }\n\n        previousY = hip.y;\n        previousKneeHipDistance = currentKneeHipDistance;\n      }\n    }\n  }\n\n  // Handle rectangle position (jump & dodge logic)\n  fill(0);\n  noStroke();\n\n  dodgeHeight = dodge ? 0 : 30;\n  rheight = 50 + dodgeHeight;\n\n  if (isJumping) {\n    if (!jumpDone) {\n      jump -= 1.3; // Move up\n    }\n    \n    if (jump <= -90) {\n      jumpDone = true; // Start falling\n    }\n\n    if (jumpDone) {\n      jump += 1.3; // Move down\n\n      if (jump >= 0) {\n        jump = 0;\n        jumpDone = false;\n        isJumping = false; // Reset only when fully landed\n        inMotion = false;\n      }\n    }\n  }\n\n  rectY = 300 + jump + (30 - dodgeHeight);\n  rect(100, rectY, 50, rheight);\n\n  // Generate new particles every 500 frames\n  framecount++;\n  if (framecount % 500 === 0) {\n    createNewParticle();\n  }\n  \n  updateAndShowParticles();\n  checkCollisions();\n}\n\n// Function to handle new particle creation (synchronously)\nfunction createNewParticle() {\n  particles.push(new Particle()); // Add a new particle\n}\n\nfunction updateAndShowParticles() {\n  for (let i = particles.length - 1; i >= 0; i--) {\n    particles[i].update(); // Update position\n    particles[i].show(); // Display particle\n\n    // Remove off-screen particles\n    if (particles[i].offScreen()) {\n      particles.splice(i, 1);\n    }\n  }\n}\n\nfunction checkCollisions() {\n  let rectX = 100;\n  let rectBottom = rectY + rheight;\n  let rectRight = rectX + 50; // The rectangle's width is 50\n\n  for (let i = 0; i < particles.length; i++) {\n    let p = particles[i];\n\n    // Check if particle is within the rectangle's boundaries\n    if (\n      p.x >= rectX &&\n      p.x <= rectRight &&\n      p.y + 10 >= rectY &&\n      p.y <= rectBottom\n    ) {\n      console.log(\"Game Over: Particle hit the rectangle!\");\n      gameOver = true;\n      break;\n    }\n  }\n}\n\n// Particle Class\n\n// Function to handle pose detection\nfunction gotPoses(results) {\n  poses = results;\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a411f4507c10dd48144293",
        "createdAt": "2025-02-09T05:16:57.035Z",
        "updatedAt": "2025-02-09T05:16:57.035Z",
        "id": "67a411f4507c10dd48144293"
      },
      {
        "name": "particle.js",
        "content": "class Particle {\n  constructor() {\n    this.pwidth = 640;  \n    this.pheight = random(260, 360); // Random y-position for spawning\n    this.size = createVector(random(20, 35), random(20, 35)); // Random width & height\n    this.color = color(random(255), random(255), random(255)); // Random color\n\n    // Particle movement\n    this.x = this.pwidth;  \n    this.y = this.pheight; \n    this.speedX = -1;  \n    this.speedY = 0;  \n  }\n\n  update() {\n    // Move the particle\n    this.x += this.speedX;\n    this.y += this.speedY;\n  }\n\n  show() {\n    fill(0);\n    rect(this.x, this.y, this.size.x, this.size.y); // Draw single shape\n    fill(this.color);\n    rect(this.x + 2, this.y + 2, this.size.x - 4, this.size.y - 4); // Draw single shape\n  }\n\n  offScreen() {\n    return this.x < 0;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67a59b69d0b77072d5ba1751",
        "createdAt": "2025-02-09T05:16:57.035Z",
        "updatedAt": "2025-02-09T05:16:57.035Z",
        "id": "67a59b69d0b77072d5ba1751"
      },
      {
        "name": "New Piskel (3).png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/63d7ea40-123c-432f-975a-ddd8517dcf17.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a6f5878a4145569dda5bef",
        "createdAt": "2025-02-09T05:16:57.035Z",
        "updatedAt": "2025-02-09T05:16:57.035Z",
        "id": "67a6f5878a4145569dda5bef"
      },
      {
        "name": "New Piskel (4).png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/6841b1c3-9327-4ab8-9aec-c2e374375280.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a6f6038a4145569dda6538",
        "createdAt": "2025-02-09T05:16:57.035Z",
        "updatedAt": "2025-02-09T05:16:57.035Z",
        "id": "67a6f6038a4145569dda6538"
      },
      {
        "name": "New Piskel (5).png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/1135d8db-98e6-4ee4-b741-0c2758ff7336.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a6f6531f41d4093d4dd66c",
        "createdAt": "2025-02-09T05:16:57.035Z",
        "updatedAt": "2025-02-09T05:16:57.035Z",
        "id": "67a6f6531f41d4093d4dd66c"
      },
      {
        "name": "mountain.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/ebfdb5b4-8f30-448d-bbed-fcc51e010268.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a6f70e0e29be2678bb30f9",
        "createdAt": "2025-02-09T05:16:57.035Z",
        "updatedAt": "2025-02-09T05:16:57.035Z",
        "id": "67a6f70e0e29be2678bb30f9"
      },
      {
        "name": "ground1.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/5a9505b2-f18c-4f95-8cf5-8ac4d89d52e7.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a8334b1f41d4093dab1285",
        "createdAt": "2025-02-09T05:16:57.035Z",
        "updatedAt": "2025-02-09T05:16:57.035Z",
        "id": "67a8334b1f41d4093dab1285"
      },
      {
        "name": "ground2.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/3fc60eca-bd81-46b0-bcc7-c5f29120fba0.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a833505f90195c7bd282dd",
        "createdAt": "2025-02-09T05:16:57.035Z",
        "updatedAt": "2025-02-09T05:16:57.035Z",
        "id": "67a833505f90195c7bd282dd"
      }
    ],
    "createdAt": "2025-02-06T01:35:47.838Z",
    "updatedAt": "2025-02-09T05:16:57.035Z",
    "id": "x8Zy2iaY2"
  },
  {
    "_id": "WbDnZZi9u",
    "name": "Working Dino Game V1 copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67a83c4604d29a48297192fc",
          "67a83c4604d29a48297192fa",
          "67a83c4604d29a48297192fb",
          "67a90e437c19c646656ad896",
          "67a83c4604d29a48297192fd",
          "67a83c4604d29a48297192fe",
          "67a83c4604d29a48297192ff",
          "67a84c724861ac2113c8d47e",
          "67a83c4604d29a4829719300",
          "67a83c4604d29a4829719301",
          "67a83c4604d29a4829719302"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67a83c4604d29a48297192f9",
        "createdAt": "2025-02-10T03:49:47.530Z",
        "updatedAt": "2025-02-10T03:49:47.530Z",
        "id": "67a83c4604d29a48297192f9"
      },
      {
        "name": "index.html",
        "content": "<!--\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\n  Learn more about the ml5.js project: https://ml5js.org/\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\n\n  This example demonstrates drawing skeletons on poses for the MoveNet model.\n-->\n\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>ml5.js bodyPose Skeleton Example</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n    \n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n  </head>\n\n  <body>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a83c4604d29a48297192ff",
        "createdAt": "2025-02-10T03:49:47.530Z",
        "updatedAt": "2025-02-10T03:49:47.530Z",
        "id": "67a83c4604d29a48297192ff"
      },
      {
        "name": "sketch.js",
        "content": "let video;\nlet bodyPose;\nlet poses = [];\nlet connections;\nlet previousY = null;\nlet previousKneeHipDistance = null;\nlet jumpDetected = false;\nlet rectY = 300;\nlet velocityY = 0; // Vertical velocity\nlet gravity = 0.2; // Simulating gravity\nlet jumpStrength = -10; // Initial jump velocity\nlet dodge = false;\nlet rheight;\nlet dodgeHeight = 30;\nlet inMotion = false; \nlet motionCooldown = 0; \nlet particles = []; \nlet framecount = 0;\nlet gameOver = false; \nlet isJumping = false; \n\nlet mountain;\nlet cloud1, cloud2;\nlet ground1, ground2;\nlet interval = 500;\nlet lastSwitch = 0;\nlet showFirst = true;\nlet gameStarted = false; \nlet isCentered = false;\nlet paused = false; \nlet jumpNoise;\nlet rectTop = 0;\nlet endgamesound;\n\nlet particleSpeed = -1; // Starting speed\nlet speedIncreaseRate = 0.0005; // Rate at which speed increases\nlet cloud1x = 20;\nlet cloud2x = 400;\nlet rectr;\nlet rectg;\nlet rectb;\n\n\nfunction preload() {\n  bodyPose = ml5.bodyPose();\n  mountain = loadImage(\"/mountain.png\");\n  ground1 = loadImage(\"ground1.png\");\n  ground2 = loadImage(\"ground2.png\");\n  jumpNoise = loadSound(\"jump.mp3\");\n  endgamesound = loadSound(\"endgame.mp3\");\n  cloud1 = loadImage(\"cloud1.png\");\n  cloud2 = loadImage(\"cloud2.png\");\n}\n\nfunction setup() {\n  createCanvas(640, 480);\n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  bodyPose.detectStart(video, gotPoses);\n  connections = bodyPose.getSkeleton();\n  rectb = random(0, 255);\n  rectg = random(0, 255);\n  rectr = random(0, 255);\n}\n\nfunction draw() {\n  if (!gameStarted) {\n    checkPlayerCentered();\n    image(video, 0, 0, width, height);\n    fill(255);\n    noStroke();\n    rect(width/2 - 300, height/2 - 20, 600, 70)\n    fill(0);\n    textSize(24);\n    textAlign(CENTER, CENTER);\n    text(\"Stand with your head in the center to start\", width / 2, height / 2);\n    textSize(20);\n    text(\"Jump and dodge the incoming particles!\", width / 2, height / 2 + 30);\n    noFill();\n    stroke(0);\n    strokeWeight(4);\n    circle(width / 2, 100, 60);\n    return;\n  }\n\n  if (gameOver) {\n    fill(0);\n    textSize(32);\n    textAlign(CENTER, CENTER);\n    text(\"Game Over\", width / 2, height / 2);\n    return;\n  }\n\n  if (!isCentered) {\n    paused = true;\n    Recenter();\n    return;\n  }\n  \n  paused = false;\n\n  video.hide();\n  background(123, 184, 255);\n  image(mountain, 0, 0);\n  \n  cloud1x --;\n  cloud2x --;\n  if(cloud1x <= -200 && cloud2x <= 260){\n    cloud1x = 640;\n  }\n  \n    if(cloud2x <=-200 && cloud1x <= 260){\n    cloud2x = 640;\n  }\n  \n  image(cloud1, cloud1x, 50);\n  image(cloud2, cloud2x, 80);\n  \n  \n  \n  \n  fill(255);\n  rect(0, 380, width, 180);\n\n  if (millis() - lastSwitch > interval) {\n    showFirst = !showFirst;\n    lastSwitch = millis();\n  }\n\n  if (showFirst) {\n    image(ground1, 0, 10, width, height);\n  } else {\n    image(ground2, 0, 10, width, height);\n  }\n\n  if (motionCooldown > 0) {\n    motionCooldown--;\n  }\n\n  for (let i = 0; i < poses.length; i++) {\n    let pose = poses[i];\n\n    if (pose.keypoints) {\n      let pose = poses[0];\n      let head = pose.keypoints[0];\n      let headY = head.y;\n\n      if (head) {\n        if (motionCooldown === 0) {\n          if (headY <= 40 && !isJumping && !dodge) {\n            console.log(\"Jump Detected!\");\n            jumpNoise.play();\n            isJumping = true;\n            velocityY = jumpStrength; // Apply jump velocity\n            inMotion = true;\n            motionCooldown = 120;\n          }\n\n          if (headY >= 180 && !dodge && !isJumping) {\n            console.log(\"Dodge Detected!\");\n            dodge = true;\n          } else if (headY <= 130 && dodge) {\n            console.log(\"Standing Up!\");\n            dodge = false;\n            inMotion = false;\n          }\n        }\n      }\n    }\n  }\n\n  fill(0);\n  noStroke();\n\n  dodgeHeight = dodge ? 0 : 30;\n  rheight = 50 + dodgeHeight;\n\n  // Apply gravity and movement\n  velocityY += gravity;\n  rectY += velocityY;\n\n  // Ground collision\n  if (rectY >= 300) {\n    rectY = 300;\n    velocityY = 0;\n    isJumping = false;\n    inMotion = false;\n  }\n  \nrectTop = rectY + (30 - dodgeHeight);\n  fill(rectr, rectg, rectb);\n  rect(100, rectTop, 50, rheight);\n\n  framecount++;\n  if (framecount % 500 === 0) {\n    createNewParticle();\n  }\n\n  updateAndShowParticles();\n  checkCollisions();\n}\n\nfunction createNewParticle() {\n  particles.push(new Particle());\n}\n\nfunction updateAndShowParticles() {\n  particleSpeed -= speedIncreaseRate;\n  for (let i = particles.length - 1; i >= 0; i--) {\n    particles[i].speedX = particleSpeed; // Apply speed to all particles\n    particles[i].update();\n    particles[i].show();\n    if (particles[i].offScreen()) {\n      particles.splice(i, 1);\n    }\n  }\n}\n\nfunction checkCollisions() {\n  let rectX = 100;\n  let rectBottom = rectY + rheight;\n  let rectRight = rectX + 50;\n\n  for (let i = 0; i < particles.length; i++) {\n    let p = particles[i];\n\n    if (p.x >= rectX && p.x <= rectRight && p.y + 10 >= rectTop && p.y <= rectBottom) {\n      endgamesound.play();\n      console.log(\"Game Over: Particle hit the rectangle!\");\n      gameOver = true;\n      break;\n    }\n  }\n}\n\nfunction checkPlayerCentered() {\n  if (poses.length > 0) {\n    let pose = poses[0];\n    let head = pose.keypoints[0];\n    let feet = pose.keypoints[15];\n    let headY = head.y;\n    let headX = head.x;\n\n    if (head && feet) {\n      if (headY >= 90 && headY <= 110 && headX >= width / 2 - 10 && headX < width / 2 + 10) {\n        isCentered = true;\n        gameStarted = true;\n      }\n    }\n  }\n}\n\nfunction gotPoses(results) {\n  poses = results;\n}\n\nfunction Recenter() {\n  video.show();\n  image(video, 0, 0, width, height);\n  fill(0);\n  textSize(24);\n  noStroke();\n  textAlign(CENTER, CENTER);\n  text(\"Stand with your head in the center to continue\", width / 2, height / 2);\n  noFill();\n  strokeWeight(4);\n  stroke(0);\n  circle(width / 2, 100, 60);\n\n  if (poses.length > 0) {\n    let pose = poses[0];\n    let head = pose.keypoints[0];\n    let feet = pose.keypoints[15];\n    let headY = head.y;\n    let headX = head.x;\n\n    if (head && feet) {\n      if (headY >= 90 && headY <= 110 && headX >= width / 2 - 10 && headX < width / 2 + 10) {\n        isCentered = true;\n        paused = false;\n      }\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67a83c4604d29a4829719302",
        "createdAt": "2025-02-10T03:49:47.530Z",
        "updatedAt": "2025-02-10T03:49:47.530Z",
        "id": "67a83c4604d29a4829719302"
      },
      {
        "name": "particle.js",
        "content": "class Particle {\n  constructor() {\n    this.pwidth = 640;  \n    this.pheight = random(270, 360); // Random y-position for spawning\n    this.size = createVector(random(20, 35), random(20, 35)); // Random width & height\n    this.color = color(random(255), random(255), random(255)); // Random color\n\n    // Particle movement\n    this.x = this.pwidth;  \n    this.y = this.pheight; \n    this.speedX = particleSpeed; // Start with the global speed   \n    this.speedY = 0;  \n  }\n\n  update() {\n    // Move the particle\n    this.x += this.speedX;\n    this.y += this.speedY;\n  }\n\n  show() {\n    fill(0);\n    rect(this.x, this.y, this.size.x, this.size.y); // Draw single shape\n    fill(this.color);\n    rect(this.x + 2, this.y + 2, this.size.x - 4, this.size.y - 4); // Draw single shape\n  }\n\n  offScreen() {\n    return this.x < 0;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a83c4604d29a4829719301",
        "createdAt": "2025-02-10T03:49:47.530Z",
        "updatedAt": "2025-02-10T03:49:47.530Z",
        "id": "67a83c4604d29a4829719301"
      },
      {
        "name": "cloud1.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/f4087646-0c27-4518-a6d1-b850c7a47265.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a83c4604d29a48297192fa",
        "createdAt": "2025-02-10T03:49:47.530Z",
        "updatedAt": "2025-02-10T03:49:47.530Z",
        "id": "67a83c4604d29a48297192fa"
      },
      {
        "name": "cloud2.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/2a9b8b45-6552-4aea-810f-8ae3a93aefc9.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a83c4604d29a48297192fb",
        "createdAt": "2025-02-10T03:49:47.530Z",
        "updatedAt": "2025-02-10T03:49:47.530Z",
        "id": "67a83c4604d29a48297192fb"
      },
      {
        "name": "New Piskel (5).png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/2857d97f-066c-4c60-a437-16cd67fb85b2.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a83c4604d29a48297192fc",
        "createdAt": "2025-02-10T03:49:47.530Z",
        "updatedAt": "2025-02-10T03:49:47.530Z",
        "id": "67a83c4604d29a48297192fc"
      },
      {
        "name": "mountain.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/4004795a-caf0-49b6-a622-f01262547e10.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a83c4604d29a4829719300",
        "createdAt": "2025-02-10T03:49:47.530Z",
        "updatedAt": "2025-02-10T03:49:47.530Z",
        "id": "67a83c4604d29a4829719300"
      },
      {
        "name": "ground1.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/f4cdfcd2-9a1f-4120-b4a4-d3140687b8e1.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a83c4604d29a48297192fd",
        "createdAt": "2025-02-10T03:49:47.530Z",
        "updatedAt": "2025-02-10T03:49:47.530Z",
        "id": "67a83c4604d29a48297192fd"
      },
      {
        "name": "ground2.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/b19b0415-775e-4d74-be78-22d972156798.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a83c4604d29a48297192fe",
        "createdAt": "2025-02-10T03:49:47.530Z",
        "updatedAt": "2025-02-10T03:49:47.530Z",
        "id": "67a83c4604d29a48297192fe"
      },
      {
        "name": "jump.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/d8a79f52-daf4-435e-b07d-56b75d733f9d.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a84c724861ac2113c8d47e",
        "createdAt": "2025-02-10T03:49:47.530Z",
        "updatedAt": "2025-02-10T03:49:47.530Z",
        "id": "67a84c724861ac2113c8d47e"
      },
      {
        "name": "endgame.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/16beb971-4591-4f15-8768-09ae091de0d5.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a90e437c19c646656ad896",
        "createdAt": "2025-02-10T03:49:47.530Z",
        "updatedAt": "2025-02-10T03:49:47.530Z",
        "id": "67a90e437c19c646656ad896"
      }
    ],
    "createdAt": "2025-02-09T05:25:27.059Z",
    "updatedAt": "2025-02-10T03:49:47.530Z",
    "id": "WbDnZZi9u"
  },
  {
    "_id": "zWp8vn6jc",
    "name": "yushiwuzheng phone version",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67bd175ebad2e47092e0a770",
          "67bd1ae28e9343865c76ec76",
          "67bd175ebad2e47092e0a772",
          "67bd175ebad2e47092e0a773",
          "67bd175ebad2e47092e0a774",
          "67bd175ebad2e47092e0a775",
          "67bd175ebad2e47092e0a776",
          "67bd175ebad2e47092e0a777",
          "67bd175ebad2e47092e0a778",
          "67bd175ebad2e47092e0a779",
          "67bd175ebad2e47092e0a77a",
          "67bd175ebad2e47092e0a77b"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67bd175ebad2e47092e0a76f",
        "createdAt": "2025-02-25T01:21:23.452Z",
        "updatedAt": "2025-02-25T01:21:23.452Z",
        "id": "67bd175ebad2e47092e0a76f"
      },
      {
        "name": "index.html",
        "content": "<!--\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\n  Learn more about the ml5.js project: https://ml5js.org/\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\n\n  This example demonstrates hand tracking on live video through ml5.handPose.\n-->\n\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ml5.js handPose Webcam Example</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/addons/p5.sound.min.js\"></script>\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n    <script src=\"backgrounds.js\"></script>\n    <script>\n  document.addEventListener(\"DOMContentLoaded\", function() {\n    let video = document.getElementById(\"backgroundVideo\");\n\n    document.addEventListener(\"click\", function() {\n      if (video && video.paused) {\n        video.play();\n      }\n    });\n  });\n</script>\n\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bd175ebad2e47092e0a774",
        "createdAt": "2025-02-25T01:21:23.452Z",
        "updatedAt": "2025-02-25T01:21:23.452Z",
        "id": "67bd175ebad2e47092e0a774"
      },
      {
        "name": "sketch.js",
        "content": "let ps = []; // this is for the system\n//let backgrounds = [];\nlet repeatCount = 0;\nlet maxRepeats = 7;\nlet p = null;\nlet Speed = 1;\n\nlet handPose;\nlet video;\nlet hands = [];\nlet open = false;\nlet pushed = false;\n\nlet prevHandPos = null; // Stores previous position of keypoint 9\nlet moveThreshold = 140; // Distance threshold for detecting movement\n\nlet particleGenerated = false; // Track if a particle has been generated for movement\n\nlet backgroundVideo;\n\nlet water1, water2, water3, water4;\nlet water = [];\n\nlet started = false;\nlet font;\nlet a = 255;\nlet increasing = true;\n\nlet backgroundmusic;\nlet backgroundmusicplaying = false;\n\nfunction preload() {\n   backgroundmusic = loadSound(\"guzhen.MP3\", () => {\n    console.log(\"Background music loaded\");\n  });\n  handPose = ml5.handPose();\n  water1 = loadSound(\"water1.MP3\");\n  water2 = loadSound(\"water2.MP3\");\n  water3 = loadSound(\"water3.MP3\");\n  water4 = loadSound(\"water4.MP3\");\n\n  water = [water1, water2, water3, water4];\n  backgroundVideo = createVideo(\"background.mp4\"); // Ensure the file exists\n  font = loadFont(\"KingsguardCalligraphy.otf\", () => {\n    console.log(\"font loaded\");\n  });\n}\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n\n  video = createCapture(VIDEO);\n  video.size(windowWidth, windowHeight);\n  video.hide();\n  // start detecting hands from the webcam video\n  handPose.detectStart(video, gotHands);\n\n  backgroundVideo.size(windowWidth, windowHeight);\n  backgroundVideo.loop(); // Ensures the video plays continuously\n  backgroundVideo.hide(); // Prevents default HTML video display\n  backgroundVideo.volume(0);\n}\n\nfunction draw() {\n  // Draw the webcam video\n  resizeCanvas(windowWidth, windowHeight);\n  background(0, 0, 0, 255);\n  \n  push();\n  translate(width, 0); // Move origin to right\n  scale(-1, 1); // Flip horizontally\n  rectMode(CORNER);\n\n  // backgroundVideo.play();\n  backgroundVideo.speed(Speed);\n  image(backgroundVideo, 0, 0, windowWidth, windowHeight);\n\n  for (let i = ps.length - 1; i >= 0; i--) {\n    ps[i].update();\n    ps[i].display();\n\n    if (ps[i].done == true) {\n      this.resetTimeout = setTimeout(() => {}, 7000);\n      console.log(\"Speed reset to 1 after 3 seconds\");\n      Speed = 1;\n    }\n\n    if (ps[i].done) {\n      ps.splice(i, 1);\n    }\n  }\n  \n\n\n  // Draw all the tracked hand points\n  for (let i = 0; i < hands.length; i++) {\n    let hand = hands[i];\n    // for (let j = 0; j < hand.keypoints.length; j++) {\n    //   let keypoint = hand.keypoints[j];\n    //   fill(0, 255, 0);\n    //   noStroke();\n    //   circle(keypoint.x, keypoint.y, 10);\n    // }\n    if (isHandOpen(hand)) {\n      // fill(255, 0, 0);\n      // textSize(32);\n      // text(\"Hand is OPEN\", 50, 50);\n      open = true;\n    } else {\n      // fill(0, 0, 255);\n      // textSize(32);\n      // text(\"Hand is CLOSED\", 50, 50);\n      open = false;\n      pushed = false;\n    }\n\n    if (open == true && pushed == false) {\n      let handposition = hand.keypoints[9];\n\n      p = new Particle(handposition.x, handposition.y);\n      ps.push(new System(handposition.x, handposition.y));\n      for (let i = 0; i < 3; i++) {\n        setTimeout(\n          () => ps.push(new System(handposition.x, handposition.y)),\n          200 + i * 200\n        );\n\n        Speed = 4;\n        pushed = true;\n\n        let soundIndex = floor(random(0, 3));\n        if (!water[soundIndex].isPlaying()) {\n          water[soundIndex].play();\n        }\n      }\n    }\n    let currentHandPos = hand.keypoints[9];\n\n    fill(255);\n\n    if (open) {\n      stroke(255);\n      strokeWeight(5);\n      noFill();\n      circle(currentHandPos.x, currentHandPos.y, 15, 15);\n    } else if (!open) {\n      circle(currentHandPos.x, currentHandPos.y, 10, 10);\n      // Speed = 1;\n    }\n\n    if (prevHandPos) {\n      // Calculate distance moved\n      let distanceMoved = dist(\n        currentHandPos.x,\n        currentHandPos.y,\n        prevHandPos.x,\n        prevHandPos.y\n      );\n\n      // Check if movement is significant\n      if (distanceMoved > moveThreshold && open == true) {\n        // fill(0, 255, 0);\n        // textSize(32);\n        // text(\"Hand MOVED\", 50, 100);\n\n        for (let i = 0; i < 3; i++) {\n          setTimeout(\n            () => ps.push(new System(currentHandPos.x, currentHandPos.y)),\n            200 + i * 200\n          );\n          particleGenerated = true;\n        }\n\n        Speed = 4;\n        let soundIndex = floor(random(0, 3));\n        if (!water[soundIndex].isPlaying()) {\n          water[soundIndex].play();\n        }\n      } else if (distanceMoved < moveThreshold * 0.8) {\n        particleGenerated = false;\n      }\n    }\n    // Update previous hand position for next frame\n    prevHandPos = { x: currentHandPos.x, y: currentHandPos.y };\n  }\n    pop();\n  noStroke();\n  if (started == false) {\n    textSize(35);\n\n    if (a >= 255) {\n      increasing = false;\n    } else if (a <= 150) {\n      increasing = true;\n    }\n\n    if (increasing) {\n      a = a + 1.5;\n    } else {\n      a = a - 1.5;\n    }\n\n    fill(255, a);\n    textAlign(CENTER, CENTER);\n    textFont(font);\n    text(\n      \"Click to enter a new realm. Open, close, and wave one hand to interact\",\n      windowWidth / 2,\n      windowHeight / 2 - 30\n    );\n    text(\n      \"'Finding peace within yourself and the world around you is the greatest achievement of all'\",\n      windowWidth / 2,\n      windowHeight / 2 + 30\n    );\n  }\n\n  \n}\n\nfunction isHandOpen(hand) {\n  let threshold = 100; // Adjust based on testing\n\n  let thumbTip = hand.keypoints[4];\n  let indexTip = hand.keypoints[8];\n  let middleTip = hand.keypoints[12];\n  let ringTip = hand.keypoints[16];\n  let pinkyTip = hand.keypoints[20];\n\n  let indexKnuckle = hand.keypoints[5];\n  let middleKnuckle = hand.keypoints[9];\n  let ringKnuckle = hand.keypoints[13];\n  let pinkyKnuckle = hand.keypoints[17];\n\n  // Measure distances\n  let indexDist = dist(indexTip.x, indexTip.y, indexKnuckle.x, indexKnuckle.y);\n  let middleDist = dist(\n    middleTip.x,\n    middleTip.y,\n    middleKnuckle.x,\n    middleKnuckle.y\n  );\n  let ringDist = dist(ringTip.x, ringTip.y, ringKnuckle.x, ringKnuckle.y);\n  let pinkyDist = dist(pinkyTip.x, pinkyTip.y, pinkyKnuckle.x, pinkyKnuckle.y);\n\n  // If most fingers are extended, consider the hand open\n  if (\n    indexDist > threshold &&\n    middleDist > threshold &&\n    pinkyDist > threshold\n  ) {\n    return true; // Hand is open\n  } else {\n    return false; // Hand is closed\n  }\n}\n\nfunction mousePressed() {\n      if (!backgroundmusicplaying) {\n        backgroundmusic.loop();\n        backgroundmusicplaying = true;\n    }\n    backgroundVideo.play();\n    started = true;\n}\n\nclass System {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n\n    this.particles = [];\n    this.num = 150;\n    for (let i = 0; i < this.num; i++) {\n      this.particles.push(new Particle(this.x, this.y));\n    }\n    //console.log(\"hello\");\n    this.done = false;\n  }\n\n  update() {\n    this.finished();\n    for (let i = this.particles.length - 1; i >= 0; i--) {\n      this.particles[i].update();\n\n      if (this.particles[i].done) {\n        this.particles.splice(i, 1);\n      }\n    }\n  }\n\n  display() {\n    for (let i = 0; i < this.particles.length; i++) {\n      this.particles[i].display();\n    }\n  }\n\n  finished() {\n    if (this.particles.length == 0) {\n      this.done = true;\n    } else {\n      this.done = false;\n    }\n  }\n}\n\nfunction startVideo() {\n  let videoElement = document.getElementById(\"backgroundVideo\");\n  if (videoElement && videoElement.paused) {\n    videoElement\n      .play()\n      .catch((error) => console.log(\"Autoplay blocked:\", error));\n  }\n}\n\n// Modify gotHands() to trigger startVideo() when a hand appears\nfunction gotHands(results) {\n  hands = results;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bd175ebad2e47092e0a776",
        "createdAt": "2025-02-25T01:21:23.452Z",
        "updatedAt": "2025-02-25T01:21:23.452Z",
        "id": "67bd175ebad2e47092e0a776"
      },
      {
        "name": "particle.js",
        "content": "class Particle {\n  constructor(x, y) {\n    this.pos = createVector(x, y);\n    this.vel = createVector(0, 0);\n    this.acc = p5.Vector.random2D();\n    this.acc.mult(0.03);\n    this.life = 255;\n    this.done = false;\n    this.hueValue = 0;\n    this.color1 = 163;\n    this.color2 = 212;\n  }\n\n  update() {\n    if (this.pos.x <= 0 || this.pos.x >= width) {\n      //this.acc.x = this.acc.x * -1;\n      this.vel.x = this.vel.x * -1;\n    }\n\n    if (this.pos.y <= 0 || this.pos.y >= height) {\n      //this.acc.y = this.acc * -1;\n      this.vel.y = this.vel.y * -1;\n    }\n\n    this.finished();\n\n    this.vel.add(this.acc);\n    this.pos.add(this.vel);\n\n    this.life -= 3;\n  }\n  display() {\n    noStroke();\n    //  let oscillation = sin(frameCount * 0.05); // Adjust speed by changing 0.05\n    // let blueShade = map(oscillation, -1, 1, 255, 100); // Dark blue (50) to light blue (200)\n    this.color1 += 1.5;\n    this.color2 += 1.5;\n\n    fill(this.color1, this.color2, 255, this.life); // RGB (0, 0, blueShade)\n    ellipse(this.pos.x, this.pos.y, 8, 8);\n  }\n\n  finished() {\n    if (this.life < 0) {\n      this.done = true;\n    } else {\n      this.done = false;\n    }\n  }\n\n  positionX() {\n    return this.pos.x;\n  }\n\n  positionY() {\n    return this.pos.y;\n  }\n\n  // Set a timeout to reset Speed to 1 after 3 seconds\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bd175ebad2e47092e0a775",
        "createdAt": "2025-02-25T01:21:23.452Z",
        "updatedAt": "2025-02-25T01:21:23.452Z",
        "id": "67bd175ebad2e47092e0a775"
      },
      {
        "name": "backgrounds.js",
        "content": "class Background {\n  constructor(x, y){\n    this.radius = createVector(x, y)\n    this.size = createVector(1, 1)\n    this.life = 255;\n    this.done = false; \n  }\n  \n  update(){\n    if(this.radius <= 50 || this.radius >= 50){\n      this.size * -1;\n    }\n    \n    this.finished();\n    this.radius.add(this.size);\n    this.life -= 1.6;\n  }\n  display(){   \n    noStroke();\n    fill(random(160, 180), random(160,180), 160, this.life);\n    circle(random(0, width), random(0, height), this.radius);\n  }\n\n  finished(){\n    if (this.life < 0){\n      this.done = true;\n    } else {\n      this.done = false;\n    }\n  }\n} ",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bd175ebad2e47092e0a772",
        "createdAt": "2025-02-25T01:21:23.452Z",
        "updatedAt": "2025-02-25T01:21:23.452Z",
        "id": "67bd175ebad2e47092e0a772"
      },
      {
        "name": "style.css",
        "content": "\nhtml, body {\n  margin: 0;\n  padding: 0;\n  overflow: hidden; /* Prevents scrolling */\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67bd175ebad2e47092e0a777",
        "createdAt": "2025-02-25T01:21:23.452Z",
        "updatedAt": "2025-02-25T01:21:23.452Z",
        "id": "67bd175ebad2e47092e0a777"
      },
      {
        "name": "KingsguardCalligraphy.otf",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/2bfb8da7-3872-4074-9cab-4e4c5856b06e.otf",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bd175ebad2e47092e0a770",
        "createdAt": "2025-02-25T01:21:23.452Z",
        "updatedAt": "2025-02-25T01:21:23.452Z",
        "id": "67bd175ebad2e47092e0a770"
      },
      {
        "name": "guzhen.MP3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/4b29abde-e5d1-45e2-a308-f5ca3d1c9147.MP3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bd175ebad2e47092e0a773",
        "createdAt": "2025-02-25T01:21:23.452Z",
        "updatedAt": "2025-02-25T01:21:23.452Z",
        "id": "67bd175ebad2e47092e0a773"
      },
      {
        "name": "water4.MP3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/f159564e-bc10-44cf-a94d-95e1020393b3.MP3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bd175ebad2e47092e0a77b",
        "createdAt": "2025-02-25T01:21:23.452Z",
        "updatedAt": "2025-02-25T01:21:23.452Z",
        "id": "67bd175ebad2e47092e0a77b"
      },
      {
        "name": "water2.MP3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/9325f41a-7351-46a3-b20a-6374d0e09ffa.MP3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bd175ebad2e47092e0a779",
        "createdAt": "2025-02-25T01:21:23.452Z",
        "updatedAt": "2025-02-25T01:21:23.452Z",
        "id": "67bd175ebad2e47092e0a779"
      },
      {
        "name": "water1.MP3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/02dc9ea0-7779-49ec-ab64-17659960d49c.MP3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bd175ebad2e47092e0a778",
        "createdAt": "2025-02-25T01:21:23.452Z",
        "updatedAt": "2025-02-25T01:21:23.452Z",
        "id": "67bd175ebad2e47092e0a778"
      },
      {
        "name": "water3.MP3",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/0d9eca14-9d1f-45b4-b229-092c7da0d2f7.MP3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bd175ebad2e47092e0a77a",
        "createdAt": "2025-02-25T01:21:23.452Z",
        "updatedAt": "2025-02-25T01:21:23.452Z",
        "id": "67bd175ebad2e47092e0a77a"
      },
      {
        "name": "background.mp4",
        "content": "",
        "url": "https://assets.editor.p5js.org/66fc73f5e815f3420e5c712a/ff52ced7-ca60-493b-97db-1d43144eb66c.mp4",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bd1ae28e9343865c76ec76",
        "createdAt": "2025-02-25T01:21:23.452Z",
        "updatedAt": "2025-02-25T01:21:23.452Z",
        "id": "67bd1ae28e9343865c76ec76"
      }
    ],
    "createdAt": "2025-02-25T01:05:35.443Z",
    "updatedAt": "2025-02-25T01:21:23.452Z",
    "id": "zWp8vn6jc"
  },
  {
    "_id": "V4DxNFIAF",
    "name": "Zesty sesame",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6738f1a097a2b011b2a6ff81",
          "6738f1a097a2b011b2a6ff80",
          "6738f1a097a2b011b2a6ff82"
        ],
        "fileType": "folder",
        "_id": "6738f1a097a2b011b2a6ff83",
        "createdAt": "2024-11-16T19:29:59.603Z",
        "updatedAt": "2024-11-16T19:29:59.603Z",
        "id": "6738f1a097a2b011b2a6ff83"
      },
      {
        "name": "sketch.js",
        "content": "let colors;\n\nfunction setup() {\n  createCanvas(400, 400);\n  colors = [\n    color(\"#ace1ef\"),\n    color(\"#f5aec6\"),\n    color(\"#c2f1c0\")\n  ];\n}\n\nfunction draw() {\n  background(255);\n\n  // Set center and radius for the circle\n  let x = width / 2;\n  let y = height / 2;\n  let radius = 100;\n\n  // Draw a smooth gradient by blending colors\n  for (let i = 0; i <= 360; i++) {\n    let interColor;\n    if (i < 120) {\n      interColor = lerpColor(colors[0], colors[1], i / 120);\n    } else if (i < 240) {\n      interColor = lerpColor(colors[1], colors[2], (i - 120) / 120);\n    } else {\n      interColor = lerpColor(colors[2], colors[0], (i - 240) / 120);\n    }\n\n    stroke(interColor);\n    strokeWeight(2);\n    let angle = radians(i);\n    let x1 = x + cos(angle) * radius;\n    let y1 = y + sin(angle) * radius;\n    line(x, y, x1, y1);\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6738f1a097a2b011b2a6ff80",
        "createdAt": "2024-11-16T19:29:59.603Z",
        "updatedAt": "2024-11-16T19:29:59.603Z",
        "id": "6738f1a097a2b011b2a6ff80"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6738f1a097a2b011b2a6ff81",
        "createdAt": "2024-11-16T19:29:59.603Z",
        "updatedAt": "2024-11-16T19:29:59.603Z",
        "id": "6738f1a097a2b011b2a6ff81"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6738f1a097a2b011b2a6ff82",
        "createdAt": "2024-11-16T19:29:59.603Z",
        "updatedAt": "2024-11-16T19:29:59.603Z",
        "id": "6738f1a097a2b011b2a6ff82"
      }
    ],
    "updatedAt": "2024-11-16T19:29:59.603Z",
    "createdAt": "2024-11-16T19:29:59.603Z",
    "id": "V4DxNFIAF"
  }
]
